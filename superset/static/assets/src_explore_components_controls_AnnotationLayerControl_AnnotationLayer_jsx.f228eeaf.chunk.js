/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunksuperset"] = globalThis["webpackChunksuperset"] || []).push([["src_explore_components_controls_AnnotationLayerControl_AnnotationLayer_jsx"],{

/***/ "./src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx":
/*!************************************************************************************!*\
  !*** ./src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx ***!
  \************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AnnotationLayer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-color */ \"./node_modules/react-color/lib/index.js\");\n/* harmony import */ var src_components_Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/Button */ \"./src/components/Button/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/chart/registries/ChartMetadataRegistrySingleton.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/math-expression/index.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/validator/validateNonEmpty.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/connection/SupersetClient.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/color/CategoricalSchemeRegistrySingleton.ts\");\n/* harmony import */ var src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/explore/components/controls/SelectControl */ \"./src/explore/components/controls/SelectControl.jsx\");\n/* harmony import */ var src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/explore/components/controls/TextControl */ \"./src/explore/components/controls/TextControl/index.tsx\");\n/* harmony import */ var src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/explore/components/controls/CheckboxControl */ \"./src/explore/components/controls/CheckboxControl.jsx\");\n/* harmony import */ var src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/modules/AnnotationTypes */ \"./src/modules/AnnotationTypes.js\");\n/* harmony import */ var src_components_PopoverSection__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/components/PopoverSection */ \"./src/components/PopoverSection/index.tsx\");\n/* harmony import */ var src_explore_components_ControlHeader__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/explore/components/ControlHeader */ \"./src/explore/components/ControlHeader.tsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst AUTOMATIC_COLOR = '';\n\nconst propTypes = {\n  name: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string),\n  annotationType: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string),\n  sourceType: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string),\n  color: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string),\n  opacity: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string),\n  style: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string),\n  width: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().number),\n  showMarkers: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().bool),\n  hideLine: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().bool),\n  value: prop_types__WEBPACK_IMPORTED_MODULE_1___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_1___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_1___default().number)]),\n  overrides: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().object),\n  show: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().bool),\n  showLabel: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().bool),\n  titleColumn: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string),\n  descriptionColumns: prop_types__WEBPACK_IMPORTED_MODULE_1___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_1___default().string)),\n  timeColumn: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string),\n  intervalEndColumn: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string),\n  vizType: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string),\n\n  error: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string),\n  colorScheme: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string),\n\n  addAnnotationLayer: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().func),\n  removeAnnotationLayer: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().func),\n  close: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().func) };\n\n\nconst defaultProps = {\n  name: '',\n  annotationType: src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.DEFAULT_ANNOTATION_TYPE,\n  sourceType: '',\n  color: AUTOMATIC_COLOR,\n  opacity: '',\n  style: 'solid',\n  width: 1,\n  showMarkers: false,\n  hideLine: false,\n  overrides: {},\n  colorScheme: 'd3Category10',\n  show: true,\n  showLabel: false,\n  titleColumn: '',\n  descriptionColumns: [],\n  timeColumn: '',\n  intervalEndColumn: '',\n\n  addAnnotationLayer: () => {},\n  removeAnnotationLayer: () => {},\n  close: () => {} };var _ref =  false ? 0 : { name: \"1jn9azd-AnnotationLayer\", styles: \"overflow:hidden;text-overflow:ellipsis;white-space:nowrap;label:AnnotationLayer;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\n\nclass AnnotationLayer extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n  constructor(props) {\n    super(props);\n    const {\n      name,\n      annotationType,\n      sourceType,\n      color,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      value,\n      overrides,\n      show,\n      showLabel,\n      titleColumn,\n      descriptionColumns,\n      timeColumn,\n      intervalEndColumn,\n      vizType } =\n    props;\n\n    // Only allow override whole time_range\n    if ('since' in overrides || 'until' in overrides) {\n      overrides.time_range = null;\n      delete overrides.since;\n      delete overrides.until;\n    }\n\n    // Check if annotationType is supported by this chart\n    const metadata = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__[\"default\"])().get(vizType);\n    const supportedAnnotationTypes = (metadata == null ? void 0 : metadata.supportedAnnotationTypes) || [];\n    const validAnnotationType = supportedAnnotationTypes.includes(\n    annotationType) ?\n\n    annotationType :\n    supportedAnnotationTypes[0];\n\n    this.state = {\n      // base\n      name,\n      annotationType: validAnnotationType,\n      sourceType,\n      value,\n      overrides,\n      show,\n      showLabel,\n      // slice\n      titleColumn,\n      descriptionColumns,\n      timeColumn,\n      intervalEndColumn,\n      // display\n      color: color || AUTOMATIC_COLOR,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      // refData\n      isNew: !name,\n      isLoadingOptions: true,\n      valueOptions: [] };\n\n    this.submitAnnotation = this.submitAnnotation.bind(this);\n    this.deleteAnnotation = this.deleteAnnotation.bind(this);\n    this.applyAnnotation = this.applyAnnotation.bind(this);\n    this.fetchOptions = this.fetchOptions.bind(this);\n    this.handleAnnotationType = this.handleAnnotationType.bind(this);\n    this.handleAnnotationSourceType =\n    this.handleAnnotationSourceType.bind(this);\n    this.handleValue = this.handleValue.bind(this);\n    this.isValidForm = this.isValidForm.bind(this);\n  }\n\n  componentDidMount() {\n    const { annotationType, sourceType, isLoadingOptions } = this.state;\n    this.fetchOptions(annotationType, sourceType, isLoadingOptions);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.sourceType !== this.state.sourceType) {\n      this.fetchOptions(this.state.annotationType, this.state.sourceType, true);\n    }\n  }\n\n  getSupportedSourceTypes(annotationType) {var _ANNOTATION_TYPES_MET;\n    // Get vis types that can be source.\n    const sources = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__[\"default\"])().\n    entries().\n    filter(({ value: chartMetadata }) =>\n    chartMetadata.canBeAnnotationType(annotationType)).\n\n    map(({ key, value: chartMetadata }) => ({\n      value: key,\n      label: chartMetadata.name }));\n\n    // Prepend native source if applicable\n    if ((_ANNOTATION_TYPES_MET = src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_TYPES_METADATA[annotationType]) != null && _ANNOTATION_TYPES_MET.supportNativeSource) {\n      sources.unshift(src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_SOURCE_TYPES_METADATA.NATIVE);\n    }\n    return sources;\n  }\n\n  isValidFormulaAnnotation(expression, annotationType) {\n    if (annotationType === src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_TYPES.FORMULA) {\n      return (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.isValidExpression)(expression);\n    }\n    return true;\n  }\n\n  isValidForm() {\n    const {\n      name,\n      annotationType,\n      sourceType,\n      value,\n      timeColumn,\n      intervalEndColumn } =\n    this.state;\n    const errors = [\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(name),\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(annotationType),\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(value)];\n\n    if (sourceType !== src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_SOURCE_TYPES.NATIVE) {\n      if (annotationType === src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_TYPES.EVENT) {\n        errors.push((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(timeColumn));\n      }\n      if (annotationType === src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_TYPES.INTERVAL) {\n        errors.push((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(timeColumn));\n        errors.push((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(intervalEndColumn));\n      }\n    }\n    errors.push(!this.isValidFormulaAnnotation(value, annotationType));\n    return !errors.filter((x) => x).length;\n  }\n\n  handleAnnotationType(annotationType) {\n    this.setState({\n      annotationType,\n      sourceType: null,\n      value: null });\n\n  }\n\n  handleAnnotationSourceType(sourceType) {\n    const { sourceType: prevSourceType } = this.state;\n\n    if (prevSourceType !== sourceType) {\n      this.setState({ sourceType, value: null, isLoadingOptions: true });\n    }\n  }\n\n  handleValue(value) {\n    this.setState({\n      value,\n      descriptionColumns: [],\n      intervalEndColumn: null,\n      timeColumn: null,\n      titleColumn: null,\n      overrides: { time_range: null } });\n\n  }\n\n  fetchOptions(annotationType, sourceType, isLoadingOptions) {\n    if (isLoadingOptions) {\n      if (sourceType === src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_SOURCE_TYPES.NATIVE) {\n        _superset_ui_core__WEBPACK_IMPORTED_MODULE_13__[\"default\"].get({\n          endpoint: '/annotationlayermodelview/api/read?' }).\n        then(({ json }) => {\n          const layers = json ?\n          json.result.map((layer) => ({\n            value: layer.id,\n            label: layer.name })) :\n\n          [];\n          this.setState({\n            isLoadingOptions: false,\n            valueOptions: layers });\n\n        });\n      } else if ((0,src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.requiresQuery)(sourceType)) {\n        _superset_ui_core__WEBPACK_IMPORTED_MODULE_13__[\"default\"].get({ endpoint: '/superset/user_slices' }).then(\n        ({ json }) => {\n          const registry = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__[\"default\"])();\n          this.setState({\n            isLoadingOptions: false,\n            valueOptions: json.\n            filter((x) => {\n              const metadata = registry.get(x.viz_type);\n              return (\n                metadata && metadata.canBeAnnotationType(annotationType));\n\n            }).\n            map((x) => ({ value: x.id, label: x.title, slice: x })) });\n\n        });\n\n      } else {\n        this.setState({\n          isLoadingOptions: false,\n          valueOptions: [] });\n\n      }\n    }\n  }\n\n  deleteAnnotation() {\n    this.props.removeAnnotationLayer();\n    this.props.close();\n  }\n\n  applyAnnotation() {\n    if (this.isValidForm()) {\n      const annotationFields = [\n      'name',\n      'annotationType',\n      'sourceType',\n      'color',\n      'opacity',\n      'style',\n      'width',\n      'showMarkers',\n      'hideLine',\n      'value',\n      'overrides',\n      'show',\n      'showLabel',\n      'titleColumn',\n      'descriptionColumns',\n      'timeColumn',\n      'intervalEndColumn'];\n\n      const newAnnotation = {};\n      annotationFields.forEach((field) => {\n        if (this.state[field] !== null) {\n          newAnnotation[field] = this.state[field];\n        }\n      });\n\n      if (newAnnotation.color === AUTOMATIC_COLOR) {\n        newAnnotation.color = null;\n      }\n\n      this.props.addAnnotationLayer(newAnnotation);\n      this.setState({ isNew: false });\n    }\n  }\n\n  submitAnnotation() {\n    this.applyAnnotation();\n    this.props.close();\n  }\n\n  renderOption(option) {\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"span\", {\n        css: _ref,\n\n\n\n\n        title: option.label },\n\n      option.label));\n\n\n  }\n\n  renderValueConfiguration() {\n    const {\n      annotationType,\n      sourceType,\n      value,\n      valueOptions,\n      isLoadingOptions } =\n    this.state;\n    let label = '';\n    let description = '';\n    if ((0,src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.requiresQuery)(sourceType)) {\n      if (sourceType === src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_SOURCE_TYPES.NATIVE) {\n        label = 'Annotation layer';\n        description = 'Select the Annotation Layer you would like to use.';\n      } else {\n        label = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Chart');\n        description = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)(\n        `Use another existing chart as a source for annotations and overlays.\n          Your chart must be one of these visualization types: [%s]`,\n        this.getSupportedSourceTypes(annotationType).\n        map((x) => x.label).\n        join(', '));\n\n      }\n    } else if (annotationType === src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_TYPES.FORMULA) {\n      label = 'Formula';\n      description = `Expects a formula with depending time parameter 'x'\n        in milliseconds since epoch. mathjs is used to evaluate the formulas.\n        Example: '2x+5'`;\n    }\n    if ((0,src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.requiresQuery)(sourceType)) {\n      return (\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer value'),\n          name: \"annotation-layer-value\",\n          showHeader: true,\n          hovered: true,\n          description: description,\n          label: label,\n          placeholder: \"\",\n          options: valueOptions,\n          isLoading: isLoadingOptions,\n          value: value,\n          onChange: this.handleValue,\n          validationErrors: !value ? ['Mandatory'] : [],\n          optionRenderer: this.renderOption }));\n\n\n    }\n    if (annotationType === src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_TYPES.FORMULA) {\n      return (\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n          name: \"annotation-layer-value\",\n          hovered: true,\n          showHeader: true,\n          description: description,\n          label: label,\n          placeholder: \"\",\n          value: value,\n          onChange: this.handleValue,\n          validationErrors:\n          !this.isValidFormulaAnnotation(value, annotationType) ?\n          ['Bad formula.'] :\n          [] }));\n\n\n\n    }\n    return '';\n  }\n\n  renderSliceConfiguration() {\n    const {\n      annotationType,\n      sourceType,\n      value,\n      valueOptions,\n      overrides,\n      titleColumn,\n      timeColumn,\n      intervalEndColumn,\n      descriptionColumns } =\n    this.state;\n    const { slice } = valueOptions.find((x) => x.value === value) || {};\n    if (sourceType !== src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_SOURCE_TYPES.NATIVE && slice) {\n      const columns = (slice.data.groupby || []).\n      concat(slice.data.all_columns || []).\n      map((x) => ({ value: x, label: x }));\n      const timeColumnOptions = slice.data.include_time ?\n      [{ value: '__timestamp', label: '__timestamp' }].concat(columns) :\n      columns;\n      return (\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", { style: { marginRight: '2rem' } },\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_PopoverSection__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n          isSelected: true,\n          title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation Slice Configuration'),\n          info: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)(`This section allows you to configure how to use the slice\n               to generate annotations.`) },\n\n        (annotationType === src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_TYPES.EVENT ||\n        annotationType === src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_TYPES.INTERVAL) &&\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer time column'),\n          hovered: true,\n          name: \"annotation-layer-time-column\",\n          label:\n          annotationType === src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_TYPES.INTERVAL ?\n          (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Interval start column') :\n          (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Event time column'),\n\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)(\n          'This column must contain date/time information.'),\n\n          validationErrors: !timeColumn ? ['Mandatory'] : [],\n          clearable: false,\n          options: timeColumnOptions,\n          value: timeColumn,\n          onChange: (v) => this.setState({ timeColumn: v }) }),\n\n\n        annotationType === src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_TYPES.INTERVAL &&\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer interval end'),\n          hovered: true,\n          name: \"annotation-layer-intervalEnd\",\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Interval End column'),\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)(\n          'This column must contain date/time information.'),\n\n          validationErrors: !intervalEndColumn ? ['Mandatory'] : [],\n          options: columns,\n          value: intervalEndColumn,\n          onChange: (value) => this.setState({ intervalEndColumn: value }) }),\n\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer title column'),\n          hovered: true,\n          name: \"annotation-layer-title\",\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Title Column'),\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Pick a title for you annotation.'),\n          options: [{ value: '', label: 'None' }].concat(columns),\n          value: titleColumn,\n          onChange: (value) => this.setState({ titleColumn: value }) }),\n\n        annotationType !== src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_TYPES.TIME_SERIES &&\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer description columns'),\n          hovered: true,\n          name: \"annotation-layer-title\",\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Description Columns'),\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)(\n          \"Pick one or more columns that should be shown in the annotation. If you don't select a column all of them will be shown.\"),\n\n          multi: true,\n          options: columns,\n          value: descriptionColumns,\n          onChange: (value) => this.setState({ descriptionColumns: value }) }),\n\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", { style: { marginTop: '1rem' } },\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n          hovered: true,\n          name: \"annotation-override-time_range\",\n          label: \"Override time range\",\n          description: `This controls whether the \"time_range\" field from the current\n                  view should be passed down to the chart containing the annotation data.`,\n          value: 'time_range' in overrides,\n          onChange: (v) => {\n            delete overrides.time_range;\n            if (v) {\n              this.setState({\n                overrides: { ...overrides, time_range: null } });\n\n            } else {\n              this.setState({ overrides: { ...overrides } });\n            }\n          } }),\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n          hovered: true,\n          name: \"annotation-override-timegrain\",\n          label: \"Override time grain\",\n          description: `This controls whether the time grain field from the current\n                  view should be passed down to the chart containing the annotation data.`,\n          value: 'time_grain_sqla' in overrides,\n          onChange: (v) => {\n            delete overrides.time_grain_sqla;\n            delete overrides.granularity;\n            if (v) {\n              this.setState({\n                overrides: {\n                  ...overrides,\n                  time_grain_sqla: null,\n                  granularity: null } });\n\n\n            } else {\n              this.setState({ overrides: { ...overrides } });\n            }\n          } }),\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n          hovered: true,\n          name: \"annotation-layer-timeshift\",\n          label: \"Time Shift\",\n          description: `Time delta in natural language\n                  (example:  24 hours, 7 days, 56 weeks, 365 days)`,\n          placeholder: \"\",\n          value: overrides.time_shift,\n          onChange: (v) =>\n          this.setState({ overrides: { ...overrides, time_shift: v } }) })))));\n\n\n\n\n\n\n    }\n    return '';\n  }\n\n  renderDisplayConfiguration() {\n    const {\n      color,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      annotationType } =\n    this.state;\n    const colorScheme = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_16__[\"default\"])().\n    get(this.props.colorScheme).\n    colors.concat();\n    if (\n    color &&\n    color !== AUTOMATIC_COLOR &&\n    !colorScheme.find((x) => x.toLowerCase() === color.toLowerCase()))\n    {\n      colorScheme.push(color);\n    }\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_PopoverSection__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n        isSelected: true,\n        title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Display configuration'),\n        info: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Configure your how you overlay is displayed here.') },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer stroke'),\n        name: \"annotation-layer-stroke\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Style')\n        // see '../../../visualizations/nvd3_vis.css'\n        , options: [\n        { value: 'solid', label: 'Solid' },\n        { value: 'dashed', label: 'Dashed' },\n        { value: 'longDashed', label: 'Long dashed' },\n        { value: 'dotted', label: 'Dotted' }],\n\n        value: style,\n        clearable: false,\n        onChange: (v) => this.setState({ style: v }) }),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer opacity'),\n        name: \"annotation-layer-opacity\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Opacity')\n        // see '../../../visualizations/nvd3_vis.css'\n        , options: [\n        { value: '', label: 'Solid' },\n        { value: 'opacityLow', label: '0.2' },\n        { value: 'opacityMedium', label: '0.5' },\n        { value: 'opacityHigh', label: '0.8' }],\n\n        value: opacity,\n        onChange: (value) => this.setState({ opacity: value }) }),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_ControlHeader__WEBPACK_IMPORTED_MODULE_9__[\"default\"], { label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Color') }),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", { style: { display: 'flex', flexDirection: 'column' } },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(react_color__WEBPACK_IMPORTED_MODULE_2__.CompactPicker, {\n        color: color,\n        colors: colorScheme,\n        onChangeComplete: (v) => this.setState({ color: v.hex }) }),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_Button__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        style: { marginTop: '0.5rem', marginBottom: '0.5rem' },\n        buttonStyle: color === AUTOMATIC_COLOR ? 'success' : 'default',\n        buttonSize: \"xsmall\",\n        onClick: () => this.setState({ color: AUTOMATIC_COLOR }) }, \"Automatic Color\"))),\n\n\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n        name: \"annotation-layer-stroke-width\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Line width'),\n        isInt: true,\n        value: width,\n        onChange: (v) => this.setState({ width: v }) }),\n\n      annotationType === src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_TYPES.TIME_SERIES &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n        hovered: true,\n        name: \"annotation-layer-show-markers\",\n        label: \"Show Markers\",\n        description: \"Shows or hides markers for the time series\",\n        value: showMarkers,\n        onChange: (v) => this.setState({ showMarkers: v }) }),\n\n\n      annotationType === src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_TYPES.TIME_SERIES &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n        hovered: true,\n        name: \"annotation-layer-hide-line\",\n        label: \"Hide Line\",\n        description: \"Hides the Line for the time series\",\n        value: hideLine,\n        onChange: (v) => this.setState({ hideLine: v }) })));\n\n\n\n\n  }\n\n  render() {\n    const { isNew, name, annotationType, sourceType, show, showLabel } =\n    this.state;\n    const isValid = this.isValidForm();\n    const metadata = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__[\"default\"])().get(this.props.vizType);\n    const supportedAnnotationTypes = metadata ?\n    metadata.supportedAnnotationTypes.map(\n    (type) => src_modules_AnnotationTypes__WEBPACK_IMPORTED_MODULE_7__.ANNOTATION_TYPES_METADATA[type]) :\n\n    [];\n    const supportedSourceTypes = this.getSupportedSourceTypes(annotationType);\n\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n      this.props.error &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"span\", { style: { color: 'red' } }, \"ERROR: \", this.props.error),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", { style: { display: 'flex', flexDirection: 'row' } },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", { style: { marginRight: '2rem' } },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_PopoverSection__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n        isSelected: true,\n        title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Layer configuration'),\n        info: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Configure the basics of your Annotation Layer.') },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n        name: \"annotation-layer-name\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Name'),\n        placeholder: \"\",\n        value: name,\n        onChange: (v) => this.setState({ name: v }),\n        validationErrors: !name ? [(0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Mandatory')] : [] }),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n        name: \"annotation-layer-hide\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Hide layer'),\n        value: !show,\n        onChange: (v) => this.setState({ show: !v }) }),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n        name: \"annotation-label-show\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Show label'),\n        value: showLabel,\n        hovered: true,\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Whether to always show the annotation label'),\n        onChange: (v) => this.setState({ showLabel: v }) }),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer type'),\n        hovered: true,\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Choose the annotation layer type'),\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer type'),\n        name: \"annotation-layer-type\",\n        clearable: false,\n        options: supportedAnnotationTypes,\n        value: annotationType,\n        onChange: this.handleAnnotationType }),\n\n      supportedSourceTypes.length > 0 &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation source type'),\n        hovered: true,\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Choose the source of your annotations'),\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation Source'),\n        name: \"annotation-source-type\",\n        options: supportedSourceTypes,\n        value: sourceType,\n        onChange: this.handleAnnotationSourceType,\n        validationErrors: !sourceType ? [(0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Mandatory')] : [] }),\n\n\n      this.renderValueConfiguration())),\n\n\n      this.renderSliceConfiguration(),\n      this.renderDisplayConfiguration()),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", { style: { display: 'flex', justifyContent: 'space-between' } },\n      isNew ?\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_Button__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { buttonSize: \"small\", onClick: () => this.props.close() },\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Cancel')) :\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_Button__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { buttonSize: \"small\", onClick: this.deleteAnnotation },\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Remove')),\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_Button__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        buttonSize: \"small\",\n        disabled: !isValid,\n        onClick: this.applyAnnotation },\n\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Apply')),\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_Button__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        buttonSize: \"small\",\n        buttonStyle: \"primary\",\n        disabled: !isValid,\n        onClick: this.submitAnnotation },\n\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('OK'))))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nAnnotationLayer.propTypes = propTypes;\nAnnotationLayer.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(AUTOMATIC_COLOR, \"AUTOMATIC_COLOR\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\explore\\\\components\\\\controls\\\\AnnotationLayerControl\\\\AnnotationLayer.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\explore\\\\components\\\\controls\\\\AnnotationLayerControl\\\\AnnotationLayer.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\explore\\\\components\\\\controls\\\\AnnotationLayerControl\\\\AnnotationLayer.jsx\");reactHotLoader.register(AnnotationLayer, \"AnnotationLayer\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\explore\\\\components\\\\controls\\\\AnnotationLayerControl\\\\AnnotationLayer.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZXhwbG9yZS9jb21wb25lbnRzL2NvbnRyb2xzL0Fubm90YXRpb25MYXllckNvbnRyb2wvQW5ub3RhdGlvbkxheWVyLmpzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUUE7O0FBRUE7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7O0FBRUE7OztBQUdBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQU1BO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7QUFNQTtBQWpzQkE7QUFBQTtBQW9zQkE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vc3JjL2V4cGxvcmUvY29tcG9uZW50cy9jb250cm9scy9Bbm5vdGF0aW9uTGF5ZXJDb250cm9sL0Fubm90YXRpb25MYXllci5qc3g/OWE0YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxyXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcclxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cclxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxyXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXHJcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxyXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcclxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcclxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXHJcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcclxuICogdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgeyBDb21wYWN0UGlja2VyIH0gZnJvbSAncmVhY3QtY29sb3InO1xyXG5pbXBvcnQgQnV0dG9uIGZyb20gJ3NyYy9jb21wb25lbnRzL0J1dHRvbic7XHJcbmltcG9ydCB7XHJcbiAgdCxcclxuICBTdXBlcnNldENsaWVudCxcclxuICBnZXRDYXRlZ29yaWNhbFNjaGVtZVJlZ2lzdHJ5LFxyXG4gIGdldENoYXJ0TWV0YWRhdGFSZWdpc3RyeSxcclxuICB2YWxpZGF0ZU5vbkVtcHR5LFxyXG4gIGlzVmFsaWRFeHByZXNzaW9uLFxyXG59IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcclxuXHJcbmltcG9ydCBTZWxlY3RDb250cm9sIGZyb20gJ3NyYy9leHBsb3JlL2NvbXBvbmVudHMvY29udHJvbHMvU2VsZWN0Q29udHJvbCc7XHJcbmltcG9ydCBUZXh0Q29udHJvbCBmcm9tICdzcmMvZXhwbG9yZS9jb21wb25lbnRzL2NvbnRyb2xzL1RleHRDb250cm9sJztcclxuaW1wb3J0IENoZWNrYm94Q29udHJvbCBmcm9tICdzcmMvZXhwbG9yZS9jb21wb25lbnRzL2NvbnRyb2xzL0NoZWNrYm94Q29udHJvbCc7XHJcbmltcG9ydCB7XHJcbiAgQU5OT1RBVElPTl9TT1VSQ0VfVFlQRVMsXHJcbiAgQU5OT1RBVElPTl9UWVBFUyxcclxuICBBTk5PVEFUSU9OX1RZUEVTX01FVEFEQVRBLFxyXG4gIERFRkFVTFRfQU5OT1RBVElPTl9UWVBFLFxyXG4gIHJlcXVpcmVzUXVlcnksXHJcbiAgQU5OT1RBVElPTl9TT1VSQ0VfVFlQRVNfTUVUQURBVEEsXHJcbn0gZnJvbSAnc3JjL21vZHVsZXMvQW5ub3RhdGlvblR5cGVzJztcclxuaW1wb3J0IFBvcG92ZXJTZWN0aW9uIGZyb20gJ3NyYy9jb21wb25lbnRzL1BvcG92ZXJTZWN0aW9uJztcclxuaW1wb3J0IENvbnRyb2xIZWFkZXIgZnJvbSAnc3JjL2V4cGxvcmUvY29tcG9uZW50cy9Db250cm9sSGVhZGVyJztcclxuXHJcbmNvbnN0IEFVVE9NQVRJQ19DT0xPUiA9ICcnO1xyXG5cclxuY29uc3QgcHJvcFR5cGVzID0ge1xyXG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgYW5ub3RhdGlvblR5cGU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgc291cmNlVHlwZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcclxuICBvcGFjaXR5OiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIHN0eWxlOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxyXG4gIHNob3dNYXJrZXJzOiBQcm9wVHlwZXMuYm9vbCxcclxuICBoaWRlTGluZTogUHJvcFR5cGVzLmJvb2wsXHJcbiAgdmFsdWU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKSxcclxuICBvdmVycmlkZXM6IFByb3BUeXBlcy5vYmplY3QsXHJcbiAgc2hvdzogUHJvcFR5cGVzLmJvb2wsXHJcbiAgc2hvd0xhYmVsOiBQcm9wVHlwZXMuYm9vbCxcclxuICB0aXRsZUNvbHVtbjogUHJvcFR5cGVzLnN0cmluZyxcclxuICBkZXNjcmlwdGlvbkNvbHVtbnM6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpLFxyXG4gIHRpbWVDb2x1bW46IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgaW50ZXJ2YWxFbmRDb2x1bW46IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgdml6VHlwZTogUHJvcFR5cGVzLnN0cmluZyxcclxuXHJcbiAgZXJyb3I6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgY29sb3JTY2hlbWU6IFByb3BUeXBlcy5zdHJpbmcsXHJcblxyXG4gIGFkZEFubm90YXRpb25MYXllcjogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgcmVtb3ZlQW5ub3RhdGlvbkxheWVyOiBQcm9wVHlwZXMuZnVuYyxcclxuICBjbG9zZTogUHJvcFR5cGVzLmZ1bmMsXHJcbn07XHJcblxyXG5jb25zdCBkZWZhdWx0UHJvcHMgPSB7XHJcbiAgbmFtZTogJycsXHJcbiAgYW5ub3RhdGlvblR5cGU6IERFRkFVTFRfQU5OT1RBVElPTl9UWVBFLFxyXG4gIHNvdXJjZVR5cGU6ICcnLFxyXG4gIGNvbG9yOiBBVVRPTUFUSUNfQ09MT1IsXHJcbiAgb3BhY2l0eTogJycsXHJcbiAgc3R5bGU6ICdzb2xpZCcsXHJcbiAgd2lkdGg6IDEsXHJcbiAgc2hvd01hcmtlcnM6IGZhbHNlLFxyXG4gIGhpZGVMaW5lOiBmYWxzZSxcclxuICBvdmVycmlkZXM6IHt9LFxyXG4gIGNvbG9yU2NoZW1lOiAnZDNDYXRlZ29yeTEwJyxcclxuICBzaG93OiB0cnVlLFxyXG4gIHNob3dMYWJlbDogZmFsc2UsXHJcbiAgdGl0bGVDb2x1bW46ICcnLFxyXG4gIGRlc2NyaXB0aW9uQ29sdW1uczogW10sXHJcbiAgdGltZUNvbHVtbjogJycsXHJcbiAgaW50ZXJ2YWxFbmRDb2x1bW46ICcnLFxyXG5cclxuICBhZGRBbm5vdGF0aW9uTGF5ZXI6ICgpID0+IHt9LFxyXG4gIHJlbW92ZUFubm90YXRpb25MYXllcjogKCkgPT4ge30sXHJcbiAgY2xvc2U6ICgpID0+IHt9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQW5ub3RhdGlvbkxheWVyIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudCB7XHJcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcclxuICAgIHN1cGVyKHByb3BzKTtcclxuICAgIGNvbnN0IHtcclxuICAgICAgbmFtZSxcclxuICAgICAgYW5ub3RhdGlvblR5cGUsXHJcbiAgICAgIHNvdXJjZVR5cGUsXHJcbiAgICAgIGNvbG9yLFxyXG4gICAgICBvcGFjaXR5LFxyXG4gICAgICBzdHlsZSxcclxuICAgICAgd2lkdGgsXHJcbiAgICAgIHNob3dNYXJrZXJzLFxyXG4gICAgICBoaWRlTGluZSxcclxuICAgICAgdmFsdWUsXHJcbiAgICAgIG92ZXJyaWRlcyxcclxuICAgICAgc2hvdyxcclxuICAgICAgc2hvd0xhYmVsLFxyXG4gICAgICB0aXRsZUNvbHVtbixcclxuICAgICAgZGVzY3JpcHRpb25Db2x1bW5zLFxyXG4gICAgICB0aW1lQ29sdW1uLFxyXG4gICAgICBpbnRlcnZhbEVuZENvbHVtbixcclxuICAgICAgdml6VHlwZSxcclxuICAgIH0gPSBwcm9wcztcclxuXHJcbiAgICAvLyBPbmx5IGFsbG93IG92ZXJyaWRlIHdob2xlIHRpbWVfcmFuZ2VcclxuICAgIGlmICgnc2luY2UnIGluIG92ZXJyaWRlcyB8fCAndW50aWwnIGluIG92ZXJyaWRlcykge1xyXG4gICAgICBvdmVycmlkZXMudGltZV9yYW5nZSA9IG51bGw7XHJcbiAgICAgIGRlbGV0ZSBvdmVycmlkZXMuc2luY2U7XHJcbiAgICAgIGRlbGV0ZSBvdmVycmlkZXMudW50aWw7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ2hlY2sgaWYgYW5ub3RhdGlvblR5cGUgaXMgc3VwcG9ydGVkIGJ5IHRoaXMgY2hhcnRcclxuICAgIGNvbnN0IG1ldGFkYXRhID0gZ2V0Q2hhcnRNZXRhZGF0YVJlZ2lzdHJ5KCkuZ2V0KHZpelR5cGUpO1xyXG4gICAgY29uc3Qgc3VwcG9ydGVkQW5ub3RhdGlvblR5cGVzID0gbWV0YWRhdGE/LnN1cHBvcnRlZEFubm90YXRpb25UeXBlcyB8fCBbXTtcclxuICAgIGNvbnN0IHZhbGlkQW5ub3RhdGlvblR5cGUgPSBzdXBwb3J0ZWRBbm5vdGF0aW9uVHlwZXMuaW5jbHVkZXMoXHJcbiAgICAgIGFubm90YXRpb25UeXBlLFxyXG4gICAgKVxyXG4gICAgICA/IGFubm90YXRpb25UeXBlXHJcbiAgICAgIDogc3VwcG9ydGVkQW5ub3RhdGlvblR5cGVzWzBdO1xyXG5cclxuICAgIHRoaXMuc3RhdGUgPSB7XHJcbiAgICAgIC8vIGJhc2VcclxuICAgICAgbmFtZSxcclxuICAgICAgYW5ub3RhdGlvblR5cGU6IHZhbGlkQW5ub3RhdGlvblR5cGUsXHJcbiAgICAgIHNvdXJjZVR5cGUsXHJcbiAgICAgIHZhbHVlLFxyXG4gICAgICBvdmVycmlkZXMsXHJcbiAgICAgIHNob3csXHJcbiAgICAgIHNob3dMYWJlbCxcclxuICAgICAgLy8gc2xpY2VcclxuICAgICAgdGl0bGVDb2x1bW4sXHJcbiAgICAgIGRlc2NyaXB0aW9uQ29sdW1ucyxcclxuICAgICAgdGltZUNvbHVtbixcclxuICAgICAgaW50ZXJ2YWxFbmRDb2x1bW4sXHJcbiAgICAgIC8vIGRpc3BsYXlcclxuICAgICAgY29sb3I6IGNvbG9yIHx8IEFVVE9NQVRJQ19DT0xPUixcclxuICAgICAgb3BhY2l0eSxcclxuICAgICAgc3R5bGUsXHJcbiAgICAgIHdpZHRoLFxyXG4gICAgICBzaG93TWFya2VycyxcclxuICAgICAgaGlkZUxpbmUsXHJcbiAgICAgIC8vIHJlZkRhdGFcclxuICAgICAgaXNOZXc6ICFuYW1lLFxyXG4gICAgICBpc0xvYWRpbmdPcHRpb25zOiB0cnVlLFxyXG4gICAgICB2YWx1ZU9wdGlvbnM6IFtdLFxyXG4gICAgfTtcclxuICAgIHRoaXMuc3VibWl0QW5ub3RhdGlvbiA9IHRoaXMuc3VibWl0QW5ub3RhdGlvbi5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5kZWxldGVBbm5vdGF0aW9uID0gdGhpcy5kZWxldGVBbm5vdGF0aW9uLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmFwcGx5QW5ub3RhdGlvbiA9IHRoaXMuYXBwbHlBbm5vdGF0aW9uLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmZldGNoT3B0aW9ucyA9IHRoaXMuZmV0Y2hPcHRpb25zLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmhhbmRsZUFubm90YXRpb25UeXBlID0gdGhpcy5oYW5kbGVBbm5vdGF0aW9uVHlwZS5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5oYW5kbGVBbm5vdGF0aW9uU291cmNlVHlwZSA9XHJcbiAgICAgIHRoaXMuaGFuZGxlQW5ub3RhdGlvblNvdXJjZVR5cGUuYmluZCh0aGlzKTtcclxuICAgIHRoaXMuaGFuZGxlVmFsdWUgPSB0aGlzLmhhbmRsZVZhbHVlLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmlzVmFsaWRGb3JtID0gdGhpcy5pc1ZhbGlkRm9ybS5iaW5kKHRoaXMpO1xyXG4gIH1cclxuXHJcbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XHJcbiAgICBjb25zdCB7IGFubm90YXRpb25UeXBlLCBzb3VyY2VUeXBlLCBpc0xvYWRpbmdPcHRpb25zIH0gPSB0aGlzLnN0YXRlO1xyXG4gICAgdGhpcy5mZXRjaE9wdGlvbnMoYW5ub3RhdGlvblR5cGUsIHNvdXJjZVR5cGUsIGlzTG9hZGluZ09wdGlvbnMpO1xyXG4gIH1cclxuXHJcbiAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcywgcHJldlN0YXRlKSB7XHJcbiAgICBpZiAocHJldlN0YXRlLnNvdXJjZVR5cGUgIT09IHRoaXMuc3RhdGUuc291cmNlVHlwZSkge1xyXG4gICAgICB0aGlzLmZldGNoT3B0aW9ucyh0aGlzLnN0YXRlLmFubm90YXRpb25UeXBlLCB0aGlzLnN0YXRlLnNvdXJjZVR5cGUsIHRydWUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZ2V0U3VwcG9ydGVkU291cmNlVHlwZXMoYW5ub3RhdGlvblR5cGUpIHtcclxuICAgIC8vIEdldCB2aXMgdHlwZXMgdGhhdCBjYW4gYmUgc291cmNlLlxyXG4gICAgY29uc3Qgc291cmNlcyA9IGdldENoYXJ0TWV0YWRhdGFSZWdpc3RyeSgpXHJcbiAgICAgIC5lbnRyaWVzKClcclxuICAgICAgLmZpbHRlcigoeyB2YWx1ZTogY2hhcnRNZXRhZGF0YSB9KSA9PlxyXG4gICAgICAgIGNoYXJ0TWV0YWRhdGEuY2FuQmVBbm5vdGF0aW9uVHlwZShhbm5vdGF0aW9uVHlwZSksXHJcbiAgICAgIClcclxuICAgICAgLm1hcCgoeyBrZXksIHZhbHVlOiBjaGFydE1ldGFkYXRhIH0pID0+ICh7XHJcbiAgICAgICAgdmFsdWU6IGtleSxcclxuICAgICAgICBsYWJlbDogY2hhcnRNZXRhZGF0YS5uYW1lLFxyXG4gICAgICB9KSk7XHJcbiAgICAvLyBQcmVwZW5kIG5hdGl2ZSBzb3VyY2UgaWYgYXBwbGljYWJsZVxyXG4gICAgaWYgKEFOTk9UQVRJT05fVFlQRVNfTUVUQURBVEFbYW5ub3RhdGlvblR5cGVdPy5zdXBwb3J0TmF0aXZlU291cmNlKSB7XHJcbiAgICAgIHNvdXJjZXMudW5zaGlmdChBTk5PVEFUSU9OX1NPVVJDRV9UWVBFU19NRVRBREFUQS5OQVRJVkUpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHNvdXJjZXM7XHJcbiAgfVxyXG5cclxuICBpc1ZhbGlkRm9ybXVsYUFubm90YXRpb24oZXhwcmVzc2lvbiwgYW5ub3RhdGlvblR5cGUpIHtcclxuICAgIGlmIChhbm5vdGF0aW9uVHlwZSA9PT0gQU5OT1RBVElPTl9UWVBFUy5GT1JNVUxBKSB7XHJcbiAgICAgIHJldHVybiBpc1ZhbGlkRXhwcmVzc2lvbihleHByZXNzaW9uKTtcclxuICAgIH1cclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH1cclxuXHJcbiAgaXNWYWxpZEZvcm0oKSB7XHJcbiAgICBjb25zdCB7XHJcbiAgICAgIG5hbWUsXHJcbiAgICAgIGFubm90YXRpb25UeXBlLFxyXG4gICAgICBzb3VyY2VUeXBlLFxyXG4gICAgICB2YWx1ZSxcclxuICAgICAgdGltZUNvbHVtbixcclxuICAgICAgaW50ZXJ2YWxFbmRDb2x1bW4sXHJcbiAgICB9ID0gdGhpcy5zdGF0ZTtcclxuICAgIGNvbnN0IGVycm9ycyA9IFtcclxuICAgICAgdmFsaWRhdGVOb25FbXB0eShuYW1lKSxcclxuICAgICAgdmFsaWRhdGVOb25FbXB0eShhbm5vdGF0aW9uVHlwZSksXHJcbiAgICAgIHZhbGlkYXRlTm9uRW1wdHkodmFsdWUpLFxyXG4gICAgXTtcclxuICAgIGlmIChzb3VyY2VUeXBlICE9PSBBTk5PVEFUSU9OX1NPVVJDRV9UWVBFUy5OQVRJVkUpIHtcclxuICAgICAgaWYgKGFubm90YXRpb25UeXBlID09PSBBTk5PVEFUSU9OX1RZUEVTLkVWRU5UKSB7XHJcbiAgICAgICAgZXJyb3JzLnB1c2godmFsaWRhdGVOb25FbXB0eSh0aW1lQ29sdW1uKSk7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGFubm90YXRpb25UeXBlID09PSBBTk5PVEFUSU9OX1RZUEVTLklOVEVSVkFMKSB7XHJcbiAgICAgICAgZXJyb3JzLnB1c2godmFsaWRhdGVOb25FbXB0eSh0aW1lQ29sdW1uKSk7XHJcbiAgICAgICAgZXJyb3JzLnB1c2godmFsaWRhdGVOb25FbXB0eShpbnRlcnZhbEVuZENvbHVtbikpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBlcnJvcnMucHVzaCghdGhpcy5pc1ZhbGlkRm9ybXVsYUFubm90YXRpb24odmFsdWUsIGFubm90YXRpb25UeXBlKSk7XHJcbiAgICByZXR1cm4gIWVycm9ycy5maWx0ZXIoeCA9PiB4KS5sZW5ndGg7XHJcbiAgfVxyXG5cclxuICBoYW5kbGVBbm5vdGF0aW9uVHlwZShhbm5vdGF0aW9uVHlwZSkge1xyXG4gICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgIGFubm90YXRpb25UeXBlLFxyXG4gICAgICBzb3VyY2VUeXBlOiBudWxsLFxyXG4gICAgICB2YWx1ZTogbnVsbCxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlQW5ub3RhdGlvblNvdXJjZVR5cGUoc291cmNlVHlwZSkge1xyXG4gICAgY29uc3QgeyBzb3VyY2VUeXBlOiBwcmV2U291cmNlVHlwZSB9ID0gdGhpcy5zdGF0ZTtcclxuXHJcbiAgICBpZiAocHJldlNvdXJjZVR5cGUgIT09IHNvdXJjZVR5cGUpIHtcclxuICAgICAgdGhpcy5zZXRTdGF0ZSh7IHNvdXJjZVR5cGUsIHZhbHVlOiBudWxsLCBpc0xvYWRpbmdPcHRpb25zOiB0cnVlIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaGFuZGxlVmFsdWUodmFsdWUpIHtcclxuICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICB2YWx1ZSxcclxuICAgICAgZGVzY3JpcHRpb25Db2x1bW5zOiBbXSxcclxuICAgICAgaW50ZXJ2YWxFbmRDb2x1bW46IG51bGwsXHJcbiAgICAgIHRpbWVDb2x1bW46IG51bGwsXHJcbiAgICAgIHRpdGxlQ29sdW1uOiBudWxsLFxyXG4gICAgICBvdmVycmlkZXM6IHsgdGltZV9yYW5nZTogbnVsbCB9LFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBmZXRjaE9wdGlvbnMoYW5ub3RhdGlvblR5cGUsIHNvdXJjZVR5cGUsIGlzTG9hZGluZ09wdGlvbnMpIHtcclxuICAgIGlmIChpc0xvYWRpbmdPcHRpb25zKSB7XHJcbiAgICAgIGlmIChzb3VyY2VUeXBlID09PSBBTk5PVEFUSU9OX1NPVVJDRV9UWVBFUy5OQVRJVkUpIHtcclxuICAgICAgICBTdXBlcnNldENsaWVudC5nZXQoe1xyXG4gICAgICAgICAgZW5kcG9pbnQ6ICcvYW5ub3RhdGlvbmxheWVybW9kZWx2aWV3L2FwaS9yZWFkPycsXHJcbiAgICAgICAgfSkudGhlbigoeyBqc29uIH0pID0+IHtcclxuICAgICAgICAgIGNvbnN0IGxheWVycyA9IGpzb25cclxuICAgICAgICAgICAgPyBqc29uLnJlc3VsdC5tYXAobGF5ZXIgPT4gKHtcclxuICAgICAgICAgICAgICAgIHZhbHVlOiBsYXllci5pZCxcclxuICAgICAgICAgICAgICAgIGxhYmVsOiBsYXllci5uYW1lLFxyXG4gICAgICAgICAgICAgIH0pKVxyXG4gICAgICAgICAgICA6IFtdO1xyXG4gICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgIGlzTG9hZGluZ09wdGlvbnM6IGZhbHNlLFxyXG4gICAgICAgICAgICB2YWx1ZU9wdGlvbnM6IGxheWVycyxcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9IGVsc2UgaWYgKHJlcXVpcmVzUXVlcnkoc291cmNlVHlwZSkpIHtcclxuICAgICAgICBTdXBlcnNldENsaWVudC5nZXQoeyBlbmRwb2ludDogJy9zdXBlcnNldC91c2VyX3NsaWNlcycgfSkudGhlbihcclxuICAgICAgICAgICh7IGpzb24gfSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCByZWdpc3RyeSA9IGdldENoYXJ0TWV0YWRhdGFSZWdpc3RyeSgpO1xyXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICAgICAgICBpc0xvYWRpbmdPcHRpb25zOiBmYWxzZSxcclxuICAgICAgICAgICAgICB2YWx1ZU9wdGlvbnM6IGpzb25cclxuICAgICAgICAgICAgICAgIC5maWx0ZXIoeCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgIGNvbnN0IG1ldGFkYXRhID0gcmVnaXN0cnkuZ2V0KHgudml6X3R5cGUpO1xyXG4gICAgICAgICAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgICAgICAgIG1ldGFkYXRhICYmIG1ldGFkYXRhLmNhbkJlQW5ub3RhdGlvblR5cGUoYW5ub3RhdGlvblR5cGUpXHJcbiAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLm1hcCh4ID0+ICh7IHZhbHVlOiB4LmlkLCBsYWJlbDogeC50aXRsZSwgc2xpY2U6IHggfSkpLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICAgIGlzTG9hZGluZ09wdGlvbnM6IGZhbHNlLFxyXG4gICAgICAgICAgdmFsdWVPcHRpb25zOiBbXSxcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVsZXRlQW5ub3RhdGlvbigpIHtcclxuICAgIHRoaXMucHJvcHMucmVtb3ZlQW5ub3RhdGlvbkxheWVyKCk7XHJcbiAgICB0aGlzLnByb3BzLmNsb3NlKCk7XHJcbiAgfVxyXG5cclxuICBhcHBseUFubm90YXRpb24oKSB7XHJcbiAgICBpZiAodGhpcy5pc1ZhbGlkRm9ybSgpKSB7XHJcbiAgICAgIGNvbnN0IGFubm90YXRpb25GaWVsZHMgPSBbXHJcbiAgICAgICAgJ25hbWUnLFxyXG4gICAgICAgICdhbm5vdGF0aW9uVHlwZScsXHJcbiAgICAgICAgJ3NvdXJjZVR5cGUnLFxyXG4gICAgICAgICdjb2xvcicsXHJcbiAgICAgICAgJ29wYWNpdHknLFxyXG4gICAgICAgICdzdHlsZScsXHJcbiAgICAgICAgJ3dpZHRoJyxcclxuICAgICAgICAnc2hvd01hcmtlcnMnLFxyXG4gICAgICAgICdoaWRlTGluZScsXHJcbiAgICAgICAgJ3ZhbHVlJyxcclxuICAgICAgICAnb3ZlcnJpZGVzJyxcclxuICAgICAgICAnc2hvdycsXHJcbiAgICAgICAgJ3Nob3dMYWJlbCcsXHJcbiAgICAgICAgJ3RpdGxlQ29sdW1uJyxcclxuICAgICAgICAnZGVzY3JpcHRpb25Db2x1bW5zJyxcclxuICAgICAgICAndGltZUNvbHVtbicsXHJcbiAgICAgICAgJ2ludGVydmFsRW5kQ29sdW1uJyxcclxuICAgICAgXTtcclxuICAgICAgY29uc3QgbmV3QW5ub3RhdGlvbiA9IHt9O1xyXG4gICAgICBhbm5vdGF0aW9uRmllbGRzLmZvckVhY2goZmllbGQgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLnN0YXRlW2ZpZWxkXSAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgbmV3QW5ub3RhdGlvbltmaWVsZF0gPSB0aGlzLnN0YXRlW2ZpZWxkXTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgaWYgKG5ld0Fubm90YXRpb24uY29sb3IgPT09IEFVVE9NQVRJQ19DT0xPUikge1xyXG4gICAgICAgIG5ld0Fubm90YXRpb24uY29sb3IgPSBudWxsO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLnByb3BzLmFkZEFubm90YXRpb25MYXllcihuZXdBbm5vdGF0aW9uKTtcclxuICAgICAgdGhpcy5zZXRTdGF0ZSh7IGlzTmV3OiBmYWxzZSB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN1Ym1pdEFubm90YXRpb24oKSB7XHJcbiAgICB0aGlzLmFwcGx5QW5ub3RhdGlvbigpO1xyXG4gICAgdGhpcy5wcm9wcy5jbG9zZSgpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyT3B0aW9uKG9wdGlvbikge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPHNwYW5cclxuICAgICAgICBjc3M9e3tcclxuICAgICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcclxuICAgICAgICAgIHRleHRPdmVyZmxvdzogJ2VsbGlwc2lzJyxcclxuICAgICAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxyXG4gICAgICAgIH19XHJcbiAgICAgICAgdGl0bGU9e29wdGlvbi5sYWJlbH1cclxuICAgICAgPlxyXG4gICAgICAgIHtvcHRpb24ubGFiZWx9XHJcbiAgICAgIDwvc3Bhbj5cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICByZW5kZXJWYWx1ZUNvbmZpZ3VyYXRpb24oKSB7XHJcbiAgICBjb25zdCB7XHJcbiAgICAgIGFubm90YXRpb25UeXBlLFxyXG4gICAgICBzb3VyY2VUeXBlLFxyXG4gICAgICB2YWx1ZSxcclxuICAgICAgdmFsdWVPcHRpb25zLFxyXG4gICAgICBpc0xvYWRpbmdPcHRpb25zLFxyXG4gICAgfSA9IHRoaXMuc3RhdGU7XHJcbiAgICBsZXQgbGFiZWwgPSAnJztcclxuICAgIGxldCBkZXNjcmlwdGlvbiA9ICcnO1xyXG4gICAgaWYgKHJlcXVpcmVzUXVlcnkoc291cmNlVHlwZSkpIHtcclxuICAgICAgaWYgKHNvdXJjZVR5cGUgPT09IEFOTk9UQVRJT05fU09VUkNFX1RZUEVTLk5BVElWRSkge1xyXG4gICAgICAgIGxhYmVsID0gJ0Fubm90YXRpb24gbGF5ZXInO1xyXG4gICAgICAgIGRlc2NyaXB0aW9uID0gJ1NlbGVjdCB0aGUgQW5ub3RhdGlvbiBMYXllciB5b3Ugd291bGQgbGlrZSB0byB1c2UuJztcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBsYWJlbCA9IHQoJ0NoYXJ0Jyk7XHJcbiAgICAgICAgZGVzY3JpcHRpb24gPSB0KFxyXG4gICAgICAgICAgYFVzZSBhbm90aGVyIGV4aXN0aW5nIGNoYXJ0IGFzIGEgc291cmNlIGZvciBhbm5vdGF0aW9ucyBhbmQgb3ZlcmxheXMuXHJcbiAgICAgICAgICBZb3VyIGNoYXJ0IG11c3QgYmUgb25lIG9mIHRoZXNlIHZpc3VhbGl6YXRpb24gdHlwZXM6IFslc11gLFxyXG4gICAgICAgICAgdGhpcy5nZXRTdXBwb3J0ZWRTb3VyY2VUeXBlcyhhbm5vdGF0aW9uVHlwZSlcclxuICAgICAgICAgICAgLm1hcCh4ID0+IHgubGFiZWwpXHJcbiAgICAgICAgICAgIC5qb2luKCcsICcpLFxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSBpZiAoYW5ub3RhdGlvblR5cGUgPT09IEFOTk9UQVRJT05fVFlQRVMuRk9STVVMQSkge1xyXG4gICAgICBsYWJlbCA9ICdGb3JtdWxhJztcclxuICAgICAgZGVzY3JpcHRpb24gPSBgRXhwZWN0cyBhIGZvcm11bGEgd2l0aCBkZXBlbmRpbmcgdGltZSBwYXJhbWV0ZXIgJ3gnXHJcbiAgICAgICAgaW4gbWlsbGlzZWNvbmRzIHNpbmNlIGVwb2NoLiBtYXRoanMgaXMgdXNlZCB0byBldmFsdWF0ZSB0aGUgZm9ybXVsYXMuXHJcbiAgICAgICAgRXhhbXBsZTogJzJ4KzUnYDtcclxuICAgIH1cclxuICAgIGlmIChyZXF1aXJlc1F1ZXJ5KHNvdXJjZVR5cGUpKSB7XHJcbiAgICAgIHJldHVybiAoXHJcbiAgICAgICAgPFNlbGVjdENvbnRyb2xcclxuICAgICAgICAgIGFyaWFMYWJlbD17dCgnQW5ub3RhdGlvbiBsYXllciB2YWx1ZScpfVxyXG4gICAgICAgICAgbmFtZT1cImFubm90YXRpb24tbGF5ZXItdmFsdWVcIlxyXG4gICAgICAgICAgc2hvd0hlYWRlclxyXG4gICAgICAgICAgaG92ZXJlZFxyXG4gICAgICAgICAgZGVzY3JpcHRpb249e2Rlc2NyaXB0aW9ufVxyXG4gICAgICAgICAgbGFiZWw9e2xhYmVsfVxyXG4gICAgICAgICAgcGxhY2Vob2xkZXI9XCJcIlxyXG4gICAgICAgICAgb3B0aW9ucz17dmFsdWVPcHRpb25zfVxyXG4gICAgICAgICAgaXNMb2FkaW5nPXtpc0xvYWRpbmdPcHRpb25zfVxyXG4gICAgICAgICAgdmFsdWU9e3ZhbHVlfVxyXG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlVmFsdWV9XHJcbiAgICAgICAgICB2YWxpZGF0aW9uRXJyb3JzPXshdmFsdWUgPyBbJ01hbmRhdG9yeSddIDogW119XHJcbiAgICAgICAgICBvcHRpb25SZW5kZXJlcj17dGhpcy5yZW5kZXJPcHRpb259XHJcbiAgICAgICAgLz5cclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIGlmIChhbm5vdGF0aW9uVHlwZSA9PT0gQU5OT1RBVElPTl9UWVBFUy5GT1JNVUxBKSB7XHJcbiAgICAgIHJldHVybiAoXHJcbiAgICAgICAgPFRleHRDb250cm9sXHJcbiAgICAgICAgICBuYW1lPVwiYW5ub3RhdGlvbi1sYXllci12YWx1ZVwiXHJcbiAgICAgICAgICBob3ZlcmVkXHJcbiAgICAgICAgICBzaG93SGVhZGVyXHJcbiAgICAgICAgICBkZXNjcmlwdGlvbj17ZGVzY3JpcHRpb259XHJcbiAgICAgICAgICBsYWJlbD17bGFiZWx9XHJcbiAgICAgICAgICBwbGFjZWhvbGRlcj1cIlwiXHJcbiAgICAgICAgICB2YWx1ZT17dmFsdWV9XHJcbiAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVWYWx1ZX1cclxuICAgICAgICAgIHZhbGlkYXRpb25FcnJvcnM9e1xyXG4gICAgICAgICAgICAhdGhpcy5pc1ZhbGlkRm9ybXVsYUFubm90YXRpb24odmFsdWUsIGFubm90YXRpb25UeXBlKVxyXG4gICAgICAgICAgICAgID8gWydCYWQgZm9ybXVsYS4nXVxyXG4gICAgICAgICAgICAgIDogW11cclxuICAgICAgICAgIH1cclxuICAgICAgICAvPlxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuICcnO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyU2xpY2VDb25maWd1cmF0aW9uKCkge1xyXG4gICAgY29uc3Qge1xyXG4gICAgICBhbm5vdGF0aW9uVHlwZSxcclxuICAgICAgc291cmNlVHlwZSxcclxuICAgICAgdmFsdWUsXHJcbiAgICAgIHZhbHVlT3B0aW9ucyxcclxuICAgICAgb3ZlcnJpZGVzLFxyXG4gICAgICB0aXRsZUNvbHVtbixcclxuICAgICAgdGltZUNvbHVtbixcclxuICAgICAgaW50ZXJ2YWxFbmRDb2x1bW4sXHJcbiAgICAgIGRlc2NyaXB0aW9uQ29sdW1ucyxcclxuICAgIH0gPSB0aGlzLnN0YXRlO1xyXG4gICAgY29uc3QgeyBzbGljZSB9ID0gdmFsdWVPcHRpb25zLmZpbmQoeCA9PiB4LnZhbHVlID09PSB2YWx1ZSkgfHwge307XHJcbiAgICBpZiAoc291cmNlVHlwZSAhPT0gQU5OT1RBVElPTl9TT1VSQ0VfVFlQRVMuTkFUSVZFICYmIHNsaWNlKSB7XHJcbiAgICAgIGNvbnN0IGNvbHVtbnMgPSAoc2xpY2UuZGF0YS5ncm91cGJ5IHx8IFtdKVxyXG4gICAgICAgIC5jb25jYXQoc2xpY2UuZGF0YS5hbGxfY29sdW1ucyB8fCBbXSlcclxuICAgICAgICAubWFwKHggPT4gKHsgdmFsdWU6IHgsIGxhYmVsOiB4IH0pKTtcclxuICAgICAgY29uc3QgdGltZUNvbHVtbk9wdGlvbnMgPSBzbGljZS5kYXRhLmluY2x1ZGVfdGltZVxyXG4gICAgICAgID8gW3sgdmFsdWU6ICdfX3RpbWVzdGFtcCcsIGxhYmVsOiAnX190aW1lc3RhbXAnIH1dLmNvbmNhdChjb2x1bW5zKVxyXG4gICAgICAgIDogY29sdW1ucztcclxuICAgICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IHN0eWxlPXt7IG1hcmdpblJpZ2h0OiAnMnJlbScgfX0+XHJcbiAgICAgICAgICA8UG9wb3ZlclNlY3Rpb25cclxuICAgICAgICAgICAgaXNTZWxlY3RlZFxyXG4gICAgICAgICAgICB0aXRsZT17dCgnQW5ub3RhdGlvbiBTbGljZSBDb25maWd1cmF0aW9uJyl9XHJcbiAgICAgICAgICAgIGluZm89e3QoYFRoaXMgc2VjdGlvbiBhbGxvd3MgeW91IHRvIGNvbmZpZ3VyZSBob3cgdG8gdXNlIHRoZSBzbGljZVxyXG4gICAgICAgICAgICAgICB0byBnZW5lcmF0ZSBhbm5vdGF0aW9ucy5gKX1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgeyhhbm5vdGF0aW9uVHlwZSA9PT0gQU5OT1RBVElPTl9UWVBFUy5FVkVOVCB8fFxyXG4gICAgICAgICAgICAgIGFubm90YXRpb25UeXBlID09PSBBTk5PVEFUSU9OX1RZUEVTLklOVEVSVkFMKSAmJiAoXHJcbiAgICAgICAgICAgICAgPFNlbGVjdENvbnRyb2xcclxuICAgICAgICAgICAgICAgIGFyaWFMYWJlbD17dCgnQW5ub3RhdGlvbiBsYXllciB0aW1lIGNvbHVtbicpfVxyXG4gICAgICAgICAgICAgICAgaG92ZXJlZFxyXG4gICAgICAgICAgICAgICAgbmFtZT1cImFubm90YXRpb24tbGF5ZXItdGltZS1jb2x1bW5cIlxyXG4gICAgICAgICAgICAgICAgbGFiZWw9e1xyXG4gICAgICAgICAgICAgICAgICBhbm5vdGF0aW9uVHlwZSA9PT0gQU5OT1RBVElPTl9UWVBFUy5JTlRFUlZBTFxyXG4gICAgICAgICAgICAgICAgICAgID8gdCgnSW50ZXJ2YWwgc3RhcnQgY29sdW1uJylcclxuICAgICAgICAgICAgICAgICAgICA6IHQoJ0V2ZW50IHRpbWUgY29sdW1uJylcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KFxyXG4gICAgICAgICAgICAgICAgICAnVGhpcyBjb2x1bW4gbXVzdCBjb250YWluIGRhdGUvdGltZSBpbmZvcm1hdGlvbi4nLFxyXG4gICAgICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgICAgIHZhbGlkYXRpb25FcnJvcnM9eyF0aW1lQ29sdW1uID8gWydNYW5kYXRvcnknXSA6IFtdfVxyXG4gICAgICAgICAgICAgICAgY2xlYXJhYmxlPXtmYWxzZX1cclxuICAgICAgICAgICAgICAgIG9wdGlvbnM9e3RpbWVDb2x1bW5PcHRpb25zfVxyXG4gICAgICAgICAgICAgICAgdmFsdWU9e3RpbWVDb2x1bW59XHJcbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17diA9PiB0aGlzLnNldFN0YXRlKHsgdGltZUNvbHVtbjogdiB9KX1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICB7YW5ub3RhdGlvblR5cGUgPT09IEFOTk9UQVRJT05fVFlQRVMuSU5URVJWQUwgJiYgKFxyXG4gICAgICAgICAgICAgIDxTZWxlY3RDb250cm9sXHJcbiAgICAgICAgICAgICAgICBhcmlhTGFiZWw9e3QoJ0Fubm90YXRpb24gbGF5ZXIgaW50ZXJ2YWwgZW5kJyl9XHJcbiAgICAgICAgICAgICAgICBob3ZlcmVkXHJcbiAgICAgICAgICAgICAgICBuYW1lPVwiYW5ub3RhdGlvbi1sYXllci1pbnRlcnZhbEVuZFwiXHJcbiAgICAgICAgICAgICAgICBsYWJlbD17dCgnSW50ZXJ2YWwgRW5kIGNvbHVtbicpfVxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoXHJcbiAgICAgICAgICAgICAgICAgICdUaGlzIGNvbHVtbiBtdXN0IGNvbnRhaW4gZGF0ZS90aW1lIGluZm9ybWF0aW9uLicsXHJcbiAgICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgICAgdmFsaWRhdGlvbkVycm9ycz17IWludGVydmFsRW5kQ29sdW1uID8gWydNYW5kYXRvcnknXSA6IFtdfVxyXG4gICAgICAgICAgICAgICAgb3B0aW9ucz17Y29sdW1uc31cclxuICAgICAgICAgICAgICAgIHZhbHVlPXtpbnRlcnZhbEVuZENvbHVtbn1cclxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt2YWx1ZSA9PiB0aGlzLnNldFN0YXRlKHsgaW50ZXJ2YWxFbmRDb2x1bW46IHZhbHVlIH0pfVxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIDxTZWxlY3RDb250cm9sXHJcbiAgICAgICAgICAgICAgYXJpYUxhYmVsPXt0KCdBbm5vdGF0aW9uIGxheWVyIHRpdGxlIGNvbHVtbicpfVxyXG4gICAgICAgICAgICAgIGhvdmVyZWRcclxuICAgICAgICAgICAgICBuYW1lPVwiYW5ub3RhdGlvbi1sYXllci10aXRsZVwiXHJcbiAgICAgICAgICAgICAgbGFiZWw9e3QoJ1RpdGxlIENvbHVtbicpfVxyXG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KCdQaWNrIGEgdGl0bGUgZm9yIHlvdSBhbm5vdGF0aW9uLicpfVxyXG4gICAgICAgICAgICAgIG9wdGlvbnM9e1t7IHZhbHVlOiAnJywgbGFiZWw6ICdOb25lJyB9XS5jb25jYXQoY29sdW1ucyl9XHJcbiAgICAgICAgICAgICAgdmFsdWU9e3RpdGxlQ29sdW1ufVxyXG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXt2YWx1ZSA9PiB0aGlzLnNldFN0YXRlKHsgdGl0bGVDb2x1bW46IHZhbHVlIH0pfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICB7YW5ub3RhdGlvblR5cGUgIT09IEFOTk9UQVRJT05fVFlQRVMuVElNRV9TRVJJRVMgJiYgKFxyXG4gICAgICAgICAgICAgIDxTZWxlY3RDb250cm9sXHJcbiAgICAgICAgICAgICAgICBhcmlhTGFiZWw9e3QoJ0Fubm90YXRpb24gbGF5ZXIgZGVzY3JpcHRpb24gY29sdW1ucycpfVxyXG4gICAgICAgICAgICAgICAgaG92ZXJlZFxyXG4gICAgICAgICAgICAgICAgbmFtZT1cImFubm90YXRpb24tbGF5ZXItdGl0bGVcIlxyXG4gICAgICAgICAgICAgICAgbGFiZWw9e3QoJ0Rlc2NyaXB0aW9uIENvbHVtbnMnKX1cclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KFxyXG4gICAgICAgICAgICAgICAgICBcIlBpY2sgb25lIG9yIG1vcmUgY29sdW1ucyB0aGF0IHNob3VsZCBiZSBzaG93biBpbiB0aGUgYW5ub3RhdGlvbi4gSWYgeW91IGRvbid0IHNlbGVjdCBhIGNvbHVtbiBhbGwgb2YgdGhlbSB3aWxsIGJlIHNob3duLlwiLFxyXG4gICAgICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgICAgIG11bHRpXHJcbiAgICAgICAgICAgICAgICBvcHRpb25zPXtjb2x1bW5zfVxyXG4gICAgICAgICAgICAgICAgdmFsdWU9e2Rlc2NyaXB0aW9uQ29sdW1uc31cclxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt2YWx1ZSA9PiB0aGlzLnNldFN0YXRlKHsgZGVzY3JpcHRpb25Db2x1bW5zOiB2YWx1ZSB9KX1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IG1hcmdpblRvcDogJzFyZW0nIH19PlxyXG4gICAgICAgICAgICAgIDxDaGVja2JveENvbnRyb2xcclxuICAgICAgICAgICAgICAgIGhvdmVyZWRcclxuICAgICAgICAgICAgICAgIG5hbWU9XCJhbm5vdGF0aW9uLW92ZXJyaWRlLXRpbWVfcmFuZ2VcIlxyXG4gICAgICAgICAgICAgICAgbGFiZWw9XCJPdmVycmlkZSB0aW1lIHJhbmdlXCJcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXtgVGhpcyBjb250cm9scyB3aGV0aGVyIHRoZSBcInRpbWVfcmFuZ2VcIiBmaWVsZCBmcm9tIHRoZSBjdXJyZW50XHJcbiAgICAgICAgICAgICAgICAgIHZpZXcgc2hvdWxkIGJlIHBhc3NlZCBkb3duIHRvIHRoZSBjaGFydCBjb250YWluaW5nIHRoZSBhbm5vdGF0aW9uIGRhdGEuYH1cclxuICAgICAgICAgICAgICAgIHZhbHVlPXsndGltZV9yYW5nZScgaW4gb3ZlcnJpZGVzfVxyXG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3YgPT4ge1xyXG4gICAgICAgICAgICAgICAgICBkZWxldGUgb3ZlcnJpZGVzLnRpbWVfcmFuZ2U7XHJcbiAgICAgICAgICAgICAgICAgIGlmICh2KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICBvdmVycmlkZXM6IHsgLi4ub3ZlcnJpZGVzLCB0aW1lX3JhbmdlOiBudWxsIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IG92ZXJyaWRlczogeyAuLi5vdmVycmlkZXMgfSB9KTtcclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgIDxDaGVja2JveENvbnRyb2xcclxuICAgICAgICAgICAgICAgIGhvdmVyZWRcclxuICAgICAgICAgICAgICAgIG5hbWU9XCJhbm5vdGF0aW9uLW92ZXJyaWRlLXRpbWVncmFpblwiXHJcbiAgICAgICAgICAgICAgICBsYWJlbD1cIk92ZXJyaWRlIHRpbWUgZ3JhaW5cIlxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e2BUaGlzIGNvbnRyb2xzIHdoZXRoZXIgdGhlIHRpbWUgZ3JhaW4gZmllbGQgZnJvbSB0aGUgY3VycmVudFxyXG4gICAgICAgICAgICAgICAgICB2aWV3IHNob3VsZCBiZSBwYXNzZWQgZG93biB0byB0aGUgY2hhcnQgY29udGFpbmluZyB0aGUgYW5ub3RhdGlvbiBkYXRhLmB9XHJcbiAgICAgICAgICAgICAgICB2YWx1ZT17J3RpbWVfZ3JhaW5fc3FsYScgaW4gb3ZlcnJpZGVzfVxyXG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3YgPT4ge1xyXG4gICAgICAgICAgICAgICAgICBkZWxldGUgb3ZlcnJpZGVzLnRpbWVfZ3JhaW5fc3FsYTtcclxuICAgICAgICAgICAgICAgICAgZGVsZXRlIG92ZXJyaWRlcy5ncmFudWxhcml0eTtcclxuICAgICAgICAgICAgICAgICAgaWYgKHYpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICAgICAgICAgICAgICAgIG92ZXJyaWRlczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5vdmVycmlkZXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVfZ3JhaW5fc3FsYTogbnVsbCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZ3JhbnVsYXJpdHk6IG51bGwsXHJcbiAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBvdmVycmlkZXM6IHsgLi4ub3ZlcnJpZGVzIH0gfSk7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICA8VGV4dENvbnRyb2xcclxuICAgICAgICAgICAgICAgIGhvdmVyZWRcclxuICAgICAgICAgICAgICAgIG5hbWU9XCJhbm5vdGF0aW9uLWxheWVyLXRpbWVzaGlmdFwiXHJcbiAgICAgICAgICAgICAgICBsYWJlbD1cIlRpbWUgU2hpZnRcIlxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e2BUaW1lIGRlbHRhIGluIG5hdHVyYWwgbGFuZ3VhZ2VcclxuICAgICAgICAgICAgICAgICAgKGV4YW1wbGU6ICAyNCBob3VycywgNyBkYXlzLCA1NiB3ZWVrcywgMzY1IGRheXMpYH1cclxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiXCJcclxuICAgICAgICAgICAgICAgIHZhbHVlPXtvdmVycmlkZXMudGltZV9zaGlmdH1cclxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt2ID0+XHJcbiAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBvdmVycmlkZXM6IHsgLi4ub3ZlcnJpZGVzLCB0aW1lX3NoaWZ0OiB2IH0gfSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvUG9wb3ZlclNlY3Rpb24+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gJyc7XHJcbiAgfVxyXG5cclxuICByZW5kZXJEaXNwbGF5Q29uZmlndXJhdGlvbigpIHtcclxuICAgIGNvbnN0IHtcclxuICAgICAgY29sb3IsXHJcbiAgICAgIG9wYWNpdHksXHJcbiAgICAgIHN0eWxlLFxyXG4gICAgICB3aWR0aCxcclxuICAgICAgc2hvd01hcmtlcnMsXHJcbiAgICAgIGhpZGVMaW5lLFxyXG4gICAgICBhbm5vdGF0aW9uVHlwZSxcclxuICAgIH0gPSB0aGlzLnN0YXRlO1xyXG4gICAgY29uc3QgY29sb3JTY2hlbWUgPSBnZXRDYXRlZ29yaWNhbFNjaGVtZVJlZ2lzdHJ5KClcclxuICAgICAgLmdldCh0aGlzLnByb3BzLmNvbG9yU2NoZW1lKVxyXG4gICAgICAuY29sb3JzLmNvbmNhdCgpO1xyXG4gICAgaWYgKFxyXG4gICAgICBjb2xvciAmJlxyXG4gICAgICBjb2xvciAhPT0gQVVUT01BVElDX0NPTE9SICYmXHJcbiAgICAgICFjb2xvclNjaGVtZS5maW5kKHggPT4geC50b0xvd2VyQ2FzZSgpID09PSBjb2xvci50b0xvd2VyQ2FzZSgpKVxyXG4gICAgKSB7XHJcbiAgICAgIGNvbG9yU2NoZW1lLnB1c2goY29sb3IpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIChcclxuICAgICAgPFBvcG92ZXJTZWN0aW9uXHJcbiAgICAgICAgaXNTZWxlY3RlZFxyXG4gICAgICAgIHRpdGxlPXt0KCdEaXNwbGF5IGNvbmZpZ3VyYXRpb24nKX1cclxuICAgICAgICBpbmZvPXt0KCdDb25maWd1cmUgeW91ciBob3cgeW91IG92ZXJsYXkgaXMgZGlzcGxheWVkIGhlcmUuJyl9XHJcbiAgICAgID5cclxuICAgICAgICA8U2VsZWN0Q29udHJvbFxyXG4gICAgICAgICAgYXJpYUxhYmVsPXt0KCdBbm5vdGF0aW9uIGxheWVyIHN0cm9rZScpfVxyXG4gICAgICAgICAgbmFtZT1cImFubm90YXRpb24tbGF5ZXItc3Ryb2tlXCJcclxuICAgICAgICAgIGxhYmVsPXt0KCdTdHlsZScpfVxyXG4gICAgICAgICAgLy8gc2VlICcuLi8uLi8uLi92aXN1YWxpemF0aW9ucy9udmQzX3Zpcy5jc3MnXHJcbiAgICAgICAgICBvcHRpb25zPXtbXHJcbiAgICAgICAgICAgIHsgdmFsdWU6ICdzb2xpZCcsIGxhYmVsOiAnU29saWQnIH0sXHJcbiAgICAgICAgICAgIHsgdmFsdWU6ICdkYXNoZWQnLCBsYWJlbDogJ0Rhc2hlZCcgfSxcclxuICAgICAgICAgICAgeyB2YWx1ZTogJ2xvbmdEYXNoZWQnLCBsYWJlbDogJ0xvbmcgZGFzaGVkJyB9LFxyXG4gICAgICAgICAgICB7IHZhbHVlOiAnZG90dGVkJywgbGFiZWw6ICdEb3R0ZWQnIH0sXHJcbiAgICAgICAgICBdfVxyXG4gICAgICAgICAgdmFsdWU9e3N0eWxlfVxyXG4gICAgICAgICAgY2xlYXJhYmxlPXtmYWxzZX1cclxuICAgICAgICAgIG9uQ2hhbmdlPXt2ID0+IHRoaXMuc2V0U3RhdGUoeyBzdHlsZTogdiB9KX1cclxuICAgICAgICAvPlxyXG4gICAgICAgIDxTZWxlY3RDb250cm9sXHJcbiAgICAgICAgICBhcmlhTGFiZWw9e3QoJ0Fubm90YXRpb24gbGF5ZXIgb3BhY2l0eScpfVxyXG4gICAgICAgICAgbmFtZT1cImFubm90YXRpb24tbGF5ZXItb3BhY2l0eVwiXHJcbiAgICAgICAgICBsYWJlbD17dCgnT3BhY2l0eScpfVxyXG4gICAgICAgICAgLy8gc2VlICcuLi8uLi8uLi92aXN1YWxpemF0aW9ucy9udmQzX3Zpcy5jc3MnXHJcbiAgICAgICAgICBvcHRpb25zPXtbXHJcbiAgICAgICAgICAgIHsgdmFsdWU6ICcnLCBsYWJlbDogJ1NvbGlkJyB9LFxyXG4gICAgICAgICAgICB7IHZhbHVlOiAnb3BhY2l0eUxvdycsIGxhYmVsOiAnMC4yJyB9LFxyXG4gICAgICAgICAgICB7IHZhbHVlOiAnb3BhY2l0eU1lZGl1bScsIGxhYmVsOiAnMC41JyB9LFxyXG4gICAgICAgICAgICB7IHZhbHVlOiAnb3BhY2l0eUhpZ2gnLCBsYWJlbDogJzAuOCcgfSxcclxuICAgICAgICAgIF19XHJcbiAgICAgICAgICB2YWx1ZT17b3BhY2l0eX1cclxuICAgICAgICAgIG9uQ2hhbmdlPXt2YWx1ZSA9PiB0aGlzLnNldFN0YXRlKHsgb3BhY2l0eTogdmFsdWUgfSl9XHJcbiAgICAgICAgLz5cclxuICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgPENvbnRyb2xIZWFkZXIgbGFiZWw9e3QoJ0NvbG9yJyl9IC8+XHJcbiAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywgZmxleERpcmVjdGlvbjogJ2NvbHVtbicgfX0+XHJcbiAgICAgICAgICAgIDxDb21wYWN0UGlja2VyXHJcbiAgICAgICAgICAgICAgY29sb3I9e2NvbG9yfVxyXG4gICAgICAgICAgICAgIGNvbG9ycz17Y29sb3JTY2hlbWV9XHJcbiAgICAgICAgICAgICAgb25DaGFuZ2VDb21wbGV0ZT17diA9PiB0aGlzLnNldFN0YXRlKHsgY29sb3I6IHYuaGV4IH0pfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8QnV0dG9uXHJcbiAgICAgICAgICAgICAgc3R5bGU9e3sgbWFyZ2luVG9wOiAnMC41cmVtJywgbWFyZ2luQm90dG9tOiAnMC41cmVtJyB9fVxyXG4gICAgICAgICAgICAgIGJ1dHRvblN0eWxlPXtjb2xvciA9PT0gQVVUT01BVElDX0NPTE9SID8gJ3N1Y2Nlc3MnIDogJ2RlZmF1bHQnfVxyXG4gICAgICAgICAgICAgIGJ1dHRvblNpemU9XCJ4c21hbGxcIlxyXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHRoaXMuc2V0U3RhdGUoeyBjb2xvcjogQVVUT01BVElDX0NPTE9SIH0pfVxyXG4gICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgQXV0b21hdGljIENvbG9yXHJcbiAgICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPFRleHRDb250cm9sXHJcbiAgICAgICAgICBuYW1lPVwiYW5ub3RhdGlvbi1sYXllci1zdHJva2Utd2lkdGhcIlxyXG4gICAgICAgICAgbGFiZWw9e3QoJ0xpbmUgd2lkdGgnKX1cclxuICAgICAgICAgIGlzSW50XHJcbiAgICAgICAgICB2YWx1ZT17d2lkdGh9XHJcbiAgICAgICAgICBvbkNoYW5nZT17diA9PiB0aGlzLnNldFN0YXRlKHsgd2lkdGg6IHYgfSl9XHJcbiAgICAgICAgLz5cclxuICAgICAgICB7YW5ub3RhdGlvblR5cGUgPT09IEFOTk9UQVRJT05fVFlQRVMuVElNRV9TRVJJRVMgJiYgKFxyXG4gICAgICAgICAgPENoZWNrYm94Q29udHJvbFxyXG4gICAgICAgICAgICBob3ZlcmVkXHJcbiAgICAgICAgICAgIG5hbWU9XCJhbm5vdGF0aW9uLWxheWVyLXNob3ctbWFya2Vyc1wiXHJcbiAgICAgICAgICAgIGxhYmVsPVwiU2hvdyBNYXJrZXJzXCJcclxuICAgICAgICAgICAgZGVzY3JpcHRpb249XCJTaG93cyBvciBoaWRlcyBtYXJrZXJzIGZvciB0aGUgdGltZSBzZXJpZXNcIlxyXG4gICAgICAgICAgICB2YWx1ZT17c2hvd01hcmtlcnN9XHJcbiAgICAgICAgICAgIG9uQ2hhbmdlPXt2ID0+IHRoaXMuc2V0U3RhdGUoeyBzaG93TWFya2VyczogdiB9KX1cclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgKX1cclxuICAgICAgICB7YW5ub3RhdGlvblR5cGUgPT09IEFOTk9UQVRJT05fVFlQRVMuVElNRV9TRVJJRVMgJiYgKFxyXG4gICAgICAgICAgPENoZWNrYm94Q29udHJvbFxyXG4gICAgICAgICAgICBob3ZlcmVkXHJcbiAgICAgICAgICAgIG5hbWU9XCJhbm5vdGF0aW9uLWxheWVyLWhpZGUtbGluZVwiXHJcbiAgICAgICAgICAgIGxhYmVsPVwiSGlkZSBMaW5lXCJcclxuICAgICAgICAgICAgZGVzY3JpcHRpb249XCJIaWRlcyB0aGUgTGluZSBmb3IgdGhlIHRpbWUgc2VyaWVzXCJcclxuICAgICAgICAgICAgdmFsdWU9e2hpZGVMaW5lfVxyXG4gICAgICAgICAgICBvbkNoYW5nZT17diA9PiB0aGlzLnNldFN0YXRlKHsgaGlkZUxpbmU6IHYgfSl9XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICl9XHJcbiAgICAgIDwvUG9wb3ZlclNlY3Rpb24+XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgeyBpc05ldywgbmFtZSwgYW5ub3RhdGlvblR5cGUsIHNvdXJjZVR5cGUsIHNob3csIHNob3dMYWJlbCB9ID1cclxuICAgICAgdGhpcy5zdGF0ZTtcclxuICAgIGNvbnN0IGlzVmFsaWQgPSB0aGlzLmlzVmFsaWRGb3JtKCk7XHJcbiAgICBjb25zdCBtZXRhZGF0YSA9IGdldENoYXJ0TWV0YWRhdGFSZWdpc3RyeSgpLmdldCh0aGlzLnByb3BzLnZpelR5cGUpO1xyXG4gICAgY29uc3Qgc3VwcG9ydGVkQW5ub3RhdGlvblR5cGVzID0gbWV0YWRhdGFcclxuICAgICAgPyBtZXRhZGF0YS5zdXBwb3J0ZWRBbm5vdGF0aW9uVHlwZXMubWFwKFxyXG4gICAgICAgICAgdHlwZSA9PiBBTk5PVEFUSU9OX1RZUEVTX01FVEFEQVRBW3R5cGVdLFxyXG4gICAgICAgIClcclxuICAgICAgOiBbXTtcclxuICAgIGNvbnN0IHN1cHBvcnRlZFNvdXJjZVR5cGVzID0gdGhpcy5nZXRTdXBwb3J0ZWRTb3VyY2VUeXBlcyhhbm5vdGF0aW9uVHlwZSk7XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgPD5cclxuICAgICAgICB7dGhpcy5wcm9wcy5lcnJvciAmJiAoXHJcbiAgICAgICAgICA8c3BhbiBzdHlsZT17eyBjb2xvcjogJ3JlZCcgfX0+RVJST1I6IHt0aGlzLnByb3BzLmVycm9yfTwvc3Bhbj5cclxuICAgICAgICApfVxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgZGlzcGxheTogJ2ZsZXgnLCBmbGV4RGlyZWN0aW9uOiAncm93JyB9fT5cclxuICAgICAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luUmlnaHQ6ICcycmVtJyB9fT5cclxuICAgICAgICAgICAgPFBvcG92ZXJTZWN0aW9uXHJcbiAgICAgICAgICAgICAgaXNTZWxlY3RlZFxyXG4gICAgICAgICAgICAgIHRpdGxlPXt0KCdMYXllciBjb25maWd1cmF0aW9uJyl9XHJcbiAgICAgICAgICAgICAgaW5mbz17dCgnQ29uZmlndXJlIHRoZSBiYXNpY3Mgb2YgeW91ciBBbm5vdGF0aW9uIExheWVyLicpfVxyXG4gICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgPFRleHRDb250cm9sXHJcbiAgICAgICAgICAgICAgICBuYW1lPVwiYW5ub3RhdGlvbi1sYXllci1uYW1lXCJcclxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdOYW1lJyl9XHJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIlwiXHJcbiAgICAgICAgICAgICAgICB2YWx1ZT17bmFtZX1cclxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt2ID0+IHRoaXMuc2V0U3RhdGUoeyBuYW1lOiB2IH0pfVxyXG4gICAgICAgICAgICAgICAgdmFsaWRhdGlvbkVycm9ycz17IW5hbWUgPyBbdCgnTWFuZGF0b3J5JyldIDogW119XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICA8Q2hlY2tib3hDb250cm9sXHJcbiAgICAgICAgICAgICAgICBuYW1lPVwiYW5ub3RhdGlvbi1sYXllci1oaWRlXCJcclxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdIaWRlIGxheWVyJyl9XHJcbiAgICAgICAgICAgICAgICB2YWx1ZT17IXNob3d9XHJcbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17diA9PiB0aGlzLnNldFN0YXRlKHsgc2hvdzogIXYgfSl9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICA8Q2hlY2tib3hDb250cm9sXHJcbiAgICAgICAgICAgICAgICBuYW1lPVwiYW5ub3RhdGlvbi1sYWJlbC1zaG93XCJcclxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdTaG93IGxhYmVsJyl9XHJcbiAgICAgICAgICAgICAgICB2YWx1ZT17c2hvd0xhYmVsfVxyXG4gICAgICAgICAgICAgICAgaG92ZXJlZFxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoJ1doZXRoZXIgdG8gYWx3YXlzIHNob3cgdGhlIGFubm90YXRpb24gbGFiZWwnKX1cclxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt2ID0+IHRoaXMuc2V0U3RhdGUoeyBzaG93TGFiZWw6IHYgfSl9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICA8U2VsZWN0Q29udHJvbFxyXG4gICAgICAgICAgICAgICAgYXJpYUxhYmVsPXt0KCdBbm5vdGF0aW9uIGxheWVyIHR5cGUnKX1cclxuICAgICAgICAgICAgICAgIGhvdmVyZWRcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KCdDaG9vc2UgdGhlIGFubm90YXRpb24gbGF5ZXIgdHlwZScpfVxyXG4gICAgICAgICAgICAgICAgbGFiZWw9e3QoJ0Fubm90YXRpb24gbGF5ZXIgdHlwZScpfVxyXG4gICAgICAgICAgICAgICAgbmFtZT1cImFubm90YXRpb24tbGF5ZXItdHlwZVwiXHJcbiAgICAgICAgICAgICAgICBjbGVhcmFibGU9e2ZhbHNlfVxyXG4gICAgICAgICAgICAgICAgb3B0aW9ucz17c3VwcG9ydGVkQW5ub3RhdGlvblR5cGVzfVxyXG4gICAgICAgICAgICAgICAgdmFsdWU9e2Fubm90YXRpb25UeXBlfVxyXG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQW5ub3RhdGlvblR5cGV9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICB7c3VwcG9ydGVkU291cmNlVHlwZXMubGVuZ3RoID4gMCAmJiAoXHJcbiAgICAgICAgICAgICAgICA8U2VsZWN0Q29udHJvbFxyXG4gICAgICAgICAgICAgICAgICBhcmlhTGFiZWw9e3QoJ0Fubm90YXRpb24gc291cmNlIHR5cGUnKX1cclxuICAgICAgICAgICAgICAgICAgaG92ZXJlZFxyXG4gICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbj17dCgnQ2hvb3NlIHRoZSBzb3VyY2Ugb2YgeW91ciBhbm5vdGF0aW9ucycpfVxyXG4gICAgICAgICAgICAgICAgICBsYWJlbD17dCgnQW5ub3RhdGlvbiBTb3VyY2UnKX1cclxuICAgICAgICAgICAgICAgICAgbmFtZT1cImFubm90YXRpb24tc291cmNlLXR5cGVcIlxyXG4gICAgICAgICAgICAgICAgICBvcHRpb25zPXtzdXBwb3J0ZWRTb3VyY2VUeXBlc31cclxuICAgICAgICAgICAgICAgICAgdmFsdWU9e3NvdXJjZVR5cGV9XHJcbiAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUFubm90YXRpb25Tb3VyY2VUeXBlfVxyXG4gICAgICAgICAgICAgICAgICB2YWxpZGF0aW9uRXJyb3JzPXshc291cmNlVHlwZSA/IFt0KCdNYW5kYXRvcnknKV0gOiBbXX1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgICB7dGhpcy5yZW5kZXJWYWx1ZUNvbmZpZ3VyYXRpb24oKX1cclxuICAgICAgICAgICAgPC9Qb3BvdmVyU2VjdGlvbj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAge3RoaXMucmVuZGVyU2xpY2VDb25maWd1cmF0aW9uKCl9XHJcbiAgICAgICAgICB7dGhpcy5yZW5kZXJEaXNwbGF5Q29uZmlndXJhdGlvbigpfVxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgZGlzcGxheTogJ2ZsZXgnLCBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nIH19PlxyXG4gICAgICAgICAge2lzTmV3ID8gKFxyXG4gICAgICAgICAgICA8QnV0dG9uIGJ1dHRvblNpemU9XCJzbWFsbFwiIG9uQ2xpY2s9eygpID0+IHRoaXMucHJvcHMuY2xvc2UoKX0+XHJcbiAgICAgICAgICAgICAge3QoJ0NhbmNlbCcpfVxyXG4gICAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgIDxCdXR0b24gYnV0dG9uU2l6ZT1cInNtYWxsXCIgb25DbGljaz17dGhpcy5kZWxldGVBbm5vdGF0aW9ufT5cclxuICAgICAgICAgICAgICB7dCgnUmVtb3ZlJyl9XHJcbiAgICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgICAgKX1cclxuICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgIDxCdXR0b25cclxuICAgICAgICAgICAgICBidXR0b25TaXplPVwic21hbGxcIlxyXG4gICAgICAgICAgICAgIGRpc2FibGVkPXshaXNWYWxpZH1cclxuICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLmFwcGx5QW5ub3RhdGlvbn1cclxuICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgIHt0KCdBcHBseScpfVxyXG4gICAgICAgICAgICA8L0J1dHRvbj5cclxuXHJcbiAgICAgICAgICAgIDxCdXR0b25cclxuICAgICAgICAgICAgICBidXR0b25TaXplPVwic21hbGxcIlxyXG4gICAgICAgICAgICAgIGJ1dHRvblN0eWxlPVwicHJpbWFyeVwiXHJcbiAgICAgICAgICAgICAgZGlzYWJsZWQ9eyFpc1ZhbGlkfVxyXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuc3VibWl0QW5ub3RhdGlvbn1cclxuICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgIHt0KCdPSycpfVxyXG4gICAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8Lz5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5Bbm5vdGF0aW9uTGF5ZXIucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xyXG5Bbm5vdGF0aW9uTGF5ZXIuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx\n");

/***/ }),

/***/ "./node_modules/math-expression-evaluator/src/formula_evaluator.js":
/*!*************************************************************************!*\
  !*** ./node_modules/math-expression-evaluator/src/formula_evaluator.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Mexp=__webpack_require__(/*! ./postfix_evaluator.js */ \"./node_modules/math-expression-evaluator/src/postfix_evaluator.js\");\r\nMexp.prototype.formulaEval = function () {\r\n\t\"use strict\";\r\n\tvar stack=[],pop1,pop2,pop3;\r\n\tvar disp=[];\r\n\tvar temp='';\r\n\tvar arr=this.value;\r\n\tfor(var i=0;i<arr.length;i++){\r\n\t\tif(arr[i].type===1||arr[i].type===3){\r\n\t\t\tdisp.push({value:arr[i].type===3?arr[i].show:arr[i].value,type:1});\r\n\t\t}\r\n\t\telse if(arr[i].type===13){\r\n\t\t\tdisp.push({value:arr[i].show,type:1});\r\n\t\t}\r\n\t\telse if(arr[i].type===0){\r\n\t\t\tdisp[disp.length-1]={value:arr[i].show+(arr[i].show!=\"-\"?\"(\":\"\")+disp[disp.length-1].value+(arr[i].show!=\"-\"?\")\":\"\"),type:0};\r\n\t\t}\r\n\t\telse if(arr[i].type===7){\r\n\t\t\tdisp[disp.length-1]={value:(disp[disp.length-1].type!=1?\"(\":\"\")+disp[disp.length-1].value+(disp[disp.length-1].type!=1?\")\":\"\")+arr[i].show,type:7};\r\n\t\t}\r\n\t\telse if(arr[i].type===10){\r\n\t\t\tpop1=disp.pop();\r\n\t\t\tpop2=disp.pop();\r\n\t\t\tif(arr[i].show==='P'||arr[i].show==='C')disp.push({value:\"<sup>\"+pop2.value+\"</sup>\"+arr[i].show+\"<sub>\"+pop1.value+\"</sub>\",type:10});\r\n\t\t\telse disp.push({value:(pop2.type!=1?\"(\":\"\")+pop2.value+(pop2.type!=1?\")\":\"\")+\"<sup>\"+pop1.value+\"</sup>\",type:1});\r\n\t\t}\r\n\t\telse if(arr[i].type===2||arr[i].type===9){\r\n\t\t\tpop1=disp.pop();\r\n\t\t\tpop2=disp.pop();\r\n\t\t\tdisp.push({value:(pop2.type!=1?\"(\":\"\")+pop2.value+(pop2.type!=1?\")\":\"\")+arr[i].show+(pop1.type!=1?\"(\":\"\")+pop1.value+(pop1.type!=1?\")\":\"\"),type:arr[i].type});\r\n\t\t}\r\n\t\telse if(arr[i].type===12){\r\n\t\t\tpop1=disp.pop();\r\n\t\t\tpop2=disp.pop();\r\n\t\t\tpop3=disp.pop();\r\n\t\t\tdisp.push({value:arr[i].show+\"(\"+pop3.value+\",\"+pop2.value+\",\"+pop1.value+\")\",type:12});\r\n\t\t}\r\n\t}\r\n\treturn disp[0].value;\r\n};\r\nmodule.exports=Mexp;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aC1leHByZXNzaW9uLWV2YWx1YXRvci9zcmMvZm9ybXVsYV9ldmFsdWF0b3IuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL21hdGgtZXhwcmVzc2lvbi1ldmFsdWF0b3Ivc3JjL2Zvcm11bGFfZXZhbHVhdG9yLmpzPzlmOGYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIE1leHA9cmVxdWlyZSgnLi9wb3N0Zml4X2V2YWx1YXRvci5qcycpO1xyXG5NZXhwLnByb3RvdHlwZS5mb3JtdWxhRXZhbCA9IGZ1bmN0aW9uICgpIHtcclxuXHRcInVzZSBzdHJpY3RcIjtcclxuXHR2YXIgc3RhY2s9W10scG9wMSxwb3AyLHBvcDM7XHJcblx0dmFyIGRpc3A9W107XHJcblx0dmFyIHRlbXA9Jyc7XHJcblx0dmFyIGFycj10aGlzLnZhbHVlO1xyXG5cdGZvcih2YXIgaT0wO2k8YXJyLmxlbmd0aDtpKyspe1xyXG5cdFx0aWYoYXJyW2ldLnR5cGU9PT0xfHxhcnJbaV0udHlwZT09PTMpe1xyXG5cdFx0XHRkaXNwLnB1c2goe3ZhbHVlOmFycltpXS50eXBlPT09Mz9hcnJbaV0uc2hvdzphcnJbaV0udmFsdWUsdHlwZToxfSk7XHJcblx0XHR9XHJcblx0XHRlbHNlIGlmKGFycltpXS50eXBlPT09MTMpe1xyXG5cdFx0XHRkaXNwLnB1c2goe3ZhbHVlOmFycltpXS5zaG93LHR5cGU6MX0pO1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZihhcnJbaV0udHlwZT09PTApe1xyXG5cdFx0XHRkaXNwW2Rpc3AubGVuZ3RoLTFdPXt2YWx1ZTphcnJbaV0uc2hvdysoYXJyW2ldLnNob3chPVwiLVwiP1wiKFwiOlwiXCIpK2Rpc3BbZGlzcC5sZW5ndGgtMV0udmFsdWUrKGFycltpXS5zaG93IT1cIi1cIj9cIilcIjpcIlwiKSx0eXBlOjB9O1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZihhcnJbaV0udHlwZT09PTcpe1xyXG5cdFx0XHRkaXNwW2Rpc3AubGVuZ3RoLTFdPXt2YWx1ZTooZGlzcFtkaXNwLmxlbmd0aC0xXS50eXBlIT0xP1wiKFwiOlwiXCIpK2Rpc3BbZGlzcC5sZW5ndGgtMV0udmFsdWUrKGRpc3BbZGlzcC5sZW5ndGgtMV0udHlwZSE9MT9cIilcIjpcIlwiKSthcnJbaV0uc2hvdyx0eXBlOjd9O1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZihhcnJbaV0udHlwZT09PTEwKXtcclxuXHRcdFx0cG9wMT1kaXNwLnBvcCgpO1xyXG5cdFx0XHRwb3AyPWRpc3AucG9wKCk7XHJcblx0XHRcdGlmKGFycltpXS5zaG93PT09J1AnfHxhcnJbaV0uc2hvdz09PSdDJylkaXNwLnB1c2goe3ZhbHVlOlwiPHN1cD5cIitwb3AyLnZhbHVlK1wiPC9zdXA+XCIrYXJyW2ldLnNob3crXCI8c3ViPlwiK3BvcDEudmFsdWUrXCI8L3N1Yj5cIix0eXBlOjEwfSk7XHJcblx0XHRcdGVsc2UgZGlzcC5wdXNoKHt2YWx1ZToocG9wMi50eXBlIT0xP1wiKFwiOlwiXCIpK3BvcDIudmFsdWUrKHBvcDIudHlwZSE9MT9cIilcIjpcIlwiKStcIjxzdXA+XCIrcG9wMS52YWx1ZStcIjwvc3VwPlwiLHR5cGU6MX0pO1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZihhcnJbaV0udHlwZT09PTJ8fGFycltpXS50eXBlPT09OSl7XHJcblx0XHRcdHBvcDE9ZGlzcC5wb3AoKTtcclxuXHRcdFx0cG9wMj1kaXNwLnBvcCgpO1xyXG5cdFx0XHRkaXNwLnB1c2goe3ZhbHVlOihwb3AyLnR5cGUhPTE/XCIoXCI6XCJcIikrcG9wMi52YWx1ZSsocG9wMi50eXBlIT0xP1wiKVwiOlwiXCIpK2FycltpXS5zaG93Kyhwb3AxLnR5cGUhPTE/XCIoXCI6XCJcIikrcG9wMS52YWx1ZSsocG9wMS50eXBlIT0xP1wiKVwiOlwiXCIpLHR5cGU6YXJyW2ldLnR5cGV9KTtcclxuXHRcdH1cclxuXHRcdGVsc2UgaWYoYXJyW2ldLnR5cGU9PT0xMil7XHJcblx0XHRcdHBvcDE9ZGlzcC5wb3AoKTtcclxuXHRcdFx0cG9wMj1kaXNwLnBvcCgpO1xyXG5cdFx0XHRwb3AzPWRpc3AucG9wKCk7XHJcblx0XHRcdGRpc3AucHVzaCh7dmFsdWU6YXJyW2ldLnNob3crXCIoXCIrcG9wMy52YWx1ZStcIixcIitwb3AyLnZhbHVlK1wiLFwiK3BvcDEudmFsdWUrXCIpXCIsdHlwZToxMn0pO1xyXG5cdFx0fVxyXG5cdH1cclxuXHRyZXR1cm4gZGlzcFswXS52YWx1ZTtcclxufTtcclxubW9kdWxlLmV4cG9ydHM9TWV4cDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/math-expression-evaluator/src/formula_evaluator.js\n");

/***/ }),

/***/ "./node_modules/math-expression-evaluator/src/lexer.js":
/*!*************************************************************!*\
  !*** ./node_modules/math-expression-evaluator/src/lexer.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\nvar Mexp = __webpack_require__(/*! ./math_function.js */ \"./node_modules/math-expression-evaluator/src/math_function.js\")\r\nfunction inc (arr, val) {\r\n  for (var i = 0; i < arr.length; i++) {\r\n    arr[i] += val\r\n  }\r\n  return arr\r\n}\r\nvar token = [\r\n  'sin',\r\n  'cos',\r\n  'tan',\r\n  'pi',\r\n  '(',\r\n  ')',\r\n  'P',\r\n  'C',\r\n  ' ',\r\n  'asin',\r\n  'acos',\r\n  'atan',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  'int',\r\n  'cosh',\r\n  'acosh',\r\n  'ln',\r\n  '^',\r\n  'root',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '/',\r\n  '!',\r\n  'tanh',\r\n  'atanh',\r\n  'Mod',\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '*',\r\n  'sinh',\r\n  'asinh',\r\n  'e',\r\n  'log',\r\n  '0',\r\n  '.',\r\n  '+',\r\n  '-',\r\n  ',',\r\n  'Sigma',\r\n  'n',\r\n  'Pi',\r\n  'pow'\r\n]\r\nvar show = [\r\n  'sin',\r\n  'cos',\r\n  'tan',\r\n  '&pi;',\r\n  '(',\r\n  ')',\r\n  'P',\r\n  'C',\r\n  ' ',\r\n  'asin',\r\n  'acos',\r\n  'atan',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  'Int',\r\n  'cosh',\r\n  'acosh',\r\n  ' ln',\r\n  '^',\r\n  'root',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '&divide;',\r\n  '!',\r\n  'tanh',\r\n  'atanh',\r\n  ' Mod ',\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '&times;',\r\n  'sinh',\r\n  'asinh',\r\n  'e',\r\n  ' log',\r\n  '0',\r\n  '.',\r\n  '+',\r\n  '-',\r\n  ',',\r\n  '&Sigma;',\r\n  'n',\r\n  '&Pi;',\r\n  'pow'\r\n]\r\nvar eva = [\r\n  Mexp.math.sin,\r\n  Mexp.math.cos,\r\n  Mexp.math.tan,\r\n  'PI',\r\n  '(',\r\n  ')',\r\n  Mexp.math.P,\r\n  Mexp.math.C,\r\n  ' '.anchor,\r\n  Mexp.math.asin,\r\n  Mexp.math.acos,\r\n  Mexp.math.atan,\r\n  '7',\r\n  '8',\r\n  '9',\r\n  Math.floor,\r\n  Mexp.math.cosh,\r\n  Mexp.math.acosh,\r\n  Math.log,\r\n  Math.pow,\r\n  Math.sqrt,\r\n  '4',\r\n  '5',\r\n  '6',\r\n  Mexp.math.div,\r\n  Mexp.math.fact,\r\n  Mexp.math.tanh,\r\n  Mexp.math.atanh,\r\n  Mexp.math.mod,\r\n  '1',\r\n  '2',\r\n  '3',\r\n  Mexp.math.mul,\r\n  Mexp.math.sinh,\r\n  Mexp.math.asinh,\r\n  'E',\r\n  Mexp.math.log,\r\n  '0',\r\n  '.',\r\n  Mexp.math.add,\r\n  Mexp.math.sub,\r\n  ',',\r\n  Mexp.math.sigma,\r\n  'n',\r\n  Mexp.math.Pi,\r\n  Math.pow\r\n]\r\nvar preced = {\r\n  0: 11,\r\n  1: 0,\r\n  2: 3,\r\n  3: 0,\r\n  4: 0,\r\n  5: 0,\r\n  6: 0,\r\n  7: 11,\r\n  8: 11,\r\n  9: 1,\r\n  10: 10,\r\n  11: 0,\r\n  12: 11,\r\n  13: 0,\r\n  14: -1 // will be filtered after lexer\r\n} // stores precedence by types\r\nvar type = [\r\n  0, 0, 0, 3, 4, 5, 10, 10, 14, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 10, 0, 1, 1, 1, 2, 7, 0, 0, 2, 1, 1,\r\n  1, 2, 0, 0, 3, 0, 1, 6, 9, 9, 11, 12, 13, 12, 8\r\n]\r\n/*\r\n0 : function with syntax function_name(Maths_exp)\r\n1 : numbers\r\n2 : binary operators like * / Mod left associate and same precedence\r\n3 : Math constant values like e,pi,Cruncher ans\r\n4 : opening bracket\r\n5 : closing bracket\r\n6 : decimal\r\n7 : function with syntax (Math_exp)function_name\r\n8: function with syntax function_name(Math_exp1,Math_exp2)\r\n9 : binary operator like +,-\r\n10: binary operator like P C or ^\r\n11: ,\r\n12: function with , seperated three parameters and third parameter is a string that will be mexp string\r\n13: variable of Sigma function\r\n*/\r\nvar type0 = {\r\n  0: true,\r\n  1: true,\r\n  3: true,\r\n  4: true,\r\n  6: true,\r\n  8: true,\r\n  9: true,\r\n  12: true,\r\n  13: true,\r\n  14: true\r\n} // type2:true,type4:true,type9:true,type11:true,type21:true,type22\r\nvar type1 = {\r\n  0: true,\r\n  1: true,\r\n  2: true,\r\n  3: true,\r\n  4: true,\r\n  5: true,\r\n  6: true,\r\n  7: true,\r\n  8: true,\r\n  9: true,\r\n  10: true,\r\n  11: true,\r\n  12: true,\r\n  13: true\r\n} // type3:true,type5:true,type7:true,type23\r\nvar type1Asterick = {\r\n  0: true,\r\n  3: true,\r\n  4: true,\r\n  8: true,\r\n  12: true,\r\n  13: true\r\n}\r\nvar empty = {}\r\nvar type3Asterick = {\r\n  0: true,\r\n  1: true,\r\n  3: true,\r\n  4: true,\r\n  6: true,\r\n  8: true,\r\n  12: true,\r\n  13: true\r\n} // type_5:true,type_7:true,type_23\r\nvar type6 = {\r\n  1: true\r\n}\r\nvar newAr = [\r\n  [],\r\n  [\r\n    '1',\r\n    '2',\r\n    '3',\r\n    '7',\r\n    '8',\r\n    '9',\r\n    '4',\r\n    '5',\r\n    '6',\r\n    '+',\r\n    '-',\r\n    '*',\r\n    '/',\r\n    '(',\r\n    ')',\r\n    '^',\r\n    '!',\r\n    'P',\r\n    'C',\r\n    'e',\r\n    '0',\r\n    '.',\r\n    ',',\r\n    'n',\r\n    ' '\r\n  ],\r\n  ['pi', 'ln', 'Pi'],\r\n  ['sin', 'cos', 'tan', 'Del', 'int', 'Mod', 'log', 'pow'],\r\n  ['asin', 'acos', 'atan', 'cosh', 'root', 'tanh', 'sinh'],\r\n  ['acosh', 'atanh', 'asinh', 'Sigma']\r\n]\r\n\r\nfunction match (str1, str2, i, x) {\r\n  for (var f = 0; f < x; f++) {\r\n    if (str1[i + f] !== str2[f]) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\nMexp.addToken = function (tokens) {\r\n  for (var i = 0; i < tokens.length; i++) {\r\n    var x = tokens[i].token.length\r\n    var temp = -1\r\n\r\n    // newAr is a specially designed data structure index of 1d array = length of tokens\r\n    newAr[x] = newAr[x] || []\r\n    for (var y = 0; y < newAr[x].length; y++) {\r\n      if (tokens[i].token === newAr[x][y]) {\r\n        temp = token.indexOf(newAr[x][y])\r\n        break\r\n      }\r\n    }\r\n    if (temp === -1) {\r\n      token.push(tokens[i].token)\r\n      type.push(tokens[i].type)\r\n      if (newAr.length <= tokens[i].token.length) {\r\n        newAr[tokens[i].token.length] = []\r\n      }\r\n      newAr[tokens[i].token.length].push(tokens[i].token)\r\n      eva.push(tokens[i].value)\r\n      show.push(tokens[i].show)\r\n    } else {\r\n      // overwrite\r\n      token[temp] = tokens[i].token\r\n      type[temp] = tokens[i].type\r\n      eva[temp] = tokens[i].value\r\n      show[temp] = tokens[i].show\r\n    }\r\n  }\r\n}\r\n\r\nfunction tokenize (string) {\r\n  var nodes = []\r\n  var length = string.length\r\n  var key, x, y\r\n  for (var i = 0; i < length; i++) {\r\n    if (i < length - 1 && string[i] === ' ' && string[i + 1] === ' ') {\r\n      continue\r\n    }\r\n    key = ''\r\n    for (\r\n      x = string.length - i > newAr.length - 2 ? newAr.length - 1 : string.length - i;\r\n      x > 0;\r\n      x--\r\n    ) {\r\n      if (newAr[x] === undefined) continue\r\n      for (y = 0; y < newAr[x].length; y++) {\r\n        if (match(string, newAr[x][y], i, x)) {\r\n          key = newAr[x][y]\r\n          y = newAr[x].length\r\n          x = 0\r\n        }\r\n      }\r\n    }\r\n    i += key.length - 1\r\n    if (key === '') {\r\n      throw new Mexp.Exception(\"Can't understand after \" + string.slice(i))\r\n    }\r\n    var index = token.indexOf(key)\r\n    nodes.push({\r\n      index: index,\r\n      token: key,\r\n      type: type[index],\r\n      eval: eva[index],\r\n      precedence: preced[type[index]],\r\n      show: show[index]\r\n    })\r\n  }\r\n  return nodes\r\n}\r\n\r\nMexp.lex = function (inp, tokens) {\r\n  'use strict'\r\n\r\n  var changeSignObj = {\r\n    value: Mexp.math.changeSign,\r\n    type: 0,\r\n    pre: 21,\r\n    show: '-'\r\n  }\r\n  var closingParObj = {\r\n    value: ')',\r\n    show: ')',\r\n    type: 5,\r\n    pre: 0\r\n  }\r\n  var openingParObj = {\r\n    value: '(',\r\n    type: 4,\r\n    pre: 0,\r\n    show: '('\r\n  }\r\n  var str = [openingParObj]\r\n\r\n  var ptc = [] // Parenthesis to close at the beginning is after one token\r\n  var inpStr = inp\r\n  var allowed = type0\r\n  var bracToClose = 0\r\n  var asterick = empty\r\n  var prevKey = ''\r\n  var i\r\n  if (typeof tokens !== 'undefined') {\r\n    Mexp.addToken(tokens)\r\n  }\r\n  var obj = {}\r\n  var nodes = tokenize(inpStr)\r\n  for (i = 0; i < nodes.length; i++) {\r\n    var node = nodes[i]\r\n    if (node.type === 14) {\r\n      if (\r\n        i > 0 &&\r\n        i < nodes.length - 1 &&\r\n        nodes[i + 1].type === 1 &&\r\n        (nodes[i - 1].type === 1 || nodes[i - 1].type === 6)\r\n      ) { throw new Mexp.Exception('Unexpected Space') }\r\n      continue\r\n    }\r\n    var cToken = node.token\r\n    var cType = node.type\r\n    var cEv = node.eval\r\n    var cPre = node.precedence\r\n    var cShow = node.show\r\n    var pre = str[str.length - 1]\r\n    var j\r\n    for (j = ptc.length; j--;) {\r\n      // loop over ptc\r\n      if (ptc[j] === 0) {\r\n        if ([0, 2, 3, 4, 5, 9, 11, 12, 13].indexOf(cType) !== -1) {\r\n          if (allowed[cType] !== true) {\r\n            throw new Mexp.Exception(cToken + ' is not allowed after ' + prevKey)\r\n          }\r\n          str.push(closingParObj)\r\n          allowed = type1\r\n          asterick = type3Asterick\r\n          inc(ptc, -1).pop()\r\n        }\r\n      } else break\r\n    }\r\n    if (allowed[cType] !== true) {\r\n      throw new Mexp.Exception(cToken + ' is not allowed after ' + prevKey)\r\n    }\r\n    if (asterick[cType] === true) {\r\n      cType = 2\r\n      cEv = Mexp.math.mul\r\n      cShow = '&times;'\r\n      cPre = 3\r\n      i = i - 1\r\n    }\r\n    obj = {\r\n      value: cEv,\r\n      type: cType,\r\n      pre: cPre,\r\n      show: cShow\r\n    }\r\n    if (cType === 0) {\r\n      allowed = type0\r\n      asterick = empty\r\n      inc(ptc, 2).push(2)\r\n      str.push(obj)\r\n      str.push(openingParObj)\r\n    } else if (cType === 1) {\r\n      if (pre.type === 1) {\r\n        pre.value += cEv\r\n        inc(ptc, 1)\r\n      } else {\r\n        str.push(obj)\r\n      }\r\n      allowed = type1\r\n      asterick = type1Asterick\r\n    } else if (cType === 2) {\r\n      allowed = type0\r\n      asterick = empty\r\n      inc(ptc, 2)\r\n      str.push(obj)\r\n    } else if (cType === 3) {\r\n      // constant\r\n      str.push(obj)\r\n      allowed = type1\r\n      asterick = type3Asterick\r\n    } else if (cType === 4) {\r\n      inc(ptc, 1)\r\n      bracToClose++\r\n      allowed = type0\r\n      asterick = empty\r\n      str.push(obj)\r\n    } else if (cType === 5) {\r\n      if (!bracToClose) {\r\n        throw new Mexp.Exception('Closing parenthesis are more than opening one, wait What!!!')\r\n      }\r\n      bracToClose--\r\n      allowed = type1\r\n      asterick = type3Asterick\r\n      str.push(obj)\r\n      inc(ptc, 1)\r\n    } else if (cType === 6) {\r\n      if (pre.hasDec) {\r\n        throw new Mexp.Exception('Two decimals are not allowed in one number')\r\n      }\r\n      if (pre.type !== 1) {\r\n        pre = {\r\n          value: 0,\r\n          type: 1,\r\n          pre: 0\r\n        } // pre needs to be changed as it will the last value now to be safe in later code\r\n        str.push(pre)\r\n        inc(ptc, -1)\r\n      }\r\n      allowed = type6\r\n      inc(ptc, 1)\r\n      asterick = empty\r\n      pre.value += cEv\r\n      pre.hasDec = true\r\n    } else if (cType === 7) {\r\n      allowed = type1\r\n      asterick = type3Asterick\r\n      inc(ptc, 1)\r\n      str.push(obj)\r\n    }\r\n    if (cType === 8) {\r\n      allowed = type0\r\n      asterick = empty\r\n      inc(ptc, 4).push(4)\r\n      str.push(obj)\r\n      str.push(openingParObj)\r\n    } else if (cType === 9) {\r\n      if (pre.type === 9) {\r\n        if (pre.value === Mexp.math.add) {\r\n          pre.value = cEv\r\n          pre.show = cShow\r\n          inc(ptc, 1)\r\n        } else if (pre.value === Mexp.math.sub && cShow === '-') {\r\n          pre.value = Mexp.math.add\r\n          pre.show = '+'\r\n          inc(ptc, 1)\r\n        }\r\n      } else if (\r\n        pre.type !== 5 &&\r\n        pre.type !== 7 &&\r\n        pre.type !== 1 &&\r\n        pre.type !== 3 &&\r\n        pre.type !== 13\r\n      ) {\r\n        // changesign only when negative is found\r\n        if (cToken === '-') {\r\n          // do nothing for + token\r\n          // don't add with the above if statement as that will run the else statement of parent if on Ctoken +\r\n          allowed = type0\r\n          asterick = empty\r\n          inc(ptc, 2).push(2)\r\n          str.push(changeSignObj)\r\n          str.push(openingParObj)\r\n        }\r\n      } else {\r\n        str.push(obj)\r\n        inc(ptc, 2)\r\n      }\r\n      allowed = type0\r\n      asterick = empty\r\n    } else if (cType === 10) {\r\n      allowed = type0\r\n      asterick = empty\r\n      inc(ptc, 2)\r\n      str.push(obj)\r\n    } else if (cType === 11) {\r\n      allowed = type0\r\n      asterick = empty\r\n      str.push(obj)\r\n    } else if (cType === 12) {\r\n      allowed = type0\r\n      asterick = empty\r\n      inc(ptc, 6).push(6)\r\n      str.push(obj)\r\n      str.push(openingParObj)\r\n    } else if (cType === 13) {\r\n      allowed = type1\r\n      asterick = type3Asterick\r\n      str.push(obj)\r\n    }\r\n    inc(ptc, -1)\r\n    prevKey = cToken\r\n  }\r\n  for (j = ptc.length; j--;) {\r\n    // loop over ptc\r\n    if (ptc[j] === 0) {\r\n      str.push(closingParObj)\r\n      inc(ptc, -1).pop()\r\n    } else break // if it is not zero so before ptc also cant be zero\r\n  }\r\n  if (allowed[5] !== true) {\r\n    throw new Mexp.Exception('complete the expression')\r\n  }\r\n  while (bracToClose--) {\r\n    str.push(closingParObj)\r\n  }\r\n\r\n  str.push(closingParObj)\r\n  //        console.log(str);\r\n  return new Mexp(str)\r\n}\r\nmodule.exports = Mexp\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/math-expression-evaluator/src/lexer.js\n");

/***/ }),

/***/ "./node_modules/math-expression-evaluator/src/math_function.js":
/*!*********************************************************************!*\
  !*** ./node_modules/math-expression-evaluator/src/math_function.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\r\nvar Mexp = function (parsed) {\r\n  this.value = parsed\r\n}\r\n\r\nMexp.math = {\r\n  isDegree: true, // mode of calculator\r\n  acos: function (x) {\r\n    return (Mexp.math.isDegree ? 180 / Math.PI * Math.acos(x) : Math.acos(x))\r\n  },\r\n  add: function (a, b) {\r\n    return a + b\r\n  },\r\n  asin: function (x) {\r\n    return (Mexp.math.isDegree ? 180 / Math.PI * Math.asin(x) : Math.asin(x))\r\n  },\r\n  atan: function (x) {\r\n    return (Mexp.math.isDegree ? 180 / Math.PI * Math.atan(x) : Math.atan(x))\r\n  },\r\n  acosh: function (x) {\r\n    return Math.log(x + Math.sqrt(x * x - 1))\r\n  },\r\n  asinh: function (x) {\r\n    return Math.log(x + Math.sqrt(x * x + 1))\r\n  },\r\n  atanh: function (x) {\r\n    return Math.log((1 + x) / (1 - x))\r\n  },\r\n  C: function (n, r) {\r\n    var pro = 1\r\n    var other = n - r\r\n    var choice = r\r\n    if (choice < other) {\r\n      choice = other\r\n      other = r\r\n    }\r\n    for (var i = choice + 1; i <= n; i++) {\r\n      pro *= i\r\n    }\r\n    return pro / Mexp.math.fact(other)\r\n  },\r\n  changeSign: function (x) {\r\n    return -x\r\n  },\r\n  cos: function (x) {\r\n    if (Mexp.math.isDegree) x = Mexp.math.toRadian(x)\r\n    return Math.cos(x)\r\n  },\r\n  cosh: function (x) {\r\n    return (Math.pow(Math.E, x) + Math.pow(Math.E, -1 * x)) / 2\r\n  },\r\n  div: function (a, b) {\r\n    return a / b\r\n  },\r\n  fact: function (n) {\r\n    if (n % 1 !== 0) return 'NaN'\r\n    var pro = 1\r\n    for (var i = 2; i <= n; i++) {\r\n      pro *= i\r\n    }\r\n    return pro\r\n  },\r\n  inverse: function (x) {\r\n    return 1 / x\r\n  },\r\n  log: function (i) {\r\n    return Math.log(i) / Math.log(10)\r\n  },\r\n  mod: function (a, b) {\r\n    return a % b\r\n  },\r\n  mul: function (a, b) {\r\n    return a * b\r\n  },\r\n  P: function (n, r) {\r\n    var pro = 1\r\n    for (var i = Math.floor(n) - Math.floor(r) + 1; i <= Math.floor(n); i++) {\r\n      pro *= i\r\n    }\r\n    return pro\r\n  },\r\n  Pi: function (low, high, ex) {\r\n    var pro = 1\r\n    for (var i = low; i <= high; i++) {\r\n      pro *= Number(ex.postfixEval({\r\n        n: i\r\n      }))\r\n    }\r\n    return pro\r\n  },\r\n  pow10x: function (e) {\r\n    var x = 1\r\n    while (e--) {\r\n      x *= 10\r\n    }\r\n    return x\r\n  },\r\n  sigma: function (low, high, ex) {\r\n    var sum = 0\r\n    for (var i = low; i <= high; i++) {\r\n      sum += Number(ex.postfixEval({\r\n        n: i\r\n      }))\r\n    }\r\n    return sum\r\n  },\r\n  sin: function (x) {\r\n    if (Mexp.math.isDegree) x = Mexp.math.toRadian(x)\r\n    return Math.sin(x)\r\n  },\r\n  sinh: function (x) {\r\n    return (Math.pow(Math.E, x) - Math.pow(Math.E, -1 * x)) / 2\r\n  },\r\n  sub: function (a, b) {\r\n    return a - b\r\n  },\r\n  tan: function (x) {\r\n    if (Mexp.math.isDegree) x = Mexp.math.toRadian(x)\r\n    return Math.tan(x)\r\n  },\r\n  tanh: function (x) {\r\n    return Mexp.sinha(x) / Mexp.cosha(x)\r\n  },\r\n  toRadian: function (x) {\r\n    return x * Math.PI / 180\r\n  }\r\n}\r\nMexp.Exception = function (message) {\r\n  this.message = message\r\n}\r\nmodule.exports = Mexp\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aC1leHByZXNzaW9uLWV2YWx1YXRvci9zcmMvbWF0aF9mdW5jdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvbWF0aC1leHByZXNzaW9uLWV2YWx1YXRvci9zcmMvbWF0aF9mdW5jdGlvbi5qcz82NGEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG52YXIgTWV4cCA9IGZ1bmN0aW9uIChwYXJzZWQpIHtcclxuICB0aGlzLnZhbHVlID0gcGFyc2VkXHJcbn1cclxuXHJcbk1leHAubWF0aCA9IHtcclxuICBpc0RlZ3JlZTogdHJ1ZSwgLy8gbW9kZSBvZiBjYWxjdWxhdG9yXHJcbiAgYWNvczogZnVuY3Rpb24gKHgpIHtcclxuICAgIHJldHVybiAoTWV4cC5tYXRoLmlzRGVncmVlID8gMTgwIC8gTWF0aC5QSSAqIE1hdGguYWNvcyh4KSA6IE1hdGguYWNvcyh4KSlcclxuICB9LFxyXG4gIGFkZDogZnVuY3Rpb24gKGEsIGIpIHtcclxuICAgIHJldHVybiBhICsgYlxyXG4gIH0sXHJcbiAgYXNpbjogZnVuY3Rpb24gKHgpIHtcclxuICAgIHJldHVybiAoTWV4cC5tYXRoLmlzRGVncmVlID8gMTgwIC8gTWF0aC5QSSAqIE1hdGguYXNpbih4KSA6IE1hdGguYXNpbih4KSlcclxuICB9LFxyXG4gIGF0YW46IGZ1bmN0aW9uICh4KSB7XHJcbiAgICByZXR1cm4gKE1leHAubWF0aC5pc0RlZ3JlZSA/IDE4MCAvIE1hdGguUEkgKiBNYXRoLmF0YW4oeCkgOiBNYXRoLmF0YW4oeCkpXHJcbiAgfSxcclxuICBhY29zaDogZnVuY3Rpb24gKHgpIHtcclxuICAgIHJldHVybiBNYXRoLmxvZyh4ICsgTWF0aC5zcXJ0KHggKiB4IC0gMSkpXHJcbiAgfSxcclxuICBhc2luaDogZnVuY3Rpb24gKHgpIHtcclxuICAgIHJldHVybiBNYXRoLmxvZyh4ICsgTWF0aC5zcXJ0KHggKiB4ICsgMSkpXHJcbiAgfSxcclxuICBhdGFuaDogZnVuY3Rpb24gKHgpIHtcclxuICAgIHJldHVybiBNYXRoLmxvZygoMSArIHgpIC8gKDEgLSB4KSlcclxuICB9LFxyXG4gIEM6IGZ1bmN0aW9uIChuLCByKSB7XHJcbiAgICB2YXIgcHJvID0gMVxyXG4gICAgdmFyIG90aGVyID0gbiAtIHJcclxuICAgIHZhciBjaG9pY2UgPSByXHJcbiAgICBpZiAoY2hvaWNlIDwgb3RoZXIpIHtcclxuICAgICAgY2hvaWNlID0gb3RoZXJcclxuICAgICAgb3RoZXIgPSByXHJcbiAgICB9XHJcbiAgICBmb3IgKHZhciBpID0gY2hvaWNlICsgMTsgaSA8PSBuOyBpKyspIHtcclxuICAgICAgcHJvICo9IGlcclxuICAgIH1cclxuICAgIHJldHVybiBwcm8gLyBNZXhwLm1hdGguZmFjdChvdGhlcilcclxuICB9LFxyXG4gIGNoYW5nZVNpZ246IGZ1bmN0aW9uICh4KSB7XHJcbiAgICByZXR1cm4gLXhcclxuICB9LFxyXG4gIGNvczogZnVuY3Rpb24gKHgpIHtcclxuICAgIGlmIChNZXhwLm1hdGguaXNEZWdyZWUpIHggPSBNZXhwLm1hdGgudG9SYWRpYW4oeClcclxuICAgIHJldHVybiBNYXRoLmNvcyh4KVxyXG4gIH0sXHJcbiAgY29zaDogZnVuY3Rpb24gKHgpIHtcclxuICAgIHJldHVybiAoTWF0aC5wb3coTWF0aC5FLCB4KSArIE1hdGgucG93KE1hdGguRSwgLTEgKiB4KSkgLyAyXHJcbiAgfSxcclxuICBkaXY6IGZ1bmN0aW9uIChhLCBiKSB7XHJcbiAgICByZXR1cm4gYSAvIGJcclxuICB9LFxyXG4gIGZhY3Q6IGZ1bmN0aW9uIChuKSB7XHJcbiAgICBpZiAobiAlIDEgIT09IDApIHJldHVybiAnTmFOJ1xyXG4gICAgdmFyIHBybyA9IDFcclxuICAgIGZvciAodmFyIGkgPSAyOyBpIDw9IG47IGkrKykge1xyXG4gICAgICBwcm8gKj0gaVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHByb1xyXG4gIH0sXHJcbiAgaW52ZXJzZTogZnVuY3Rpb24gKHgpIHtcclxuICAgIHJldHVybiAxIC8geFxyXG4gIH0sXHJcbiAgbG9nOiBmdW5jdGlvbiAoaSkge1xyXG4gICAgcmV0dXJuIE1hdGgubG9nKGkpIC8gTWF0aC5sb2coMTApXHJcbiAgfSxcclxuICBtb2Q6IGZ1bmN0aW9uIChhLCBiKSB7XHJcbiAgICByZXR1cm4gYSAlIGJcclxuICB9LFxyXG4gIG11bDogZnVuY3Rpb24gKGEsIGIpIHtcclxuICAgIHJldHVybiBhICogYlxyXG4gIH0sXHJcbiAgUDogZnVuY3Rpb24gKG4sIHIpIHtcclxuICAgIHZhciBwcm8gPSAxXHJcbiAgICBmb3IgKHZhciBpID0gTWF0aC5mbG9vcihuKSAtIE1hdGguZmxvb3IocikgKyAxOyBpIDw9IE1hdGguZmxvb3Iobik7IGkrKykge1xyXG4gICAgICBwcm8gKj0gaVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHByb1xyXG4gIH0sXHJcbiAgUGk6IGZ1bmN0aW9uIChsb3csIGhpZ2gsIGV4KSB7XHJcbiAgICB2YXIgcHJvID0gMVxyXG4gICAgZm9yICh2YXIgaSA9IGxvdzsgaSA8PSBoaWdoOyBpKyspIHtcclxuICAgICAgcHJvICo9IE51bWJlcihleC5wb3N0Zml4RXZhbCh7XHJcbiAgICAgICAgbjogaVxyXG4gICAgICB9KSlcclxuICAgIH1cclxuICAgIHJldHVybiBwcm9cclxuICB9LFxyXG4gIHBvdzEweDogZnVuY3Rpb24gKGUpIHtcclxuICAgIHZhciB4ID0gMVxyXG4gICAgd2hpbGUgKGUtLSkge1xyXG4gICAgICB4ICo9IDEwXHJcbiAgICB9XHJcbiAgICByZXR1cm4geFxyXG4gIH0sXHJcbiAgc2lnbWE6IGZ1bmN0aW9uIChsb3csIGhpZ2gsIGV4KSB7XHJcbiAgICB2YXIgc3VtID0gMFxyXG4gICAgZm9yICh2YXIgaSA9IGxvdzsgaSA8PSBoaWdoOyBpKyspIHtcclxuICAgICAgc3VtICs9IE51bWJlcihleC5wb3N0Zml4RXZhbCh7XHJcbiAgICAgICAgbjogaVxyXG4gICAgICB9KSlcclxuICAgIH1cclxuICAgIHJldHVybiBzdW1cclxuICB9LFxyXG4gIHNpbjogZnVuY3Rpb24gKHgpIHtcclxuICAgIGlmIChNZXhwLm1hdGguaXNEZWdyZWUpIHggPSBNZXhwLm1hdGgudG9SYWRpYW4oeClcclxuICAgIHJldHVybiBNYXRoLnNpbih4KVxyXG4gIH0sXHJcbiAgc2luaDogZnVuY3Rpb24gKHgpIHtcclxuICAgIHJldHVybiAoTWF0aC5wb3coTWF0aC5FLCB4KSAtIE1hdGgucG93KE1hdGguRSwgLTEgKiB4KSkgLyAyXHJcbiAgfSxcclxuICBzdWI6IGZ1bmN0aW9uIChhLCBiKSB7XHJcbiAgICByZXR1cm4gYSAtIGJcclxuICB9LFxyXG4gIHRhbjogZnVuY3Rpb24gKHgpIHtcclxuICAgIGlmIChNZXhwLm1hdGguaXNEZWdyZWUpIHggPSBNZXhwLm1hdGgudG9SYWRpYW4oeClcclxuICAgIHJldHVybiBNYXRoLnRhbih4KVxyXG4gIH0sXHJcbiAgdGFuaDogZnVuY3Rpb24gKHgpIHtcclxuICAgIHJldHVybiBNZXhwLnNpbmhhKHgpIC8gTWV4cC5jb3NoYSh4KVxyXG4gIH0sXHJcbiAgdG9SYWRpYW46IGZ1bmN0aW9uICh4KSB7XHJcbiAgICByZXR1cm4geCAqIE1hdGguUEkgLyAxODBcclxuICB9XHJcbn1cclxuTWV4cC5FeGNlcHRpb24gPSBmdW5jdGlvbiAobWVzc2FnZSkge1xyXG4gIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2VcclxufVxyXG5tb2R1bGUuZXhwb3J0cyA9IE1leHBcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/math-expression-evaluator/src/math_function.js\n");

/***/ }),

/***/ "./node_modules/math-expression-evaluator/src/postfix.js":
/*!***************************************************************!*\
  !*** ./node_modules/math-expression-evaluator/src/postfix.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\r\nvar Mexp = __webpack_require__(/*! ./lexer.js */ \"./node_modules/math-expression-evaluator/src/lexer.js\");\r\n\r\nMexp.prototype.toPostfix = function () {\r\n\t'use strict';\r\n\tvar post = [], elem, popped, prep, pre, ele;\r\n\tvar stack = [{ value: \"(\", type: 4, pre: 0 }];\r\n\tvar arr = this.value;\r\n\tfor (var i = 1; i < arr.length; i++) {\r\n\t\tif (arr[i].type === 1 || arr[i].type === 3 || arr[i].type === 13) {\t//if token is number,constant,or n(which is also a special constant in our case)\r\n\t\t\tif (arr[i].type === 1)\r\n\t\t\t\tarr[i].value = Number(arr[i].value);\r\n\t\t\tpost.push(arr[i]);\r\n\t\t}\r\n\t\telse if (arr[i].type === 4) {\r\n\t\t\tstack.push(arr[i]);\r\n\t\t}\r\n\t\telse if (arr[i].type === 5) {\r\n\t\t\twhile ((popped = stack.pop()).type !== 4) {\r\n\t\t\t\tpost.push(popped);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (arr[i].type === 11) {\r\n\t\t\twhile ((popped = stack.pop()).type !== 4) {\r\n\t\t\t\tpost.push(popped);\r\n\t\t\t}\r\n\t\t\tstack.push(popped);\r\n\t\t}\r\n\t\telse {\r\n\t\t\telem = arr[i];\r\n\t\t\tpre = elem.pre;\r\n\t\t\tele = stack[stack.length - 1];\r\n\t\t\tprep = ele.pre;\r\n\t\t\tvar flag = ele.value == 'Math.pow' && elem.value == 'Math.pow';\r\n\t\t\tif (pre > prep) stack.push(elem);\r\n\t\t\telse {\r\n\t\t\t\twhile (prep >= pre && !flag || flag && pre < prep) {\r\n\t\t\t\t\tpopped = stack.pop();\r\n\t\t\t\t\tele = stack[stack.length - 1];\r\n\t\t\t\t\tpost.push(popped);\r\n\t\t\t\t\tprep = ele.pre;\r\n\t\t\t\t\tflag = elem.value == 'Math.pow' && ele.value == 'Math.pow';\r\n\t\t\t\t}\r\n\t\t\t\tstack.push(elem);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn new Mexp(post);\r\n};\r\nmodule.exports = Mexp;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aC1leHByZXNzaW9uLWV2YWx1YXRvci9zcmMvcG9zdGZpeC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvbWF0aC1leHByZXNzaW9uLWV2YWx1YXRvci9zcmMvcG9zdGZpeC5qcz8xMWM5Il0sInNvdXJjZXNDb250ZW50IjpbIlxyXG52YXIgTWV4cCA9IHJlcXVpcmUoJy4vbGV4ZXIuanMnKTtcclxuXHJcbk1leHAucHJvdG90eXBlLnRvUG9zdGZpeCA9IGZ1bmN0aW9uICgpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0dmFyIHBvc3QgPSBbXSwgZWxlbSwgcG9wcGVkLCBwcmVwLCBwcmUsIGVsZTtcclxuXHR2YXIgc3RhY2sgPSBbeyB2YWx1ZTogXCIoXCIsIHR5cGU6IDQsIHByZTogMCB9XTtcclxuXHR2YXIgYXJyID0gdGhpcy52YWx1ZTtcclxuXHRmb3IgKHZhciBpID0gMTsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xyXG5cdFx0aWYgKGFycltpXS50eXBlID09PSAxIHx8IGFycltpXS50eXBlID09PSAzIHx8IGFycltpXS50eXBlID09PSAxMykge1x0Ly9pZiB0b2tlbiBpcyBudW1iZXIsY29uc3RhbnQsb3Igbih3aGljaCBpcyBhbHNvIGEgc3BlY2lhbCBjb25zdGFudCBpbiBvdXIgY2FzZSlcclxuXHRcdFx0aWYgKGFycltpXS50eXBlID09PSAxKVxyXG5cdFx0XHRcdGFycltpXS52YWx1ZSA9IE51bWJlcihhcnJbaV0udmFsdWUpO1xyXG5cdFx0XHRwb3N0LnB1c2goYXJyW2ldKTtcclxuXHRcdH1cclxuXHRcdGVsc2UgaWYgKGFycltpXS50eXBlID09PSA0KSB7XHJcblx0XHRcdHN0YWNrLnB1c2goYXJyW2ldKTtcclxuXHRcdH1cclxuXHRcdGVsc2UgaWYgKGFycltpXS50eXBlID09PSA1KSB7XHJcblx0XHRcdHdoaWxlICgocG9wcGVkID0gc3RhY2sucG9wKCkpLnR5cGUgIT09IDQpIHtcclxuXHRcdFx0XHRwb3N0LnB1c2gocG9wcGVkKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZiAoYXJyW2ldLnR5cGUgPT09IDExKSB7XHJcblx0XHRcdHdoaWxlICgocG9wcGVkID0gc3RhY2sucG9wKCkpLnR5cGUgIT09IDQpIHtcclxuXHRcdFx0XHRwb3N0LnB1c2gocG9wcGVkKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRzdGFjay5wdXNoKHBvcHBlZCk7XHJcblx0XHR9XHJcblx0XHRlbHNlIHtcclxuXHRcdFx0ZWxlbSA9IGFycltpXTtcclxuXHRcdFx0cHJlID0gZWxlbS5wcmU7XHJcblx0XHRcdGVsZSA9IHN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdO1xyXG5cdFx0XHRwcmVwID0gZWxlLnByZTtcclxuXHRcdFx0dmFyIGZsYWcgPSBlbGUudmFsdWUgPT0gJ01hdGgucG93JyAmJiBlbGVtLnZhbHVlID09ICdNYXRoLnBvdyc7XHJcblx0XHRcdGlmIChwcmUgPiBwcmVwKSBzdGFjay5wdXNoKGVsZW0pO1xyXG5cdFx0XHRlbHNlIHtcclxuXHRcdFx0XHR3aGlsZSAocHJlcCA+PSBwcmUgJiYgIWZsYWcgfHwgZmxhZyAmJiBwcmUgPCBwcmVwKSB7XHJcblx0XHRcdFx0XHRwb3BwZWQgPSBzdGFjay5wb3AoKTtcclxuXHRcdFx0XHRcdGVsZSA9IHN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdO1xyXG5cdFx0XHRcdFx0cG9zdC5wdXNoKHBvcHBlZCk7XHJcblx0XHRcdFx0XHRwcmVwID0gZWxlLnByZTtcclxuXHRcdFx0XHRcdGZsYWcgPSBlbGVtLnZhbHVlID09ICdNYXRoLnBvdycgJiYgZWxlLnZhbHVlID09ICdNYXRoLnBvdyc7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHN0YWNrLnB1c2goZWxlbSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblx0cmV0dXJuIG5ldyBNZXhwKHBvc3QpO1xyXG59O1xyXG5tb2R1bGUuZXhwb3J0cyA9IE1leHA7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/math-expression-evaluator/src/postfix.js\n");

/***/ }),

/***/ "./node_modules/math-expression-evaluator/src/postfix_evaluator.js":
/*!*************************************************************************!*\
  !*** ./node_modules/math-expression-evaluator/src/postfix_evaluator.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Mexp=__webpack_require__(/*! ./postfix.js */ \"./node_modules/math-expression-evaluator/src/postfix.js\");\r\nMexp.prototype.postfixEval = function (UserDefined) {\r\n\t'use strict';\r\n\tUserDefined=UserDefined||{};\r\n\tUserDefined.PI=Math.PI;\r\n\tUserDefined.E=Math.E;\r\n\tvar stack=[],pop1,pop2,pop3;\r\n\tvar disp=[];\r\n\tvar temp='';\r\n\tvar arr=this.value;\r\n\tvar bool=(typeof UserDefined.n!==\"undefined\");\r\n\tfor(var i=0;i<arr.length;i++){\r\n\t\tif(arr[i].type===1){\r\n\t\t\tstack.push({value:arr[i].value,type:1});\r\n\t\t}\r\n\t\telse if(arr[i].type===3){\r\n\t\t\tstack.push({value:UserDefined[arr[i].value],type:1});\r\n\t\t}\r\n\t\telse if(arr[i].type===0){\r\n\t\t\tif(typeof stack[stack.length-1].type===\"undefined\"){\r\n\t\t\t\tstack[stack.length-1].value.push(arr[i]);\r\n\t\t\t}\r\n\t\t\telse stack[stack.length-1].value=arr[i].value(stack[stack.length-1].value);\r\n\t\t}\r\n\t\telse if(arr[i].type===7){\r\n\t\t\tif(typeof stack[stack.length-1].type===\"undefined\"){\r\n\t\t\t\tstack[stack.length-1].value.push(arr[i]);\r\n\t\t\t}\r\n\t\t\telse stack[stack.length-1].value=arr[i].value(stack[stack.length-1].value);\r\n\t\t}\r\n\t\telse if(arr[i].type===8){\r\n\t\t\tpop1=stack.pop();\r\n\t\t\tpop2=stack.pop();\r\n\t\t\tstack.push({type:1,value:arr[i].value(pop2.value,pop1.value)});\r\n\t\t}\r\n\t\telse if(arr[i].type===10){\r\n\t\t\tpop1=stack.pop();\r\n\t\t\tpop2=stack.pop();\r\n\t\t\tif(typeof pop2.type===\"undefined\"){\r\n\t\t\t\tpop2.value=pop2.concat(pop1);\r\n\t\t\t\tpop2.value.push(arr[i]);\r\n\t\t\t\tstack.push(pop2);\r\n\t\t\t}\r\n\t\t\telse if (typeof pop1.type===\"undefined\") {\r\n\t\t\t\tpop1.unshift(pop2);\r\n\t\t\t\tpop1.push(arr[i]);\r\n\t\t\t\tstack.push(pop1);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tstack.push({type:1,value:arr[i].value(pop2.value,pop1.value)});\r\n            }\r\n\t\t}\r\n\t\telse if(arr[i].type===2||arr[i].type===9){\r\n\t\t\tpop1=stack.pop();\r\n\t\t\tpop2=stack.pop();\r\n\t\t\tif(typeof pop2.type===\"undefined\"){\r\n\t\t\t\tpop2=pop2.concat(pop1);\r\n\t\t\t\tpop2.push(arr[i]);\r\n\t\t\t\tstack.push(pop2);\r\n\t\t\t}\r\n\t\t\telse if (typeof pop1.type===\"undefined\") {\r\n\t\t\t\tpop1.unshift(pop2);\r\n\t\t\t\tpop1.push(arr[i]);\r\n\t\t\t\tstack.push(pop1);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tstack.push({type:1,value:arr[i].value(pop2.value,pop1.value)});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(arr[i].type===12){\r\n\t\t\tpop1=stack.pop();\r\n\t\t\tif (typeof pop1.type!==\"undefined\") {\r\n\t\t\t\tpop1=[pop1];\r\n\t\t\t}\r\n\t\t\tpop2=stack.pop();\r\n\t\t\tpop3=stack.pop();\r\n\t\t\tstack.push({type:1,value:arr[i].value(pop3.value,pop2.value,new Mexp(pop1))});\r\n\t\t}\r\n\t\telse if(arr[i].type===13){\r\n\t\t\tif(bool){\r\n\t\t\t\tstack.push({value:UserDefined[arr[i].value],type:3});\r\n\t\t\t}\r\n\t\t\telse stack.push([arr[i]]);\r\n\t\t}\r\n\t}\r\n\tif (stack.length>1) {\r\n\t\tthrow(new Mexp.Exception(\"Uncaught Syntax error\"));\r\n\t}\r\n\treturn stack[0].value>1000000000000000?\"Infinity\":parseFloat(stack[0].value.toFixed(15));\r\n};\r\nMexp.eval=function(str,tokens,obj){\r\n\tif (typeof tokens===\"undefined\") {\r\n\t\treturn this.lex(str).toPostfix().postfixEval();\r\n\t}\r\n\telse if (typeof obj===\"undefined\") {\r\n\t\tif (typeof tokens.length!==\"undefined\") \r\n\t\t\treturn this.lex(str,tokens).toPostfix().postfixEval();\r\n\t\telse\r\n\t\t\treturn this.lex(str).toPostfix().postfixEval(tokens);\r\n\t}\r\n\telse\r\n\t\treturn this.lex(str,tokens).toPostfix().postfixEval(obj);\r\n};\r\nmodule.exports=Mexp;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aC1leHByZXNzaW9uLWV2YWx1YXRvci9zcmMvcG9zdGZpeF9ldmFsdWF0b3IuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL21hdGgtZXhwcmVzc2lvbi1ldmFsdWF0b3Ivc3JjL3Bvc3RmaXhfZXZhbHVhdG9yLmpzPzY0ZjYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIE1leHA9cmVxdWlyZSgnLi9wb3N0Zml4LmpzJyk7XHJcbk1leHAucHJvdG90eXBlLnBvc3RmaXhFdmFsID0gZnVuY3Rpb24gKFVzZXJEZWZpbmVkKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdFVzZXJEZWZpbmVkPVVzZXJEZWZpbmVkfHx7fTtcclxuXHRVc2VyRGVmaW5lZC5QST1NYXRoLlBJO1xyXG5cdFVzZXJEZWZpbmVkLkU9TWF0aC5FO1xyXG5cdHZhciBzdGFjaz1bXSxwb3AxLHBvcDIscG9wMztcclxuXHR2YXIgZGlzcD1bXTtcclxuXHR2YXIgdGVtcD0nJztcclxuXHR2YXIgYXJyPXRoaXMudmFsdWU7XHJcblx0dmFyIGJvb2w9KHR5cGVvZiBVc2VyRGVmaW5lZC5uIT09XCJ1bmRlZmluZWRcIik7XHJcblx0Zm9yKHZhciBpPTA7aTxhcnIubGVuZ3RoO2krKyl7XHJcblx0XHRpZihhcnJbaV0udHlwZT09PTEpe1xyXG5cdFx0XHRzdGFjay5wdXNoKHt2YWx1ZTphcnJbaV0udmFsdWUsdHlwZToxfSk7XHJcblx0XHR9XHJcblx0XHRlbHNlIGlmKGFycltpXS50eXBlPT09Myl7XHJcblx0XHRcdHN0YWNrLnB1c2goe3ZhbHVlOlVzZXJEZWZpbmVkW2FycltpXS52YWx1ZV0sdHlwZToxfSk7XHJcblx0XHR9XHJcblx0XHRlbHNlIGlmKGFycltpXS50eXBlPT09MCl7XHJcblx0XHRcdGlmKHR5cGVvZiBzdGFja1tzdGFjay5sZW5ndGgtMV0udHlwZT09PVwidW5kZWZpbmVkXCIpe1xyXG5cdFx0XHRcdHN0YWNrW3N0YWNrLmxlbmd0aC0xXS52YWx1ZS5wdXNoKGFycltpXSk7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSBzdGFja1tzdGFjay5sZW5ndGgtMV0udmFsdWU9YXJyW2ldLnZhbHVlKHN0YWNrW3N0YWNrLmxlbmd0aC0xXS52YWx1ZSk7XHJcblx0XHR9XHJcblx0XHRlbHNlIGlmKGFycltpXS50eXBlPT09Nyl7XHJcblx0XHRcdGlmKHR5cGVvZiBzdGFja1tzdGFjay5sZW5ndGgtMV0udHlwZT09PVwidW5kZWZpbmVkXCIpe1xyXG5cdFx0XHRcdHN0YWNrW3N0YWNrLmxlbmd0aC0xXS52YWx1ZS5wdXNoKGFycltpXSk7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSBzdGFja1tzdGFjay5sZW5ndGgtMV0udmFsdWU9YXJyW2ldLnZhbHVlKHN0YWNrW3N0YWNrLmxlbmd0aC0xXS52YWx1ZSk7XHJcblx0XHR9XHJcblx0XHRlbHNlIGlmKGFycltpXS50eXBlPT09OCl7XHJcblx0XHRcdHBvcDE9c3RhY2sucG9wKCk7XHJcblx0XHRcdHBvcDI9c3RhY2sucG9wKCk7XHJcblx0XHRcdHN0YWNrLnB1c2goe3R5cGU6MSx2YWx1ZTphcnJbaV0udmFsdWUocG9wMi52YWx1ZSxwb3AxLnZhbHVlKX0pO1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZihhcnJbaV0udHlwZT09PTEwKXtcclxuXHRcdFx0cG9wMT1zdGFjay5wb3AoKTtcclxuXHRcdFx0cG9wMj1zdGFjay5wb3AoKTtcclxuXHRcdFx0aWYodHlwZW9mIHBvcDIudHlwZT09PVwidW5kZWZpbmVkXCIpe1xyXG5cdFx0XHRcdHBvcDIudmFsdWU9cG9wMi5jb25jYXQocG9wMSk7XHJcblx0XHRcdFx0cG9wMi52YWx1ZS5wdXNoKGFycltpXSk7XHJcblx0XHRcdFx0c3RhY2sucHVzaChwb3AyKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIGlmICh0eXBlb2YgcG9wMS50eXBlPT09XCJ1bmRlZmluZWRcIikge1xyXG5cdFx0XHRcdHBvcDEudW5zaGlmdChwb3AyKTtcclxuXHRcdFx0XHRwb3AxLnB1c2goYXJyW2ldKTtcclxuXHRcdFx0XHRzdGFjay5wdXNoKHBvcDEpO1xyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2V7XHJcblx0XHRcdFx0c3RhY2sucHVzaCh7dHlwZToxLHZhbHVlOmFycltpXS52YWx1ZShwb3AyLnZhbHVlLHBvcDEudmFsdWUpfSk7XHJcbiAgICAgICAgICAgIH1cclxuXHRcdH1cclxuXHRcdGVsc2UgaWYoYXJyW2ldLnR5cGU9PT0yfHxhcnJbaV0udHlwZT09PTkpe1xyXG5cdFx0XHRwb3AxPXN0YWNrLnBvcCgpO1xyXG5cdFx0XHRwb3AyPXN0YWNrLnBvcCgpO1xyXG5cdFx0XHRpZih0eXBlb2YgcG9wMi50eXBlPT09XCJ1bmRlZmluZWRcIil7XHJcblx0XHRcdFx0cG9wMj1wb3AyLmNvbmNhdChwb3AxKTtcclxuXHRcdFx0XHRwb3AyLnB1c2goYXJyW2ldKTtcclxuXHRcdFx0XHRzdGFjay5wdXNoKHBvcDIpO1xyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2UgaWYgKHR5cGVvZiBwb3AxLnR5cGU9PT1cInVuZGVmaW5lZFwiKSB7XHJcblx0XHRcdFx0cG9wMS51bnNoaWZ0KHBvcDIpO1xyXG5cdFx0XHRcdHBvcDEucHVzaChhcnJbaV0pO1xyXG5cdFx0XHRcdHN0YWNrLnB1c2gocG9wMSk7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZXtcclxuXHRcdFx0XHRzdGFjay5wdXNoKHt0eXBlOjEsdmFsdWU6YXJyW2ldLnZhbHVlKHBvcDIudmFsdWUscG9wMS52YWx1ZSl9KTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZihhcnJbaV0udHlwZT09PTEyKXtcclxuXHRcdFx0cG9wMT1zdGFjay5wb3AoKTtcclxuXHRcdFx0aWYgKHR5cGVvZiBwb3AxLnR5cGUhPT1cInVuZGVmaW5lZFwiKSB7XHJcblx0XHRcdFx0cG9wMT1bcG9wMV07XHJcblx0XHRcdH1cclxuXHRcdFx0cG9wMj1zdGFjay5wb3AoKTtcclxuXHRcdFx0cG9wMz1zdGFjay5wb3AoKTtcclxuXHRcdFx0c3RhY2sucHVzaCh7dHlwZToxLHZhbHVlOmFycltpXS52YWx1ZShwb3AzLnZhbHVlLHBvcDIudmFsdWUsbmV3IE1leHAocG9wMSkpfSk7XHJcblx0XHR9XHJcblx0XHRlbHNlIGlmKGFycltpXS50eXBlPT09MTMpe1xyXG5cdFx0XHRpZihib29sKXtcclxuXHRcdFx0XHRzdGFjay5wdXNoKHt2YWx1ZTpVc2VyRGVmaW5lZFthcnJbaV0udmFsdWVdLHR5cGU6M30pO1xyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2Ugc3RhY2sucHVzaChbYXJyW2ldXSk7XHJcblx0XHR9XHJcblx0fVxyXG5cdGlmIChzdGFjay5sZW5ndGg+MSkge1xyXG5cdFx0dGhyb3cobmV3IE1leHAuRXhjZXB0aW9uKFwiVW5jYXVnaHQgU3ludGF4IGVycm9yXCIpKTtcclxuXHR9XHJcblx0cmV0dXJuIHN0YWNrWzBdLnZhbHVlPjEwMDAwMDAwMDAwMDAwMDA/XCJJbmZpbml0eVwiOnBhcnNlRmxvYXQoc3RhY2tbMF0udmFsdWUudG9GaXhlZCgxNSkpO1xyXG59O1xyXG5NZXhwLmV2YWw9ZnVuY3Rpb24oc3RyLHRva2VucyxvYmope1xyXG5cdGlmICh0eXBlb2YgdG9rZW5zPT09XCJ1bmRlZmluZWRcIikge1xyXG5cdFx0cmV0dXJuIHRoaXMubGV4KHN0cikudG9Qb3N0Zml4KCkucG9zdGZpeEV2YWwoKTtcclxuXHR9XHJcblx0ZWxzZSBpZiAodHlwZW9mIG9iaj09PVwidW5kZWZpbmVkXCIpIHtcclxuXHRcdGlmICh0eXBlb2YgdG9rZW5zLmxlbmd0aCE9PVwidW5kZWZpbmVkXCIpIFxyXG5cdFx0XHRyZXR1cm4gdGhpcy5sZXgoc3RyLHRva2VucykudG9Qb3N0Zml4KCkucG9zdGZpeEV2YWwoKTtcclxuXHRcdGVsc2VcclxuXHRcdFx0cmV0dXJuIHRoaXMubGV4KHN0cikudG9Qb3N0Zml4KCkucG9zdGZpeEV2YWwodG9rZW5zKTtcclxuXHR9XHJcblx0ZWxzZVxyXG5cdFx0cmV0dXJuIHRoaXMubGV4KHN0cix0b2tlbnMpLnRvUG9zdGZpeCgpLnBvc3RmaXhFdmFsKG9iaik7XHJcbn07XHJcbm1vZHVsZS5leHBvcnRzPU1leHA7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/math-expression-evaluator/src/postfix_evaluator.js\n");

/***/ }),

/***/ "./packages/superset-ui-core/src/math-expression/index.ts":
/*!****************************************************************!*\
  !*** ./packages/superset-ui-core/src/math-expression/index.ts ***!
  \****************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"evalExpression\": () => (/* binding */ evalExpression),\n/* harmony export */   \"isValidExpression\": () => (/* binding */ isValidExpression)\n/* harmony export */ });\n/* harmony import */ var math_expression_evaluator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! math-expression-evaluator */ \"./node_modules/math-expression-evaluator/src/formula_evaluator.js\");\n/* harmony import */ var math_expression_evaluator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(math_expression_evaluator__WEBPACK_IMPORTED_MODULE_0__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\nconst REPLACE_OPERATORS = [\n[new RegExp(/==/g), 'Eq'],\n[new RegExp(/>=/g), 'Gte'],\n[new RegExp(/<=/g), 'Lte'],\n[new RegExp(/>/g), 'Gt'],\n[new RegExp(/</g), 'Lt']];\n\nconst TOKENS = [\n{\n  type: 3,\n  token: 'x',\n  show: 'x',\n  value: 'x' },\n\n{\n  type: 2,\n  token: '&',\n  show: '&',\n  value: (a, b) => a & b },\n\n{\n  type: 2,\n  token: '|',\n  show: '|',\n  value: (a, b) => a | b },\n\n{\n  type: 2,\n  token: 'and',\n  show: 'and',\n  value: (a, b) => a && b },\n\n{\n  type: 2,\n  token: 'xor',\n  show: 'xor',\n  value: (a, b) => a ^ b },\n\n{\n  type: 2,\n  token: 'or',\n  show: 'or',\n  value: (a, b) => Number(a || b) },\n\n{\n  type: 2,\n  token: 'Eq',\n  show: 'Eq',\n  value: (a, b) => Number(a === b) },\n\n{\n  type: 2,\n  token: 'Lt',\n  show: 'Lt',\n  value: (a, b) => Number(a < b) },\n\n{\n  type: 2,\n  token: 'Lte',\n  show: 'Lte',\n  value: (a, b) => Number(a <= b) },\n\n{\n  type: 2,\n  token: 'Gt',\n  show: 'Gt',\n  value: (a, b) => Number(a > b) },\n\n{\n  type: 2,\n  token: 'Gte',\n  show: 'Gte',\n  value: (a, b) => Number(a >= b) }];\n\n\nfunction evalExpression(expression, value) {var _subExpressions$;\n  let parsedExpression = expression;\n  // replace `<` with `Lt` (and others) to avoid clashes with builtin function operators\n  // that are not needed in Superset.\n  REPLACE_OPERATORS.forEach(([key, value]) => {\n    parsedExpression = parsedExpression.replace(key, value);\n  });\n  const subExpressions = String(parsedExpression).split('=');\n  parsedExpression = (_subExpressions$ = subExpressions[1]) != null ? _subExpressions$ : subExpressions[0];\n  // we can ignore the type requirement on `TOKENS`, as value is always `number`\n  // and doesn't need to consider `number | underfined`.\n  // @ts-ignore\n  return Number(math_expression_evaluator__WEBPACK_IMPORTED_MODULE_0___default().eval(parsedExpression, TOKENS, { x: value }));\n}\nfunction isValidExpression(expression) {\n  try {\n    evalExpression(expression, 0);\n  }\n  catch (err) {\n    return false;\n  }\n  return true;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(REPLACE_OPERATORS, \"REPLACE_OPERATORS\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\math-expression\\\\index.ts\");reactHotLoader.register(TOKENS, \"TOKENS\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\math-expression\\\\index.ts\");reactHotLoader.register(evalExpression, \"evalExpression\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\math-expression\\\\index.ts\");reactHotLoader.register(isValidExpression, \"isValidExpression\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\math-expression\\\\index.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9zdXBlcnNldC11aS1jb3JlL3NyYy9tYXRoLWV4cHJlc3Npb24vaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9wYWNrYWdlcy9zdXBlcnNldC11aS1jb3JlL3NyYy9tYXRoLWV4cHJlc3Npb24vaW5kZXgudHM/MTc1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXHJcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxyXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxyXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXHJcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcclxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXHJcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxyXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxyXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxyXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcclxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xyXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcblxyXG5pbXBvcnQgbWV4cCBmcm9tICdtYXRoLWV4cHJlc3Npb24tZXZhbHVhdG9yJztcclxuXHJcbmNvbnN0IFJFUExBQ0VfT1BFUkFUT1JTOiBbUmVnRXhwLCBzdHJpbmddW10gPSBbXHJcbiAgW25ldyBSZWdFeHAoLz09L2cpLCAnRXEnXSxcclxuICBbbmV3IFJlZ0V4cCgvPj0vZyksICdHdGUnXSxcclxuICBbbmV3IFJlZ0V4cCgvPD0vZyksICdMdGUnXSxcclxuICBbbmV3IFJlZ0V4cCgvPi9nKSwgJ0d0J10sXHJcbiAgW25ldyBSZWdFeHAoLzwvZyksICdMdCddLFxyXG5dO1xyXG5cclxuY29uc3QgVE9LRU5TID0gW1xyXG4gIHtcclxuICAgIHR5cGU6IDMsXHJcbiAgICB0b2tlbjogJ3gnLFxyXG4gICAgc2hvdzogJ3gnLFxyXG4gICAgdmFsdWU6ICd4JyxcclxuICB9LFxyXG4gIHtcclxuICAgIHR5cGU6IDIsXHJcbiAgICB0b2tlbjogJyYnLFxyXG4gICAgc2hvdzogJyYnLFxyXG4gICAgdmFsdWU6IChhOiBudW1iZXIsIGI6IG51bWJlcik6IG51bWJlciA9PiBhICYgYixcclxuICB9LFxyXG4gIHtcclxuICAgIHR5cGU6IDIsXHJcbiAgICB0b2tlbjogJ3wnLFxyXG4gICAgc2hvdzogJ3wnLFxyXG4gICAgdmFsdWU6IChhOiBudW1iZXIsIGI6IG51bWJlcik6IG51bWJlciA9PiBhIHwgYixcclxuICB9LFxyXG4gIHtcclxuICAgIHR5cGU6IDIsXHJcbiAgICB0b2tlbjogJ2FuZCcsXHJcbiAgICBzaG93OiAnYW5kJyxcclxuICAgIHZhbHVlOiAoYTogbnVtYmVyLCBiOiBudW1iZXIpOiBudW1iZXIgPT4gYSAmJiBiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgdHlwZTogMixcclxuICAgIHRva2VuOiAneG9yJyxcclxuICAgIHNob3c6ICd4b3InLFxyXG4gICAgdmFsdWU6IChhOiBudW1iZXIsIGI6IG51bWJlcik6IG51bWJlciA9PiBhIF4gYixcclxuICB9LFxyXG4gIHtcclxuICAgIHR5cGU6IDIsXHJcbiAgICB0b2tlbjogJ29yJyxcclxuICAgIHNob3c6ICdvcicsXHJcbiAgICB2YWx1ZTogKGE6IG51bWJlciwgYjogbnVtYmVyKTogbnVtYmVyID0+IE51bWJlcihhIHx8IGIpLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgdHlwZTogMixcclxuICAgIHRva2VuOiAnRXEnLFxyXG4gICAgc2hvdzogJ0VxJyxcclxuICAgIHZhbHVlOiAoYTogbnVtYmVyLCBiOiBudW1iZXIpOiBudW1iZXIgPT4gTnVtYmVyKGEgPT09IGIpLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgdHlwZTogMixcclxuICAgIHRva2VuOiAnTHQnLFxyXG4gICAgc2hvdzogJ0x0JyxcclxuICAgIHZhbHVlOiAoYTogbnVtYmVyLCBiOiBudW1iZXIpOiBudW1iZXIgPT4gTnVtYmVyKGEgPCBiKSxcclxuICB9LFxyXG4gIHtcclxuICAgIHR5cGU6IDIsXHJcbiAgICB0b2tlbjogJ0x0ZScsXHJcbiAgICBzaG93OiAnTHRlJyxcclxuICAgIHZhbHVlOiAoYTogbnVtYmVyLCBiOiBudW1iZXIpOiBudW1iZXIgPT4gTnVtYmVyKGEgPD0gYiksXHJcbiAgfSxcclxuICB7XHJcbiAgICB0eXBlOiAyLFxyXG4gICAgdG9rZW46ICdHdCcsXHJcbiAgICBzaG93OiAnR3QnLFxyXG4gICAgdmFsdWU6IChhOiBudW1iZXIsIGI6IG51bWJlcik6IG51bWJlciA9PiBOdW1iZXIoYSA+IGIpLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgdHlwZTogMixcclxuICAgIHRva2VuOiAnR3RlJyxcclxuICAgIHNob3c6ICdHdGUnLFxyXG4gICAgdmFsdWU6IChhOiBudW1iZXIsIGI6IG51bWJlcik6IG51bWJlciA9PiBOdW1iZXIoYSA+PSBiKSxcclxuICB9LFxyXG5dO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGV2YWxFeHByZXNzaW9uKGV4cHJlc3Npb246IHN0cmluZywgdmFsdWU6IG51bWJlcik6IG51bWJlciB7XHJcbiAgbGV0IHBhcnNlZEV4cHJlc3Npb24gPSBleHByZXNzaW9uO1xyXG4gIC8vIHJlcGxhY2UgYDxgIHdpdGggYEx0YCAoYW5kIG90aGVycykgdG8gYXZvaWQgY2xhc2hlcyB3aXRoIGJ1aWx0aW4gZnVuY3Rpb24gb3BlcmF0b3JzXHJcbiAgLy8gdGhhdCBhcmUgbm90IG5lZWRlZCBpbiBTdXBlcnNldC5cclxuICBSRVBMQUNFX09QRVJBVE9SUy5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcclxuICAgIHBhcnNlZEV4cHJlc3Npb24gPSBwYXJzZWRFeHByZXNzaW9uLnJlcGxhY2Uoa2V5LCB2YWx1ZSk7XHJcbiAgfSk7XHJcbiAgY29uc3Qgc3ViRXhwcmVzc2lvbnMgPSBTdHJpbmcocGFyc2VkRXhwcmVzc2lvbikuc3BsaXQoJz0nKTtcclxuICBwYXJzZWRFeHByZXNzaW9uID0gc3ViRXhwcmVzc2lvbnNbMV0gPz8gc3ViRXhwcmVzc2lvbnNbMF07XHJcbiAgLy8gd2UgY2FuIGlnbm9yZSB0aGUgdHlwZSByZXF1aXJlbWVudCBvbiBgVE9LRU5TYCwgYXMgdmFsdWUgaXMgYWx3YXlzIGBudW1iZXJgXHJcbiAgLy8gYW5kIGRvZXNuJ3QgbmVlZCB0byBjb25zaWRlciBgbnVtYmVyIHwgdW5kZXJmaW5lZGAuXHJcbiAgLy8gQHRzLWlnbm9yZVxyXG4gIHJldHVybiBOdW1iZXIobWV4cC5ldmFsKHBhcnNlZEV4cHJlc3Npb24sIFRPS0VOUywgeyB4OiB2YWx1ZSB9KSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkRXhwcmVzc2lvbihleHByZXNzaW9uOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICB0cnkge1xyXG4gICAgZXZhbEV4cHJlc3Npb24oZXhwcmVzc2lvbiwgMCk7XHJcbiAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG4gIHJldHVybiB0cnVlO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/superset-ui-core/src/math-expression/index.ts\n");

/***/ })

}]);
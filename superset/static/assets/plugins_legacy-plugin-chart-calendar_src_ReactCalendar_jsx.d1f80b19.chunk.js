"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunksuperset"] = globalThis["webpackChunksuperset"] || []).push([["plugins_legacy-plugin-chart-calendar_src_ReactCalendar_jsx"],{

/***/ "./plugins/legacy-plugin-chart-calendar/node_modules/d3-array/src/extent.js":
/*!**********************************************************************************!*\
  !*** ./plugins/legacy-plugin-chart-calendar/node_modules/d3-array/src/extent.js ***!
  \**********************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};const _default = function (values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n};/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(_default, \"default\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\plugins\\\\legacy-plugin-chart-calendar\\\\node_modules\\\\d3-array\\\\src\\\\extent.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL2xlZ2FjeS1wbHVnaW4tY2hhcnQtY2FsZW5kYXIvbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9leHRlbnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3BsdWdpbnMvbGVnYWN5LXBsdWdpbi1jaGFydC1jYWxlbmRhci9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2V4dGVudC5qcz82NWYzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgdmFsdWVvZikge1xuICBsZXQgbWluO1xuICBsZXQgbWF4O1xuICBpZiAodmFsdWVvZiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgIGlmICh2YWx1ZSAhPSBudWxsKSB7XG4gICAgICAgIGlmIChtaW4gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIGlmICh2YWx1ZSA+PSB2YWx1ZSkgbWluID0gbWF4ID0gdmFsdWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKG1pbiA+IHZhbHVlKSBtaW4gPSB2YWx1ZTtcbiAgICAgICAgICBpZiAobWF4IDwgdmFsdWUpIG1heCA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGxldCBpbmRleCA9IC0xO1xuICAgIGZvciAobGV0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlb2YodmFsdWUsICsraW5kZXgsIHZhbHVlcykpICE9IG51bGwpIHtcbiAgICAgICAgaWYgKG1pbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgaWYgKHZhbHVlID49IHZhbHVlKSBtaW4gPSBtYXggPSB2YWx1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAobWluID4gdmFsdWUpIG1pbiA9IHZhbHVlO1xuICAgICAgICAgIGlmIChtYXggPCB2YWx1ZSkgbWF4ID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIFttaW4sIG1heF07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./plugins/legacy-plugin-chart-calendar/node_modules/d3-array/src/extent.js\n");

/***/ }),

/***/ "./plugins/legacy-plugin-chart-calendar/node_modules/d3-array/src/range.js":
/*!*********************************************************************************!*\
  !*** ./plugins/legacy-plugin-chart-calendar/node_modules/d3-array/src/range.js ***!
  \*********************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};const _default = function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n  n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n  range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(_default, \"default\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\plugins\\\\legacy-plugin-chart-calendar\\\\node_modules\\\\d3-array\\\\src\\\\range.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL2xlZ2FjeS1wbHVnaW4tY2hhcnQtY2FsZW5kYXIvbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9yYW5nZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3BsdWdpbnMvbGVnYWN5LXBsdWdpbi1jaGFydC1jYWxlbmRhci9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3JhbmdlLmpzP2I3N2QiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3RhcnQsIHN0b3AsIHN0ZXApIHtcbiAgc3RhcnQgPSArc3RhcnQsIHN0b3AgPSArc3RvcCwgc3RlcCA9IChuID0gYXJndW1lbnRzLmxlbmd0aCkgPCAyID8gKHN0b3AgPSBzdGFydCwgc3RhcnQgPSAwLCAxKSA6IG4gPCAzID8gMSA6ICtzdGVwO1xuXG4gIHZhciBpID0gLTEsXG4gICAgICBuID0gTWF0aC5tYXgoMCwgTWF0aC5jZWlsKChzdG9wIC0gc3RhcnQpIC8gc3RlcCkpIHwgMCxcbiAgICAgIHJhbmdlID0gbmV3IEFycmF5KG4pO1xuXG4gIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgcmFuZ2VbaV0gPSBzdGFydCArIGkgKiBzdGVwO1xuICB9XG5cbiAgcmV0dXJuIHJhbmdlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./plugins/legacy-plugin-chart-calendar/node_modules/d3-array/src/range.js\n");

/***/ }),

/***/ "./plugins/legacy-plugin-chart-calendar/src/Calendar.js":
/*!**************************************************************!*\
  !*** ./plugins/legacy-plugin-chart-calendar/src/Calendar.js ***!
  \**************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-array */ \"./plugins/legacy-plugin-chart-calendar/node_modules/d3-array/src/extent.js\");\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-array */ \"./plugins/legacy-plugin-chart-calendar/node_modules/d3-array/src/range.js\");\n/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-selection */ \"./node_modules/d3-selection/src/select.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/color/SequentialSchemeRegistrySingleton.ts\");\n/* harmony import */ var _vendor_cal_heatmap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vendor/cal-heatmap */ \"./plugins/legacy-plugin-chart-calendar/src/vendor/cal-heatmap.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\n\n\n\n\nconst propTypes = {\n  data: prop_types__WEBPACK_IMPORTED_MODULE_0___default().shape({\n    // Object hashed by metric name,\n    // then hashed by timestamp (in seconds, not milliseconds) as float\n    // the innermost value is count\n    // e.g. { count_distinct_something: { 1535034236.0: 3 } }\n    data: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().object),\n    domain: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().string),\n    range: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().number),\n    // timestamp in milliseconds\n    start: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().number),\n    subdomain: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().string) }),\n\n  height: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().number),\n  // eslint-disable-next-line react/sort-prop-types\n  cellPadding: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().number),\n  // eslint-disable-next-line react/sort-prop-types\n  cellRadius: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().number),\n  // eslint-disable-next-line react/sort-prop-types\n  cellSize: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().number),\n  linearColorScheme: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().string),\n  showLegend: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().bool),\n  showMetricName: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().bool),\n  showValues: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().bool),\n  steps: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().number),\n  timeFormatter: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().func),\n  valueFormatter: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().func),\n  verboseMap: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().object) };\n\n\nfunction Calendar(element, props) {\n  const {\n    data,\n    height,\n    cellPadding = 3,\n    cellRadius = 0,\n    cellSize = 10,\n    domainGranularity,\n    linearColorScheme,\n    showLegend,\n    showMetricName,\n    showValues,\n    steps,\n    subdomainGranularity,\n    timeFormatter,\n    valueFormatter,\n    verboseMap } =\n  props;\n\n  const container = (0,d3_selection__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(element).\n  classed('superset-legacy-chart-calendar', true).\n  style('height', height);\n  container.selectAll('*').remove();\n  const div = container.append('div');\n\n  const subDomainTextFormat = showValues ?\n  (date, value) => valueFormatter(value) :\n  null;\n\n  const metricsData = data.data;\n\n  Object.keys(metricsData).forEach((metric) => {\n    const calContainer = div.append('div');\n    if (showMetricName) {\n      calContainer.text(`Metric: ${verboseMap[metric] || metric}`);\n    }\n    const timestamps = metricsData[metric];\n    const extents = (0,d3_array__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object.keys(timestamps), (key) => timestamps[key]);\n    const step = (extents[1] - extents[0]) / (steps - 1);\n    const colorScale = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"])().\n    get(linearColorScheme).\n    createLinearScale(extents);\n\n    const legend = (0,d3_array__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(steps).map((i) => extents[0] + step * i);\n    const legendColors = legend.map((x) => colorScale(x));\n\n    const cal = new _vendor_cal_heatmap__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    cal.init({\n      start: data.start,\n      data: timestamps,\n      itemSelector: calContainer.node(),\n      legendVerticalPosition: 'top',\n      cellSize,\n      cellPadding,\n      cellRadius,\n      legendCellSize: cellSize,\n      legendCellPadding: 2,\n      legendCellRadius: cellRadius,\n      tooltip: true,\n      domain: domainGranularity,\n      subDomain: subdomainGranularity,\n      range: data.range,\n      browsing: true,\n      legend,\n      legendColors: {\n        colorScale,\n        min: legendColors[0],\n        max: legendColors[legendColors.length - 1],\n        empty: 'white' },\n\n      displayLegend: showLegend,\n      itemName: '',\n      valueFormatter,\n      timeFormatter,\n      subDomainTextFormat });\n\n  });\n}\n\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = propTypes;const _default =\n\nCalendar;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\plugins\\\\legacy-plugin-chart-calendar\\\\src\\\\Calendar.js\");reactHotLoader.register(Calendar, \"Calendar\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\plugins\\\\legacy-plugin-chart-calendar\\\\src\\\\Calendar.js\");reactHotLoader.register(_default, \"default\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\plugins\\\\legacy-plugin-chart-calendar\\\\src\\\\Calendar.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL2xlZ2FjeS1wbHVnaW4tY2hhcnQtY2FsZW5kYXIvc3JjL0NhbGVuZGFyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3BsdWdpbnMvbGVnYWN5LXBsdWdpbi1jaGFydC1jYWxlbmRhci9zcmMvQ2FsZW5kYXIuanM/NGM2NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxyXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcclxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cclxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxyXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXHJcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxyXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcclxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcclxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXHJcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcclxuICogdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgeyBleHRlbnQgYXMgZDNFeHRlbnQsIHJhbmdlIGFzIGQzUmFuZ2UgfSBmcm9tICdkMy1hcnJheSc7XHJcbmltcG9ydCB7IHNlbGVjdCBhcyBkM1NlbGVjdCB9IGZyb20gJ2QzLXNlbGVjdGlvbic7XHJcbmltcG9ydCB7IGdldFNlcXVlbnRpYWxTY2hlbWVSZWdpc3RyeSB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcclxuaW1wb3J0IENhbEhlYXRNYXAgZnJvbSAnLi92ZW5kb3IvY2FsLWhlYXRtYXAnO1xyXG5cclxuY29uc3QgcHJvcFR5cGVzID0ge1xyXG4gIGRhdGE6IFByb3BUeXBlcy5zaGFwZSh7XHJcbiAgICAvLyBPYmplY3QgaGFzaGVkIGJ5IG1ldHJpYyBuYW1lLFxyXG4gICAgLy8gdGhlbiBoYXNoZWQgYnkgdGltZXN0YW1wIChpbiBzZWNvbmRzLCBub3QgbWlsbGlzZWNvbmRzKSBhcyBmbG9hdFxyXG4gICAgLy8gdGhlIGlubmVybW9zdCB2YWx1ZSBpcyBjb3VudFxyXG4gICAgLy8gZS5nLiB7IGNvdW50X2Rpc3RpbmN0X3NvbWV0aGluZzogeyAxNTM1MDM0MjM2LjA6IDMgfSB9XHJcbiAgICBkYXRhOiBQcm9wVHlwZXMub2JqZWN0LFxyXG4gICAgZG9tYWluOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgcmFuZ2U6IFByb3BUeXBlcy5udW1iZXIsXHJcbiAgICAvLyB0aW1lc3RhbXAgaW4gbWlsbGlzZWNvbmRzXHJcbiAgICBzdGFydDogUHJvcFR5cGVzLm51bWJlcixcclxuICAgIHN1YmRvbWFpbjogUHJvcFR5cGVzLnN0cmluZyxcclxuICB9KSxcclxuICBoZWlnaHQ6IFByb3BUeXBlcy5udW1iZXIsXHJcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L3NvcnQtcHJvcC10eXBlc1xyXG4gIGNlbGxQYWRkaW5nOiBQcm9wVHlwZXMubnVtYmVyLFxyXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9zb3J0LXByb3AtdHlwZXNcclxuICBjZWxsUmFkaXVzOiBQcm9wVHlwZXMubnVtYmVyLFxyXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9zb3J0LXByb3AtdHlwZXNcclxuICBjZWxsU2l6ZTogUHJvcFR5cGVzLm51bWJlcixcclxuICBsaW5lYXJDb2xvclNjaGVtZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICBzaG93TGVnZW5kOiBQcm9wVHlwZXMuYm9vbCxcclxuICBzaG93TWV0cmljTmFtZTogUHJvcFR5cGVzLmJvb2wsXHJcbiAgc2hvd1ZhbHVlczogUHJvcFR5cGVzLmJvb2wsXHJcbiAgc3RlcHM6IFByb3BUeXBlcy5udW1iZXIsXHJcbiAgdGltZUZvcm1hdHRlcjogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgdmFsdWVGb3JtYXR0ZXI6IFByb3BUeXBlcy5mdW5jLFxyXG4gIHZlcmJvc2VNYXA6IFByb3BUeXBlcy5vYmplY3QsXHJcbn07XHJcblxyXG5mdW5jdGlvbiBDYWxlbmRhcihlbGVtZW50LCBwcm9wcykge1xyXG4gIGNvbnN0IHtcclxuICAgIGRhdGEsXHJcbiAgICBoZWlnaHQsXHJcbiAgICBjZWxsUGFkZGluZyA9IDMsXHJcbiAgICBjZWxsUmFkaXVzID0gMCxcclxuICAgIGNlbGxTaXplID0gMTAsXHJcbiAgICBkb21haW5HcmFudWxhcml0eSxcclxuICAgIGxpbmVhckNvbG9yU2NoZW1lLFxyXG4gICAgc2hvd0xlZ2VuZCxcclxuICAgIHNob3dNZXRyaWNOYW1lLFxyXG4gICAgc2hvd1ZhbHVlcyxcclxuICAgIHN0ZXBzLFxyXG4gICAgc3ViZG9tYWluR3JhbnVsYXJpdHksXHJcbiAgICB0aW1lRm9ybWF0dGVyLFxyXG4gICAgdmFsdWVGb3JtYXR0ZXIsXHJcbiAgICB2ZXJib3NlTWFwLFxyXG4gIH0gPSBwcm9wcztcclxuXHJcbiAgY29uc3QgY29udGFpbmVyID0gZDNTZWxlY3QoZWxlbWVudClcclxuICAgIC5jbGFzc2VkKCdzdXBlcnNldC1sZWdhY3ktY2hhcnQtY2FsZW5kYXInLCB0cnVlKVxyXG4gICAgLnN0eWxlKCdoZWlnaHQnLCBoZWlnaHQpO1xyXG4gIGNvbnRhaW5lci5zZWxlY3RBbGwoJyonKS5yZW1vdmUoKTtcclxuICBjb25zdCBkaXYgPSBjb250YWluZXIuYXBwZW5kKCdkaXYnKTtcclxuXHJcbiAgY29uc3Qgc3ViRG9tYWluVGV4dEZvcm1hdCA9IHNob3dWYWx1ZXNcclxuICAgID8gKGRhdGUsIHZhbHVlKSA9PiB2YWx1ZUZvcm1hdHRlcih2YWx1ZSlcclxuICAgIDogbnVsbDtcclxuXHJcbiAgY29uc3QgbWV0cmljc0RhdGEgPSBkYXRhLmRhdGE7XHJcblxyXG4gIE9iamVjdC5rZXlzKG1ldHJpY3NEYXRhKS5mb3JFYWNoKG1ldHJpYyA9PiB7XHJcbiAgICBjb25zdCBjYWxDb250YWluZXIgPSBkaXYuYXBwZW5kKCdkaXYnKTtcclxuICAgIGlmIChzaG93TWV0cmljTmFtZSkge1xyXG4gICAgICBjYWxDb250YWluZXIudGV4dChgTWV0cmljOiAke3ZlcmJvc2VNYXBbbWV0cmljXSB8fCBtZXRyaWN9YCk7XHJcbiAgICB9XHJcbiAgICBjb25zdCB0aW1lc3RhbXBzID0gbWV0cmljc0RhdGFbbWV0cmljXTtcclxuICAgIGNvbnN0IGV4dGVudHMgPSBkM0V4dGVudChPYmplY3Qua2V5cyh0aW1lc3RhbXBzKSwga2V5ID0+IHRpbWVzdGFtcHNba2V5XSk7XHJcbiAgICBjb25zdCBzdGVwID0gKGV4dGVudHNbMV0gLSBleHRlbnRzWzBdKSAvIChzdGVwcyAtIDEpO1xyXG4gICAgY29uc3QgY29sb3JTY2FsZSA9IGdldFNlcXVlbnRpYWxTY2hlbWVSZWdpc3RyeSgpXHJcbiAgICAgIC5nZXQobGluZWFyQ29sb3JTY2hlbWUpXHJcbiAgICAgIC5jcmVhdGVMaW5lYXJTY2FsZShleHRlbnRzKTtcclxuXHJcbiAgICBjb25zdCBsZWdlbmQgPSBkM1JhbmdlKHN0ZXBzKS5tYXAoaSA9PiBleHRlbnRzWzBdICsgc3RlcCAqIGkpO1xyXG4gICAgY29uc3QgbGVnZW5kQ29sb3JzID0gbGVnZW5kLm1hcCh4ID0+IGNvbG9yU2NhbGUoeCkpO1xyXG5cclxuICAgIGNvbnN0IGNhbCA9IG5ldyBDYWxIZWF0TWFwKCk7XHJcbiAgICBjYWwuaW5pdCh7XHJcbiAgICAgIHN0YXJ0OiBkYXRhLnN0YXJ0LFxyXG4gICAgICBkYXRhOiB0aW1lc3RhbXBzLFxyXG4gICAgICBpdGVtU2VsZWN0b3I6IGNhbENvbnRhaW5lci5ub2RlKCksXHJcbiAgICAgIGxlZ2VuZFZlcnRpY2FsUG9zaXRpb246ICd0b3AnLFxyXG4gICAgICBjZWxsU2l6ZSxcclxuICAgICAgY2VsbFBhZGRpbmcsXHJcbiAgICAgIGNlbGxSYWRpdXMsXHJcbiAgICAgIGxlZ2VuZENlbGxTaXplOiBjZWxsU2l6ZSxcclxuICAgICAgbGVnZW5kQ2VsbFBhZGRpbmc6IDIsXHJcbiAgICAgIGxlZ2VuZENlbGxSYWRpdXM6IGNlbGxSYWRpdXMsXHJcbiAgICAgIHRvb2x0aXA6IHRydWUsXHJcbiAgICAgIGRvbWFpbjogZG9tYWluR3JhbnVsYXJpdHksXHJcbiAgICAgIHN1YkRvbWFpbjogc3ViZG9tYWluR3JhbnVsYXJpdHksXHJcbiAgICAgIHJhbmdlOiBkYXRhLnJhbmdlLFxyXG4gICAgICBicm93c2luZzogdHJ1ZSxcclxuICAgICAgbGVnZW5kLFxyXG4gICAgICBsZWdlbmRDb2xvcnM6IHtcclxuICAgICAgICBjb2xvclNjYWxlLFxyXG4gICAgICAgIG1pbjogbGVnZW5kQ29sb3JzWzBdLFxyXG4gICAgICAgIG1heDogbGVnZW5kQ29sb3JzW2xlZ2VuZENvbG9ycy5sZW5ndGggLSAxXSxcclxuICAgICAgICBlbXB0eTogJ3doaXRlJyxcclxuICAgICAgfSxcclxuICAgICAgZGlzcGxheUxlZ2VuZDogc2hvd0xlZ2VuZCxcclxuICAgICAgaXRlbU5hbWU6ICcnLFxyXG4gICAgICB2YWx1ZUZvcm1hdHRlcixcclxuICAgICAgdGltZUZvcm1hdHRlcixcclxuICAgICAgc3ViRG9tYWluVGV4dEZvcm1hdCxcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59XHJcblxyXG5DYWxlbmRhci5kaXNwbGF5TmFtZSA9ICdDYWxlbmRhcic7XHJcbkNhbGVuZGFyLnByb3BUeXBlcyA9IHByb3BUeXBlcztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENhbGVuZGFyO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./plugins/legacy-plugin-chart-calendar/src/Calendar.js\n");

/***/ }),

/***/ "./plugins/legacy-plugin-chart-calendar/src/ReactCalendar.jsx":
/*!********************************************************************!*\
  !*** ./plugins/legacy-plugin-chart-calendar/src/ReactCalendar.jsx ***!
  \********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/chart/components/reactify.tsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _Calendar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Calendar */ \"./plugins/legacy-plugin-chart-calendar/src/Calendar.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\n\n\n\n\nconst ReactComponent = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_Calendar__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n\nconst Calender = ({ className, ...otherProps }) =>\n(0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", { className: className },\n(0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(_emotion_react__WEBPACK_IMPORTED_MODULE_4__.Global, {\n  styles: (theme) => _emotion_react__WEBPACK_IMPORTED_MODULE_4__.css`\n        .d3-tip {\n          line-height: 1;\n          padding: ${theme.gridUnit * 3}px;\n          background: ${theme.colors.grayscale.dark2};\n          color: ${theme.colors.grayscale.light5};\n          border-radius: 4px;\n          pointer-events: none;\n          z-index: 1000;\n          font-size: ${theme.typography.sizes.s}px;\n        }\n        /* Creates a small triangle extender for the tooltip */\n        .d3-tip:after {\n          box-sizing: border-box;\n          display: inline;\n          font-size: ${theme.typography.sizes.xs};\n          width: 100%;\n          line-height: 1;\n          color: ${theme.colors.grayscale.dark2};\n          position: absolute;\n          pointer-events: none;\n        }\n        /* Northward tooltips */\n        .d3-tip.n:after {\n          content: '\\\\25BC';\n          margin: -${theme.gridUnit}px 0 0 0;\n          top: 100%;\n          left: 0;\n          text-align: center;\n        }\n        /* Eastward tooltips */\n        .d3-tip.e:after {\n          content: '\\\\25C0';\n          margin: -${theme.gridUnit}px 0 0 0;\n          top: 50%;\n          left: -${theme.gridUnit * 2}px;\n        }\n        /* Southward tooltips */\n        .d3-tip.s:after {\n          content: '\\\\25B2';\n          margin: 0;\n          top: -${theme.gridUnit * 2}px;\n          left: 0;\n          text-align: center;\n        }\n        /* Westward tooltips */\n        .d3-tip.w:after {\n          content: '\\\\25B6';\n          margin: -${theme.gridUnit}px 0 0 0px;\n          top: 50%;\n          left: 100%;\n        }\n      ` }),\n\n(0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(ReactComponent, otherProps));\n\n\n\nCalender.defaultProps = {\n  otherProps: {} };\n\n\nCalender.propTypes = {\n  className: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string.isRequired),\n  otherProps: prop_types__WEBPACK_IMPORTED_MODULE_1___default().objectOf((prop_types__WEBPACK_IMPORTED_MODULE_1___default().any)) };const _default =\n\n\n(0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_5__.styled)(Calender)`\n  ${({ theme }) => `\n    .superset-legacy-chart-calendar {\n      padding: ${theme.gridUnit * 3}px;\n      position: static !important;\n      overflow: auto !important;\n    }\n\n    .superset-legacy-chart-calendar .ch-tooltip {\n      margin-left: ${theme.gridUnit * 5}px;\n      margin-top: ${theme.gridUnit}px;\n    }\n\n    .superset-legacy-chart-calendar .d3-tip {\n      line-height: 1;\n      padding: ${theme.gridUnit * 3}px;\n      background: ${theme.colors.grayscale.dark2};\n      color: ${theme.colors.grayscale.light5};\n      border-radius: ${theme.borderRadius}px;\n      pointer-events: none;\n      z-index: 1000;\n    }\n\n    .cal-heatmap-container {\n      display: block;\n    }\n\n    .cal-heatmap-container .graph-label {\n      fill: ${theme.colors.grayscale.base};\n      font-size: ${theme.typography.sizes.xs}px;\n    }\n\n    .cal-heatmap-container .graph,\n    .cal-heatmap-container .graph-legend rect {\n      shape-rendering: crispedges;\n    }\n\n    .cal-heatmap-container .graph-rect {\n      fill: ${theme.colors.grayscale.light2};\n    }\n\n    .cal-heatmap-container .graph-subdomain-group rect:hover {\n      stroke: ${theme.colors.grayscale.dark2};\n      stroke-width: 1px;\n    }\n\n    .cal-heatmap-container .subdomain-text {\n      font-size: ${theme.typography.sizes.xs}px;\n      pointer-events: none;\n    }\n\n    .cal-heatmap-container .hover_cursor:hover {\n      cursor: pointer;\n    }\n\n    .cal-heatmap-container .qi {\n      background-color: ${theme.colors.grayscale.base};\n      fill: ${theme.colors.grayscale.base};\n    }\n\n    .cal-heatmap-container .q1 {\n      background-color: ${theme.colors.alert.light2};\n      fill: ${theme.colors.alert.light2};\n    }\n\n    .cal-heatmap-container .q2 {\n      background-color: ${theme.colors.alert.light1};\n      fill: ${theme.colors.alert.light1};\n    }\n\n    .cal-heatmap-container .q3 {\n      background-color: ${theme.colors.success.light1};\n      fill: ${theme.colors.success.light1};\n    }\n\n    .cal-heatmap-container .q4 {\n      background-color: ${theme.colors.success.base};\n      fill: ${theme.colors.success.base};\n    }\n\n    .cal-heatmap-container .q5 {\n      background-color: ${theme.colors.success.dark1};\n      fill: ${theme.colors.success.dark1};\n    }\n\n    .cal-heatmap-container rect.highlight {\n      stroke: ${theme.colors.grayscale.dark1};\n      stroke-width: 1;\n    }\n\n    .cal-heatmap-container text.highlight {\n      fill: ${theme.colors.grayscale.dark1};\n    }\n\n    .cal-heatmap-container rect.highlight-now {\n      stroke: ${theme.colors.error.base};\n    }\n\n    .cal-heatmap-container text.highlight-now {\n      fill: ${theme.colors.error.base};\n      font-weight: ${theme.typography.weights.bold};\n    }\n\n    .cal-heatmap-container .domain-background {\n      fill: none;\n      shape-rendering: crispedges;\n    }\n\n    .ch-tooltip {\n      padding: ${theme.gridUnit * 2}px;\n      background: ${theme.colors.grayscale.dark1};\n      color: ${theme.colors.grayscale.light1};\n      font-size: ${theme.typography.sizes.s}px;\n      line-height: 1.4;\n      width: 140px;\n      position: absolute;\n      z-index: 99999;\n      text-align: center;\n      border-radius: ${theme.borderRadius}px;\n      box-shadow: 2px 2px 2px ${theme.colors.grayscale.dark2};\n      display: none;\n      box-sizing: border-box;\n    }\n\n    .ch-tooltip::after {\n      position: absolute;\n      width: 0;\n      height: 0;\n      border-color: transparent;\n      border-style: solid;\n      content: '';\n      padding: 0;\n      display: block;\n      bottom: -${theme.gridUnit}px;\n      left: 50%;\n      margin-left: -${theme.gridUnit}px;\n      border-width: ${theme.gridUnit}px ${theme.gridUnit}px 0;\n      border-top-color: ${theme.colors.grayscale.dark1};\n    }\n  `}\n`;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ReactComponent, \"ReactComponent\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\plugins\\\\legacy-plugin-chart-calendar\\\\src\\\\ReactCalendar.jsx\");reactHotLoader.register(Calender, \"Calender\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\plugins\\\\legacy-plugin-chart-calendar\\\\src\\\\ReactCalendar.jsx\");reactHotLoader.register(_default, \"default\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\plugins\\\\legacy-plugin-chart-calendar\\\\src\\\\ReactCalendar.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./plugins/legacy-plugin-chart-calendar/src/ReactCalendar.jsx\n");

/***/ }),

/***/ "./plugins/legacy-plugin-chart-calendar/src/vendor/cal-heatmap.js":
/*!************************************************************************!*\
  !*** ./plugins/legacy-plugin-chart-calendar/src/vendor/cal-heatmap.js ***!
  \************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var d3_tip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-tip */ \"./node_modules/d3-tip/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/color/utils.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; // [LICENSE TBD]\n/* Copied and altered from http://cal-heatmap.com/ , alterations around:\r\n * - tuning tooltips\r\n * - supporting multi-colors scales\r\n * - legend format\r\n * - UTC handling\r\n */\n\n/* eslint-disable */\n\n\n\n\nvar d3 =  true ? __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\") : 0;\n\nvar d3 =  true ? __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\") : 0;\n\nvar CalHeatMap = function () {\n  'use strict';\n\n  var self = this;\n  self.tip = (0,d3_tip__WEBPACK_IMPORTED_MODULE_0__[\"default\"])().\n  attr('class', 'd3-tip').\n  direction('n').\n  offset([-5, 0]).\n  html(\n  (d) => `\n      ${self.options.timeFormatter(d.t)}: <strong>${self.options.valueFormatter(\n  d.v)\n  }</strong>\n    `);\n\n  self.legendTip = (0,d3_tip__WEBPACK_IMPORTED_MODULE_0__[\"default\"])().\n  attr('class', 'd3-tip').\n  direction('n').\n  offset([-5, 0]).\n  html((d) => self.options.valueFormatter(d));\n\n  this.allowedDataType = ['json', 'csv', 'tsv', 'txt'];\n\n  // Default settings\n  this.options = {\n    // selector string of the container to append the graph to\n    // Accept any string value accepted by document.querySelector or CSS3\n    // or an Element object\n    itemSelector: '#cal-heatmap',\n\n    // Whether to paint the calendar on init()\n    // Used by testsuite to reduce testing time\n    paintOnLoad: true,\n\n    // ================================================\n    // DOMAIN\n    // ================================================\n\n    // Number of domain to display on the graph\n    range: 12,\n\n    // Size of each cell, in pixel\n    cellSize: 10,\n\n    // Padding between each cell, in pixel\n    cellPadding: 2,\n\n    // For rounded subdomain rectangles, in pixels\n    cellRadius: 0,\n\n    domainGutter: 2,\n\n    domainMargin: [0, 0, 0, 0],\n\n    valueFormatter: (d) => d,\n\n    timeFormatter: (d) => d,\n\n    domain: 'hour',\n\n    subDomain: 'min',\n\n    // Number of columns to split the subDomains to\n    // If not null, will takes precedence over rowLimit\n    colLimit: null,\n\n    // Number of rows to split the subDomains to\n    // Will be ignored if colLimit is not null\n    rowLimit: null,\n\n    // First day of the week is Monday\n    // 0 to start the week on Sunday\n    weekStartOnMonday: true,\n\n    // Start date of the graph\n    // @default now\n    start: new Date(),\n\n    minDate: null,\n\n    maxDate: null,\n\n    // ================================================\n    // DATA\n    // ================================================\n\n    // Data source\n    // URL, where to fetch the original datas\n    data: '',\n\n    // Data type\n    // Default: json\n    dataType: this.allowedDataType[0],\n\n    // Payload sent when using POST http method\n    // Leave to null (default) for GET request\n    // Expect a string, formatted like \"a=b;c=d\"\n    dataPostPayload: null,\n\n    // Additional headers sent when requesting data\n    // Expect an object formatted like:\n    // { 'X-CSRF-TOKEN': 'token' }\n    dataRequestHeaders: null,\n\n    // Whether to consider missing date:value from the datasource\n    // as equal to 0, or just leave them as missing\n    considerMissingDataAsZero: false,\n\n    // Load remote data on calendar creation\n    // When false, the calendar will be left empty\n    loadOnInit: true,\n\n    // Calendar orientation\n    // false: display domains side by side\n    // true : display domains one under the other\n    verticalOrientation: false,\n\n    // Domain dynamic width/height\n    // The width on a domain depends on the number of\n    domainDynamicDimension: true,\n\n    // Domain Label properties\n    label: {\n      // valid: top, right, bottom, left\n      position: 'bottom',\n\n      // Valid: left, center, right\n      // Also valid are the direct svg values: start, middle, end\n      align: 'center',\n\n      // By default, there is no margin/padding around the label\n      offset: {\n        x: 0,\n        y: 0 },\n\n\n      rotate: null,\n\n      // Used only on vertical orientation\n      width: 100,\n\n      // Used only on horizontal orientation\n      height: null },\n\n\n    // ================================================\n    // LEGEND\n    // ================================================\n\n    // Threshold for the legend\n    legend: [10, 20, 30, 40],\n\n    // Whether to display the legend\n    displayLegend: true,\n\n    legendCellSize: 10,\n\n    legendCellPadding: 2,\n\n    legendMargin: [0, 0, 0, 0],\n\n    // Legend vertical position\n    // top: place legend above calendar\n    // bottom: place legend below the calendar\n    legendVerticalPosition: 'bottom',\n\n    // Legend horizontal position\n    // accepted values: left, center, right\n    legendHorizontalPosition: 'left',\n\n    // Legend rotation\n    // accepted values: horizontal, vertical\n    legendOrientation: 'horizontal',\n\n    // Objects holding all the heatmap different colors\n    // null to disable, and use the default css styles\n    //\n    // Examples:\n    // legendColors: {\n    //    min: \"green\",\n    //    max: \"red\",\n    //    empty: \"#ffffff\",\n    //    base: \"grey\",\n    //    overflow: \"red\",\n    //    colorScaler: null,\n    // }\n    legendColors: null,\n\n    // ================================================\n    // HIGHLIGHT\n    // ================================================\n\n    // List of dates to highlight\n    // Valid values:\n    // - []: don't highlight anything\n    // - \"now\": highlight the current date\n    // - an array of Date objects: highlight the specified dates\n    highlight: [],\n\n    // ================================================\n    // TEXT FORMATTING / i18n\n    // ================================================\n\n    // Name of the items to represent in the calendar\n    itemName: ['item', 'items'],\n\n    // Formatting of the domain label\n    // @default: null, will use the formatting according to domain type\n    // Accept a string used as specifier by d3.time.format()\n    // or a function\n    //\n    // Refer to https://github.com/mbostock/d3/wiki/Time-Formatting\n    // for accepted date formatting used by d3.time.format()\n    domainLabelFormat: null,\n\n    // Formatting of the title displayed when hovering a subDomain cell\n    subDomainTitleFormat: {\n      empty: '{date}',\n      filled: '{count} {name} {connector} {date}' },\n\n\n    // Formatting of the {date} used in subDomainTitleFormat\n    // @default: null, will use the formatting according to subDomain type\n    // Accept a string used as specifier by d3.time.format()\n    // or a function\n    //\n    // Refer to https://github.com/mbostock/d3/wiki/Time-Formatting\n    // for accepted date formatting used by d3.time.format()\n    subDomainDateFormat: null,\n\n    // Formatting of the text inside each subDomain cell\n    // @default: null, no text\n    // Accept a string used as specifier by d3.time.format()\n    // or a function\n    //\n    // Refer to https://github.com/mbostock/d3/wiki/Time-Formatting\n    // for accepted date formatting used by d3.time.format()\n    subDomainTextFormat: null,\n\n    // Formatting of the title displayed when hovering a legend cell\n    legendTitleFormat: {\n      lower: 'less than {min} {name}',\n      inner: 'between {down} and {up} {name}',\n      upper: 'more than {max} {name}' },\n\n\n    // Animation duration, in ms\n    animationDuration: 500,\n\n    nextSelector: false,\n\n    previousSelector: false,\n\n    itemNamespace: 'cal-heatmap',\n\n    tooltip: false,\n\n    // ================================================\n    // EVENTS CALLBACK\n    // ================================================\n\n    // Callback when clicking on a time block\n    onClick: null,\n\n    // Callback after painting the empty calendar\n    // Can be used to trigger an API call, once the calendar is ready to be filled\n    afterLoad: null,\n\n    // Callback after loading the next domain in the calendar\n    afterLoadNextDomain: null,\n\n    // Callback after loading the previous domain in the calendar\n    afterLoadPreviousDomain: null,\n\n    // Callback after finishing all actions on the calendar\n    onComplete: null,\n\n    // Callback after fetching the datas, but before applying them to the calendar\n    // Used mainly to convert the datas if they're not formatted like expected\n    // Takes the fetched \"data\" object as argument, must return a json object\n    // formatted like {timestamp:count, timestamp2:count2},\n    afterLoadData: function (data) {\n      return data;\n    },\n\n    // Callback triggered after calling and completing update().\n    afterUpdate: null,\n\n    // Callback triggered after calling next().\n    // The `status` argument is equal to true if there is no\n    // more next domain to load\n    //\n    // This callback is also executed once, after calling previous(),\n    // only when the max domain is reached\n    onMaxDomainReached: null,\n\n    // Callback triggered after calling previous().\n    // The `status` argument is equal to true if there is no\n    // more previous domain to load\n    //\n    // This callback is also executed once, after calling next(),\n    // only when the min domain is reached\n    onMinDomainReached: null };\n\n\n  this._domainType = {\n    min: {\n      name: 'minute',\n      level: 10,\n      maxItemNumber: 60,\n      defaultRowNumber: 10,\n      defaultColumnNumber: 6,\n      row: function (d) {\n        return self.getSubDomainRowNumber(d);\n      },\n      column: function (d) {\n        return self.getSubDomainColumnNumber(d);\n      },\n      position: {\n        x: function (d) {\n          return Math.floor(d.getMinutes() / self._domainType.min.row(d));\n        },\n        y: function (d) {\n          return d.getMinutes() % self._domainType.min.row(d);\n        } },\n\n      format: {\n        date: '%H:%M, %A %B %-e, %Y',\n        legend: '',\n        connector: 'at' },\n\n      extractUnit: function (d) {\n        return new Date(\n        d.getFullYear(),\n        d.getMonth(),\n        d.getDate(),\n        d.getHours(),\n        d.getMinutes()).\n        getTime();\n      } },\n\n    hour: {\n      name: 'hour',\n      level: 20,\n      maxItemNumber: function (d) {\n        switch (self.options.domain) {\n          case 'day':\n            return 24;\n          case 'week':\n            return 24 * 7;\n          case 'month':\n            return (\n              24 * (\n              self.options.domainDynamicDimension ?\n              self.getDayCountInMonth(d) :\n              31));}\n\n\n      },\n      defaultRowNumber: 6,\n      defaultColumnNumber: function (d) {\n        switch (self.options.domain) {\n          case 'day':\n            return 4;\n          case 'week':\n            return 28;\n          case 'month':\n            return self.options.domainDynamicDimension ?\n            self.getDayCountInMonth(d) :\n            31;}\n\n      },\n      row: function (d) {\n        return self.getSubDomainRowNumber(d);\n      },\n      column: function (d) {\n        return self.getSubDomainColumnNumber(d);\n      },\n      position: {\n        x: function (d) {\n          if (self.options.domain === 'month') {\n            if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n              return Math.floor(\n              (d.getHours() + (d.getDate() - 1) * 24) /\n              self._domainType.hour.row(d));\n\n            }\n            return (\n              Math.floor(d.getHours() / self._domainType.hour.row(d)) +\n              (d.getDate() - 1) * 4);\n\n          } else if (self.options.domain === 'week') {\n            if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n              return Math.floor(\n              (d.getHours() + self.getWeekDay(d) * 24) /\n              self._domainType.hour.row(d));\n\n            }\n            return (\n              Math.floor(d.getHours() / self._domainType.hour.row(d)) +\n              self.getWeekDay(d) * 4);\n\n          }\n          return Math.floor(d.getHours() / self._domainType.hour.row(d));\n        },\n        y: function (d) {\n          var p = d.getHours();\n          if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n            switch (self.options.domain) {\n              case 'month':\n                p += (d.getDate() - 1) * 24;\n                break;\n              case 'week':\n                p += self.getWeekDay(d) * 24;\n                break;}\n\n          }\n          return Math.floor(p % self._domainType.hour.row(d));\n        } },\n\n      format: {\n        date: '%Hh, %A %B %-e, %Y',\n        legend: '%H:00',\n        connector: 'at' },\n\n      extractUnit: function (d) {\n        return new Date(\n        d.getFullYear(),\n        d.getMonth(),\n        d.getDate(),\n        d.getHours()).\n        getTime();\n      } },\n\n    day: {\n      name: 'day',\n      level: 30,\n      maxItemNumber: function (d) {\n        switch (self.options.domain) {\n          case 'week':\n            return 7;\n          case 'month':\n            return self.options.domainDynamicDimension ?\n            self.getDayCountInMonth(d) :\n            31;\n          case 'year':\n            return self.options.domainDynamicDimension ?\n            self.getDayCountInYear(d) :\n            366;}\n\n      },\n      defaultColumnNumber: function (d) {\n        d = new Date(d);\n        switch (self.options.domain) {\n          case 'week':\n            return 1;\n          case 'month':\n            return self.options.domainDynamicDimension &&\n            !self.options.verticalOrientation ?\n            self.getWeekNumber(\n            new Date(d.getFullYear(), d.getMonth() + 1, 0)) -\n\n            self.getWeekNumber(d) +\n            1 :\n            6;\n          case 'year':\n            return self.options.domainDynamicDimension ?\n            self.getWeekNumber(new Date(d.getFullYear(), 11, 31)) -\n            self.getWeekNumber(new Date(d.getFullYear(), 0)) +\n            1 :\n            54;}\n\n      },\n      defaultRowNumber: 7,\n      row: function (d) {\n        return self.getSubDomainRowNumber(d);\n      },\n      column: function (d) {\n        return self.getSubDomainColumnNumber(d);\n      },\n      position: {\n        x: function (d) {\n          switch (self.options.domain) {\n            case 'week':\n              return Math.floor(\n              self.getWeekDay(d) / self._domainType.day.row(d));\n\n            case 'month':\n              if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n                return Math.floor(\n                (d.getDate() - 1) / self._domainType.day.row(d));\n\n              }\n              return (\n                self.getWeekNumber(d) -\n                self.getWeekNumber(new Date(d.getFullYear(), d.getMonth())));\n\n            case 'year':\n              if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n                return Math.floor(\n                (self.getDayOfYear(d) - 1) / self._domainType.day.row(d));\n\n              }\n              return self.getWeekNumber(d);}\n\n        },\n        y: function (d) {\n          var p = self.getWeekDay(d);\n          if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n            switch (self.options.domain) {\n              case 'year':\n                p = self.getDayOfYear(d) - 1;\n                break;\n              case 'week':\n                p = self.getWeekDay(d);\n                break;\n              case 'month':\n                p = d.getDate() - 1;\n                break;}\n\n          }\n          return Math.floor(p % self._domainType.day.row(d));\n        } },\n\n      format: {\n        date: '%A %B %-e, %Y',\n        legend: '%e %b',\n        connector: 'on' },\n\n      extractUnit: function (d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate()).getTime();\n      } },\n\n    week: {\n      name: 'week',\n      level: 40,\n      maxItemNumber: 54,\n      defaultColumnNumber: function (d) {\n        d = new Date(d);\n        switch (self.options.domain) {\n          case 'year':\n            return self._domainType.week.maxItemNumber;\n          case 'month':\n            return self.options.domainDynamicDimension ?\n            self.getWeekNumber(\n            new Date(d.getFullYear(), d.getMonth() + 1, 0)) -\n            self.getWeekNumber(d) :\n            5;}\n\n      },\n      defaultRowNumber: 1,\n      row: function (d) {\n        return self.getSubDomainRowNumber(d);\n      },\n      column: function (d) {\n        return self.getSubDomainColumnNumber(d);\n      },\n      position: {\n        x: function (d) {\n          switch (self.options.domain) {\n            case 'year':\n              return Math.floor(\n              self.getWeekNumber(d) / self._domainType.week.row(d));\n\n            case 'month':\n              return Math.floor(\n              self.getMonthWeekNumber(d) / self._domainType.week.row(d));}\n\n\n        },\n        y: function (d) {\n          return self.getWeekNumber(d) % self._domainType.week.row(d);\n        } },\n\n      format: {\n        date: '%B Week #%W',\n        legend: '%B Week #%W',\n        connector: 'in' },\n\n      extractUnit: function (d) {\n        var dt = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n        // According to ISO-8601, week number computation are based on week starting on Monday\n        var weekDay = dt.getDay() - (self.options.weekStartOnMonday ? 1 : 0);\n        if (weekDay < 0) {\n          weekDay = 6;\n        }\n        dt.setDate(dt.getDate() - weekDay);\n        return dt.getTime();\n      } },\n\n    month: {\n      name: 'month',\n      level: 50,\n      maxItemNumber: 12,\n      defaultColumnNumber: 12,\n      defaultRowNumber: 1,\n      row: function () {\n        return self.getSubDomainRowNumber();\n      },\n      column: function () {\n        return self.getSubDomainColumnNumber();\n      },\n      position: {\n        x: function (d) {\n          return Math.floor(d.getMonth() / self._domainType.month.row(d));\n        },\n        y: function (d) {\n          return d.getMonth() % self._domainType.month.row(d);\n        } },\n\n      format: {\n        date: '%B %Y',\n        legend: '%B',\n        connector: 'in' },\n\n      extractUnit: function (d) {\n        return new Date(d.getFullYear(), d.getMonth()).getTime();\n      } },\n\n    year: {\n      name: 'year',\n      level: 60,\n      row: function () {\n        return self.options.rowLimit || 1;\n      },\n      column: function () {\n        return self.options.colLimit || 1;\n      },\n      position: {\n        x: function () {\n          return 1;\n        },\n        y: function () {\n          return 1;\n        } },\n\n      format: {\n        date: '%Y',\n        legend: '%Y',\n        connector: 'in' },\n\n      extractUnit: function (d) {\n        return new Date(d.getFullYear()).getTime();\n      } } };\n\n\n\n  for (var type in this._domainType) {\n    if (this._domainType.hasOwnProperty(type)) {\n      var d = this._domainType[type];\n      this._domainType['x_' + type] = {\n        name: 'x_' + type,\n        level: d.type,\n        maxItemNumber: d.maxItemNumber,\n        defaultRowNumber: d.defaultRowNumber,\n        defaultColumnNumber: d.defaultColumnNumber,\n        row: d.column,\n        column: d.row,\n        position: {\n          x: d.position.y,\n          y: d.position.x },\n\n        format: d.format,\n        extractUnit: d.extractUnit };\n\n    }\n  }\n\n  // Record the address of the last inserted domain when browsing\n  this.lastInsertedSvg = null;\n\n  this._completed = false;\n\n  // Record all the valid domains\n  // Each domain value is a timestamp in milliseconds\n  this._domains = d3.map();\n\n  this.graphDim = {\n    width: 0,\n    height: 0 };\n\n\n  this.legendDim = {\n    width: 0,\n    height: 0 };\n\n\n  this.NAVIGATE_LEFT = 1;\n  this.NAVIGATE_RIGHT = 2;\n\n  // Various update mode when using the update() API\n  this.RESET_ALL_ON_UPDATE = 0;\n  this.RESET_SINGLE_ON_UPDATE = 1;\n  this.APPEND_ON_UPDATE = 2;\n\n  this.DEFAULT_LEGEND_MARGIN = 10;\n\n  this.root = null;\n  this.tooltip = null;\n\n  this._maxDomainReached = false;\n  this._minDomainReached = false;\n\n  this.domainPosition = new DomainPosition();\n  this.Legend = null;\n  this.legendScale = null;\n\n  // List of domains that are skipped because of DST\n  // All times belonging to these domains should be re-assigned to the previous domain\n  this.DSTDomain = [];\n\n  /**\r\n   * Display the graph for the first time\r\n   * @return bool True if the calendar is created\r\n   */\n  this._init = function () {\n    self.\n    getDomain(self.options.start).\n    map(function (d) {\n      return d.getTime();\n    }).\n    map(function (d) {\n      self._domains.set(\n      d,\n      self.getSubDomain(d).map(function (d) {\n        return {\n          t: self._domainType[self.options.subDomain].extractUnit(d),\n          v: null };\n\n      }));\n\n    });\n\n    self.root = d3.\n    select(self.options.itemSelector).\n    append('svg').\n    attr('class', 'cal-heatmap-container');\n\n    self.root.attr('x', 0).attr('y', 0).append('svg').attr('class', 'graph');\n\n    self.Legend = new Legend(self);\n\n    if (self.options.paintOnLoad) {\n      _initCalendar();\n    }\n    self.root.call(self.tip);\n    self.root.call(self.legendTip);\n\n    return true;\n  };\n\n  function _initCalendar() {\n    self.verticalDomainLabel =\n    self.options.label.position === 'top' ||\n    self.options.label.position === 'bottom';\n\n    self.domainVerticalLabelHeight =\n    self.options.label.height === null ?\n    Math.max(25, self.options.cellSize * 2) :\n    self.options.label.height;\n    self.domainHorizontalLabelWidth = 0;\n\n    if (\n    self.options.domainLabelFormat === '' &&\n    self.options.label.height === null)\n    {\n      self.domainVerticalLabelHeight = 0;\n    }\n\n    if (!self.verticalDomainLabel) {\n      self.domainVerticalLabelHeight = 0;\n      self.domainHorizontalLabelWidth = self.options.label.width;\n    }\n\n    self.paint();\n\n    // =========================================================================//\n    // ATTACHING DOMAIN NAVIGATION EVENT                    //\n    // =========================================================================//\n    if (self.options.nextSelector !== false) {\n      d3.select(self.options.nextSelector).on(\n      'click.' + self.options.itemNamespace,\n      function () {\n        d3.event.preventDefault();\n        return self.loadNextDomain(1);\n      });\n\n    }\n\n    if (self.options.previousSelector !== false) {\n      d3.select(self.options.previousSelector).on(\n      'click.' + self.options.itemNamespace,\n      function () {\n        d3.event.preventDefault();\n        return self.loadPreviousDomain(1);\n      });\n\n    }\n\n    self.Legend.redraw(\n    self.graphDim.width -\n    self.options.domainGutter -\n    self.options.cellPadding);\n\n    self.afterLoad();\n\n    var domains = self.getDomainKeys();\n\n    // Fill the graph with some datas\n    if (self.options.loadOnInit) {\n      self.getDatas(\n      self.options.data,\n      new Date(domains[0]),\n      self.getSubDomain(domains[domains.length - 1]).pop(),\n      function () {\n        self.fill();\n        self.onComplete();\n      });\n\n    } else {\n      self.onComplete();\n    }\n\n    self.checkIfMinDomainIsReached(domains[0]);\n    self.checkIfMaxDomainIsReached(self.getNextDomain().getTime());\n  }\n\n  // Return the width of the domain block, without the domain gutter\n  // @param int d Domain start timestamp\n  function w(d, outer) {\n    var width =\n    self.options.cellSize *\n    self._domainType[self.options.subDomain].column(d) +\n    self.options.cellPadding *\n    self._domainType[self.options.subDomain].column(d);\n    if (arguments.length === 2 && outer === true) {\n      return width +=\n      self.domainHorizontalLabelWidth +\n      self.options.domainGutter +\n      self.options.domainMargin[1] +\n      self.options.domainMargin[3];\n    }\n    return width;\n  }\n\n  // Return the height of the domain block, without the domain gutter\n  function h(d, outer) {\n    var height =\n    self.options.cellSize * self._domainType[self.options.subDomain].row(d) +\n    self.options.cellPadding *\n    self._domainType[self.options.subDomain].row(d);\n    if (arguments.length === 2 && outer === true) {\n      height +=\n      self.options.domainGutter +\n      self.domainVerticalLabelHeight +\n      self.options.domainMargin[0] +\n      self.options.domainMargin[2];\n    }\n    return height;\n  }\n\n  /**\r\n   *\r\n   *\r\n   * @param int navigationDir\r\n   */\n  this.paint = function (navigationDir) {\n    var options = self.options;\n\n    if (arguments.length === 0) {\n      navigationDir = false;\n    }\n\n    // Painting all the domains\n    var domainSvg = self.root.\n    select('.graph').\n    selectAll('.graph-domain').\n    data(\n    function () {\n      var data = self.getDomainKeys();\n      return navigationDir === self.NAVIGATE_LEFT ? data.reverse() : data;\n    },\n    function (d) {\n      return d;\n    });\n\n    var enteringDomainDim = 0;\n    var exitingDomainDim = 0;\n\n    // =========================================================================//\n    // PAINTING DOMAIN                              //\n    // =========================================================================//\n\n    var svg = domainSvg.\n    enter().\n    append('svg').\n    attr('width', function (d) {\n      return w(d, true);\n    }).\n    attr('height', function (d) {\n      return h(d, true);\n    }).\n    attr('x', function (d) {\n      if (options.verticalOrientation) {\n        self.graphDim.width = Math.max(self.graphDim.width, w(d, true));\n        return 0;\n      } else {\n        return getDomainPosition(d, self.graphDim, 'width', w(d, true));\n      }\n    }).\n    attr('y', function (d) {\n      if (options.verticalOrientation) {\n        return getDomainPosition(d, self.graphDim, 'height', h(d, true));\n      } else {\n        self.graphDim.height = Math.max(self.graphDim.height, h(d, true));\n        return 0;\n      }\n    }).\n    attr('class', function (d) {\n      var classname = 'graph-domain';\n      var date = new Date(d);\n      switch (options.domain) {\n        case 'hour':\n          classname += ' h_' + date.getHours();\n        /* falls through */\n        case 'day':\n          classname += ' d_' + date.getDate() + ' dy_' + date.getDay();\n        /* falls through */\n        case 'week':\n          classname += ' w_' + self.getWeekNumber(date);\n        /* falls through */\n        case 'month':\n          classname += ' m_' + (date.getMonth() + 1);\n        /* falls through */\n        case 'year':\n          classname += ' y_' + date.getFullYear();}\n\n      return classname;\n    });\n    self.lastInsertedSvg = svg;\n\n    function getDomainPosition(domainIndex, graphDim, axis, domainDim) {\n      var tmp = 0;\n      switch (navigationDir) {\n        case false:\n          tmp = graphDim[axis];\n\n          graphDim[axis] += domainDim;\n          self.domainPosition.setPosition(domainIndex, tmp);\n          return tmp;\n\n        case self.NAVIGATE_RIGHT:\n          self.domainPosition.setPosition(domainIndex, graphDim[axis]);\n\n          enteringDomainDim = domainDim;\n          exitingDomainDim = self.domainPosition.getPositionFromIndex(1);\n\n          self.domainPosition.shiftRightBy(exitingDomainDim);\n          return graphDim[axis];\n\n        case self.NAVIGATE_LEFT:\n          tmp = -domainDim;\n\n          enteringDomainDim = -tmp;\n          exitingDomainDim = graphDim[axis] - self.domainPosition.getLast();\n\n          self.domainPosition.setPosition(domainIndex, tmp);\n          self.domainPosition.shiftLeftBy(enteringDomainDim);\n          return tmp;}\n\n    }\n\n    svg.\n    append('rect').\n    attr('width', function (d) {\n      return w(d, true) - options.domainGutter - options.cellPadding;\n    }).\n    attr('height', function (d) {\n      return h(d, true) - options.domainGutter - options.cellPadding;\n    }).\n    attr('class', 'domain-background');\n\n    // =========================================================================//\n    // PAINTING SUBDOMAINS                            //\n    // =========================================================================//\n    var subDomainSvgGroup = svg.\n    append('svg').\n    attr('x', function () {\n      if (options.label.position === 'left') {\n        return self.domainHorizontalLabelWidth + options.domainMargin[3];\n      } else {\n        return options.domainMargin[3];\n      }\n    }).\n    attr('y', function () {\n      if (options.label.position === 'top') {\n        return self.domainVerticalLabelHeight + options.domainMargin[0];\n      } else {\n        return options.domainMargin[0];\n      }\n    }).\n    attr('class', 'graph-subdomain-group');\n    var rect = subDomainSvgGroup.\n    selectAll('g').\n    data(function (d) {\n      return self._domains.get(d);\n    }).\n    enter().\n    append('g');\n    rect.\n    append('rect').\n    attr('class', function (d) {\n      return (\n        'graph-rect' +\n        self.getHighlightClassName(d.t) + (\n        options.onClick !== null ? ' hover_cursor' : ''));\n\n    }).\n    attr('width', options.cellSize).\n    attr('height', options.cellSize).\n    attr('x', function (d) {\n      return self.positionSubDomainX(d.t);\n    }).\n    attr('y', function (d) {\n      return self.positionSubDomainY(d.t);\n    }).\n    on('click', function (d) {\n      if (options.onClick !== null) {\n        return self.onClick(new Date(d.t), d.v);\n      }\n    }).\n    call(function (selection) {\n      if (options.cellRadius > 0) {\n        selection.\n        attr('rx', options.cellRadius).\n        attr('ry', options.cellRadius);\n      }\n\n      if (\n      self.legendScale !== null &&\n      options.legendColors !== null &&\n      options.legendColors.hasOwnProperty('base'))\n      {\n        selection.attr('fill', options.legendColors.base);\n      }\n\n      if (options.tooltip) {\n        selection.\n        on('mouseover', function (d) {\n          self.tip.show(d, this);\n        }).\n        on('mouseout', function () {\n          self.tip.hide(d);\n        });\n      }\n    });\n\n    // Appending a title to each subdomain\n    if (!options.tooltip) {\n      rect.append('title').text(function (d) {\n        return self.formatDate(new Date(d.t), options.subDomainDateFormat);\n      });\n    }\n\n    // =========================================================================//\n    // PAINTING LABEL                              //\n    // =========================================================================//\n    if (options.domainLabelFormat !== '') {\n      svg.\n      append('text').\n      attr('class', 'graph-label').\n      attr('y', function (d) {\n        var y = options.domainMargin[0];\n        switch (options.label.position) {\n          case 'top':\n            y += self.domainVerticalLabelHeight / 2;\n            break;\n          case 'bottom':\n            y += h(d) + self.domainVerticalLabelHeight / 2;}\n\n\n        return (\n          y +\n          options.label.offset.y * (\n          options.label.rotate === 'right' &&\n          options.label.position === 'right' ||\n          options.label.rotate === 'left' &&\n          options.label.position === 'left' ?\n          -1 :\n          1));\n\n      }).\n      attr('x', function (d) {\n        var x = options.domainMargin[3];\n        switch (options.label.position) {\n          case 'right':\n            x += w(d);\n            break;\n          case 'bottom':\n          case 'top':\n            x += w(d) / 2;}\n\n\n        if (options.label.align === 'right') {\n          return (\n            x +\n            self.domainHorizontalLabelWidth -\n            options.label.offset.x * (\n            options.label.rotate === 'right' ? -1 : 1));\n\n        }\n        return x + options.label.offset.x;\n      }).\n      attr('text-anchor', function () {\n        switch (options.label.align) {\n          case 'start':\n          case 'left':\n            return 'start';\n          case 'end':\n          case 'right':\n            return 'end';\n          default:\n            return 'middle';}\n\n      }).\n      attr('dominant-baseline', function () {\n        return self.verticalDomainLabel ? 'middle' : 'top';\n      }).\n      text(function (d) {\n        return self.formatDate(new Date(d), options.domainLabelFormat);\n      }).\n      call(domainRotate);\n    }\n\n    function domainRotate(selection) {\n      switch (options.label.rotate) {\n        case 'right':\n          selection.attr('transform', function (d) {\n            var s = 'rotate(90), ';\n            switch (options.label.position) {\n              case 'right':\n                s += 'translate(-' + w(d) + ' , -' + w(d) + ')';\n                break;\n              case 'left':\n                s += 'translate(0, -' + self.domainHorizontalLabelWidth + ')';\n                break;}\n\n\n            return s;\n          });\n          break;\n        case 'left':\n          selection.attr('transform', function (d) {\n            var s = 'rotate(270), ';\n            switch (options.label.position) {\n              case 'right':\n                s +=\n                'translate(-' + (\n                w(d) + self.domainHorizontalLabelWidth) +\n                ' , ' +\n                w(d) +\n                ')';\n                break;\n              case 'left':\n                s +=\n                'translate(-' +\n                self.domainHorizontalLabelWidth +\n                ' , ' +\n                self.domainHorizontalLabelWidth +\n                ')';\n                break;}\n\n\n            return s;\n          });\n          break;}\n\n    }\n\n    // =========================================================================//\n    // PAINTING DOMAIN SUBDOMAIN CONTENT                    //\n    // =========================================================================//\n    if (options.subDomainTextFormat !== null) {\n      rect.\n      append('text').\n      attr('class', function (d) {\n        return 'subdomain-text' + self.getHighlightClassName(d.t);\n      }).\n      attr('x', function (d) {\n        return self.positionSubDomainX(d.t) + options.cellSize / 2;\n      }).\n      attr('y', function (d) {\n        return self.positionSubDomainY(d.t) + options.cellSize / 2;\n      }).\n      attr('text-anchor', 'middle').\n      attr('dominant-baseline', 'central').\n      text(function (d) {\n        return self.formatDate(new Date(d.t), options.subDomainTextFormat);\n      });\n    }\n\n    // =========================================================================//\n    // ANIMATION                                //\n    // =========================================================================//\n\n    if (navigationDir !== false) {\n      domainSvg.\n      transition().\n      duration(options.animationDuration).\n      attr('x', function (d) {\n        return options.verticalOrientation ?\n        0 :\n        self.domainPosition.getPosition(d);\n      }).\n      attr('y', function (d) {\n        return options.verticalOrientation ?\n        self.domainPosition.getPosition(d) :\n        0;\n      });\n    }\n\n    var tempWidth = self.graphDim.width;\n    var tempHeight = self.graphDim.height;\n\n    if (options.verticalOrientation) {\n      self.graphDim.height += enteringDomainDim - exitingDomainDim;\n    } else {\n      self.graphDim.width += enteringDomainDim - exitingDomainDim;\n    }\n\n    // At the time of exit, domainsWidth and domainsHeight already automatically shifted\n    domainSvg.\n    exit().\n    transition().\n    duration(options.animationDuration).\n    attr('x', function (d) {\n      if (options.verticalOrientation) {\n        return 0;\n      } else {\n        switch (navigationDir) {\n          case self.NAVIGATE_LEFT:\n            return Math.min(self.graphDim.width, tempWidth);\n          case self.NAVIGATE_RIGHT:\n            return -w(d, true);}\n\n      }\n    }).\n    attr('y', function (d) {\n      if (options.verticalOrientation) {\n        switch (navigationDir) {\n          case self.NAVIGATE_LEFT:\n            return Math.min(self.graphDim.height, tempHeight);\n          case self.NAVIGATE_RIGHT:\n            return -h(d, true);}\n\n      } else {\n        return 0;\n      }\n    }).\n    remove();\n\n    // Resize the root container\n    self.resize();\n  };\n};\n\nCalHeatMap.prototype = {\n  /**\r\n   * Validate and merge user settings with default settings\r\n   *\r\n   * @param  {object} settings User settings\r\n   * @return {bool} False if settings contains error\r\n   */\n  /* jshint maxstatements:false */\n  init: function (settings) {\n    'use strict';\n\n    var parent = this;\n\n    var options = parent.options = mergeRecursive(parent.options, settings);\n\n    // Fatal errors\n    // Stop script execution on error\n    validateDomainType();\n    validateSelector(options.itemSelector, false, 'itemSelector');\n\n    if (parent.allowedDataType.indexOf(options.dataType) === -1) {\n      throw new Error(\n      \"The data type '\" + options.dataType + \"' is not valid data type\");\n\n    }\n\n    if (d3.select(options.itemSelector)[0][0] === null) {\n      throw new Error(\n      \"The node '\" +\n      options.itemSelector +\n      \"' specified in itemSelector does not exists\");\n\n    }\n\n    try {\n      validateSelector(options.nextSelector, true, 'nextSelector');\n      validateSelector(options.previousSelector, true, 'previousSelector');\n    } catch (error) {\n      console.log(error.message);\n      return false;\n    }\n\n    // If other settings contains error, will fallback to default\n\n    if (!settings.hasOwnProperty('subDomain')) {\n      this.options.subDomain = getOptimalSubDomain(settings.domain);\n    }\n\n    if (\n    typeof options.itemNamespace !== 'string' ||\n    options.itemNamespace === '')\n    {\n      console.log(\n      'itemNamespace can not be empty, falling back to cal-heatmap');\n\n      options.itemNamespace = 'cal-heatmap';\n    }\n\n    // Don't touch these settings\n    var s = [\n    'data',\n    'onComplete',\n    'onClick',\n    'afterLoad',\n    'afterLoadData',\n    'afterLoadPreviousDomain',\n    'afterLoadNextDomain',\n    'afterUpdate'];\n\n\n    for (var k in s) {\n      if (settings.hasOwnProperty(s[k])) {\n        options[s[k]] = settings[s[k]];\n      }\n    }\n\n    options.subDomainDateFormat =\n    typeof options.subDomainDateFormat === 'string' ||\n    typeof options.subDomainDateFormat === 'function' ?\n    options.subDomainDateFormat :\n    this._domainType[options.subDomain].format.date;\n    options.domainLabelFormat =\n    typeof options.domainLabelFormat === 'string' ||\n    typeof options.domainLabelFormat === 'function' ?\n    options.domainLabelFormat :\n    this._domainType[options.domain].format.legend;\n    options.subDomainTextFormat =\n    typeof options.subDomainTextFormat === 'string' &&\n    options.subDomainTextFormat !== '' ||\n    typeof options.subDomainTextFormat === 'function' ?\n    options.subDomainTextFormat :\n    null;\n    options.domainMargin = expandMarginSetting(options.domainMargin);\n    options.legendMargin = expandMarginSetting(options.legendMargin);\n    options.highlight = parent.expandDateSetting(options.highlight);\n    options.itemName = expandItemName(options.itemName);\n    options.colLimit = parseColLimit(options.colLimit);\n    options.rowLimit = parseRowLimit(options.rowLimit);\n    if (!settings.hasOwnProperty('legendMargin')) {\n      autoAddLegendMargin();\n    }\n    autoAlignLabel();\n\n    /**\r\n     * Validate that a queryString is valid\r\n     *\r\n     * @param  {Element|string|bool} selector   The queryString to test\r\n     * @param  {bool}  canBeFalse  Whether false is an accepted and valid value\r\n     * @param  {string} name    Name of the tested selector\r\n     * @throws {Error}        If the selector is not valid\r\n     * @return {bool}        True if the selector is a valid queryString\r\n     */\n    function validateSelector(selector, canBeFalse, name) {\n      if (\n      (canBeFalse && selector === false ||\n      selector instanceof Element ||\n      typeof selector === 'string') &&\n      selector !== '')\n      {\n        return true;\n      }\n      throw new Error('The ' + name + ' is not valid');\n    }\n\n    /**\r\n     * Return the optimal subDomain for the specified domain\r\n     *\r\n     * @param  {string} domain a domain name\r\n     * @return {string}        the subDomain name\r\n     */\n    function getOptimalSubDomain(domain) {\n      switch (domain) {\n        case 'year':\n          return 'month';\n        case 'month':\n          return 'day';\n        case 'week':\n          return 'day';\n        case 'day':\n          return 'hour';\n        default:\n          return 'min';}\n\n    }\n\n    /**\r\n     * Ensure that the domain and subdomain are valid\r\n     *\r\n     * @throw {Error} when domain or subdomain are not valid\r\n     * @return {bool} True if domain and subdomain are valid and compatible\r\n     */\n    function validateDomainType() {\n      if (\n      !parent._domainType.hasOwnProperty(options.domain) ||\n      options.domain === 'min' ||\n      options.domain.substring(0, 2) === 'x_')\n      {\n        throw new Error(\"The domain '\" + options.domain + \"' is not valid\");\n      }\n\n      if (\n      !parent._domainType.hasOwnProperty(options.subDomain) ||\n      options.subDomain === 'year')\n      {\n        throw new Error(\n        \"The subDomain '\" + options.subDomain + \"' is not valid\");\n\n      }\n\n      if (\n      parent._domainType[options.domain].level <=\n      parent._domainType[options.subDomain].level)\n      {\n        throw new Error(\n        \"'\" +\n        options.subDomain +\n        \"' is not a valid subDomain to '\" +\n        options.domain +\n        \"'\");\n\n      }\n\n      return true;\n    }\n\n    /**\r\n     * Fine-tune the label alignement depending on its position\r\n     *\r\n     * @return void\r\n     */\n    function autoAlignLabel() {\n      // Auto-align label, depending on it's position\n      if (\n      !settings.hasOwnProperty('label') ||\n      settings.hasOwnProperty('label') &&\n      !settings.label.hasOwnProperty('align'))\n      {\n        switch (options.label.position) {\n          case 'left':\n            options.label.align = 'right';\n            break;\n          case 'right':\n            options.label.align = 'left';\n            break;\n          default:\n            options.label.align = 'center';}\n\n\n        if (options.label.rotate === 'left') {\n          options.label.align = 'right';\n        } else if (options.label.rotate === 'right') {\n          options.label.align = 'left';\n        }\n      }\n\n      if (\n      !settings.hasOwnProperty('label') ||\n      settings.hasOwnProperty('label') &&\n      !settings.label.hasOwnProperty('offset'))\n      {\n        if (\n        options.label.position === 'left' ||\n        options.label.position === 'right')\n        {\n          options.label.offset = {\n            x: 10,\n            y: 15 };\n\n        }\n      }\n    }\n\n    /**\r\n     * If not specified, add some margin around the legend depending on its position\r\n     *\r\n     * @return void\r\n     */\n    function autoAddLegendMargin() {\n      switch (options.legendVerticalPosition) {\n        case 'top':\n          options.legendMargin[2] = parent.DEFAULT_LEGEND_MARGIN;\n          break;\n        case 'bottom':\n          options.legendMargin[0] = parent.DEFAULT_LEGEND_MARGIN;\n          break;\n        case 'middle':\n        case 'center':\n          options.legendMargin[\n          options.legendHorizontalPosition === 'right' ? 3 : 1] =\n          parent.DEFAULT_LEGEND_MARGIN;}\n\n    }\n\n    /**\r\n     * Expand a number of an array of numbers to an usable 4 values array\r\n     *\r\n     * @param  {integer|array} value\r\n     * @return {array}        array\r\n     */\n    function expandMarginSetting(value) {\n      if (typeof value === 'number') {\n        value = [value];\n      }\n\n      if (!Array.isArray(value)) {\n        console.log('Margin only takes an integer or an array of integers');\n        value = [0];\n      }\n\n      switch (value.length) {\n        case 1:\n          return [value[0], value[0], value[0], value[0]];\n        case 2:\n          return [value[0], value[1], value[0], value[1]];\n        case 3:\n          return [value[0], value[1], value[2], value[1]];\n        case 4:\n          return value;\n        default:\n          return value.slice(0, 4);}\n\n    }\n\n    /**\r\n     * Convert a string to an array like [singular-form, plural-form]\r\n     *\r\n     * @param  {string|array} value Date to convert\r\n     * @return {array}       An array like [singular-form, plural-form]\r\n     */\n    function expandItemName(value) {\n      if (typeof value === 'string') {\n        return [value, value + (value !== '' ? 's' : '')];\n      }\n\n      if (Array.isArray(value)) {\n        if (value.length === 1) {\n          return [value[0], value[0] + 's'];\n        } else if (value.length > 2) {\n          return value.slice(0, 2);\n        }\n\n        return value;\n      }\n\n      return ['item', 'items'];\n    }\n\n    function parseColLimit(value) {\n      return value > 0 ? value : null;\n    }\n\n    function parseRowLimit(value) {\n      if (value > 0 && options.colLimit > 0) {\n        console.log(\n        'colLimit and rowLimit are mutually exclusive, rowLimit will be ignored');\n\n        return null;\n      }\n      return value > 0 ? value : null;\n    }\n\n    return this._init();\n  },\n\n  /**\r\n   * Convert a keyword or an array of keyword/date to an array of date objects\r\n   *\r\n   * @param  {string|array|Date} value Data to convert\r\n   * @return {array}       An array of Dates\r\n   */\n  expandDateSetting: function (value) {\n    'use strict';\n\n    if (!Array.isArray(value)) {\n      value = [value];\n    }\n\n    return value.\n    map(function (data) {\n      if (data === 'now') {\n        return new Date();\n      }\n      if (data instanceof Date) {\n        return data;\n      }\n      return false;\n    }).\n    filter(function (d) {\n      return d !== false;\n    });\n  },\n\n  /**\r\n   * Fill the calendar by coloring the cells\r\n   *\r\n   * @param array svg An array of html node to apply the transformation to (optional)\r\n   *                  It's used to limit the painting to only a subset of the calendar\r\n   * @return void\r\n   */\n  fill: function (svg) {\n    'use strict';\n\n    var parent = this;\n    var options = parent.options;\n\n    if (arguments.length === 0) {\n      svg = parent.root.selectAll('.graph-domain');\n    }\n\n    var rect = svg.\n    selectAll('svg').\n    selectAll('g').\n    data(function (d) {\n      return parent._domains.get(d);\n    });\n    /**\r\n     * Colorize the cell via a style attribute if enabled\r\n     */\n    function addStyle(element) {\n      if (parent.legendScale === null) {\n        return false;\n      }\n\n      element.attr('fill', function (d) {\n        if (\n        d.v === null &&\n        options.hasOwnProperty('considerMissingDataAsZero') &&\n        !options.considerMissingDataAsZero)\n        {\n          if (options.legendColors.hasOwnProperty('base')) {\n            return options.legendColors.base;\n          }\n        }\n\n        if (\n        options.legendColors !== null &&\n        options.legendColors.hasOwnProperty('empty') && (\n        d.v === 0 ||\n        d.v === null &&\n        options.hasOwnProperty('considerMissingDataAsZero') &&\n        options.considerMissingDataAsZero))\n        {\n          return options.legendColors.empty;\n        }\n\n        if (\n        d.v < 0 &&\n        options.legend[0] > 0 &&\n        options.legendColors !== null &&\n        options.legendColors.hasOwnProperty('overflow'))\n        {\n          return options.legendColors.overflow;\n        }\n\n        return parent.legendScale(\n        Math.min(d.v, options.legend[options.legend.length - 1]));\n\n      });\n    }\n\n    rect.\n    transition().\n    duration(options.animationDuration).\n    select('rect').\n    attr('class', function (d) {\n      var htmlClass = parent.getHighlightClassName(d.t).trim().split(' ');\n      var pastDate = parent.dateIsLessThan(d.t, new Date());\n      var sameDate = parent.dateIsEqual(d.t, new Date());\n\n      if (\n      parent.legendScale === null ||\n      d.v === null &&\n      options.hasOwnProperty('considerMissingDataAsZero') &&\n      !options.considerMissingDataAsZero &&\n      !options.legendColors.hasOwnProperty('base'))\n      {\n        htmlClass.push('graph-rect');\n      }\n\n      if (sameDate) {\n        htmlClass.push('now');\n      } else if (!pastDate) {\n        htmlClass.push('future');\n      }\n\n      if (d.v !== null) {\n        htmlClass.push(\n        parent.Legend.getClass(d.v, parent.legendScale === null));\n\n      } else if (options.considerMissingDataAsZero && pastDate) {\n        htmlClass.push(\n        parent.Legend.getClass(0, parent.legendScale === null));\n\n      }\n\n      if (options.onClick !== null) {\n        htmlClass.push('hover_cursor');\n      }\n\n      return htmlClass.join(' ');\n    }).\n    call(addStyle);\n\n    rect.\n    transition().\n    duration(options.animationDuration).\n    select('title').\n    text(function (d) {\n      return parent.getSubDomainTitle(d);\n    });\n\n    function formatSubDomainText(element) {\n      if (typeof options.subDomainTextFormat === 'function') {\n        element.text(function (d) {\n          return options.subDomainTextFormat(d.t, d.v);\n        });\n      }\n    }\n\n    /**\r\n     * Change the subDomainText class if necessary\r\n     * Also change the text, e.g when text is representing the value\r\n     * instead of the date\r\n     */\n    rect.\n    transition().\n    duration(options.animationDuration).\n    select('text').\n    attr('class', function (d) {\n      return 'subdomain-text' + parent.getHighlightClassName(d.t);\n    }).\n    call(formatSubDomainText).\n    attr('fill', (d) => {\n      if (!d.v) return '#000';\n      const rgb = parent.legendScale(\n      Math.min(d.v, options.legend[options.legend.length - 1]));\n\n      return (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_1__.getContrastingColor)(rgb, 135);\n    });\n  },\n\n  /**\r\n   * Sprintf like function.\r\n   * Replaces placeholders {0} in string with values from provided object.\r\n   *\r\n   * @param string formatted String containing placeholders.\r\n   * @param object args Object with properties to replace placeholders in string.\r\n   *\r\n   * @return String\r\n   */\n  formatStringWithObject: function (formatted, args) {\n    'use strict';\n    for (var prop in args) {\n      if (args.hasOwnProperty(prop)) {\n        var regexp = new RegExp('\\\\{' + prop + '\\\\}', 'gi');\n        formatted = formatted.replace(regexp, args[prop]);\n      }\n    }\n    return formatted;\n  },\n\n  // =========================================================================//\n  // EVENTS CALLBACK                              //\n  // =========================================================================//\n\n  /**\r\n   * Helper method for triggering event callback\r\n   *\r\n   * @param  string  eventName       Name of the event to trigger\r\n   * @param  array  successArgs     List of argument to pass to the callback\r\n   * @param  boolean  skip      Whether to skip the event triggering\r\n   * @return mixed  True when the triggering was skipped, false on error, else the callback function\r\n   */\n  triggerEvent: function (eventName, successArgs, skip) {\n    'use strict';\n\n    if (arguments.length === 3 && skip || this.options[eventName] === null) {\n      return true;\n    }\n\n    if (typeof this.options[eventName] === 'function') {\n      if (typeof successArgs === 'function') {\n        successArgs = successArgs();\n      }\n      return this.options[eventName].apply(this, successArgs);\n    } else {\n      console.log('Provided callback for ' + eventName + ' is not a function.');\n      return false;\n    }\n  },\n\n  /**\r\n   * Event triggered on a mouse click on a subDomain cell\r\n   *\r\n   * @param  Date    d    Date of the subdomain block\r\n   * @param  int    itemNb  Number of items in that date\r\n   */\n  onClick: function (d, itemNb) {\n    'use strict';\n\n    return this.triggerEvent('onClick', [d, itemNb]);\n  },\n\n  /**\r\n   * Event triggered after drawing the calendar, byt before filling it with data\r\n   */\n  afterLoad: function () {\n    'use strict';\n\n    return this.triggerEvent('afterLoad');\n  },\n\n  /**\r\n   * Event triggered after completing drawing and filling the calendar\r\n   */\n  onComplete: function () {\n    'use strict';\n\n    var response = this.triggerEvent('onComplete', [], this._completed);\n    this._completed = true;\n    return response;\n  },\n\n  /**\r\n   * Event triggered after shifting the calendar one domain back\r\n   *\r\n   * @param  Date    start  Domain start date\r\n   * @param  Date    end    Domain end date\r\n   */\n  afterLoadPreviousDomain: function (start) {\n    'use strict';\n\n    var parent = this;\n    return this.triggerEvent('afterLoadPreviousDomain', function () {\n      var subDomain = parent.getSubDomain(start);\n      return [subDomain.shift(), subDomain.pop()];\n    });\n  },\n\n  /**\r\n   * Event triggered after shifting the calendar one domain above\r\n   *\r\n   * @param  Date    start  Domain start date\r\n   * @param  Date    end    Domain end date\r\n   */\n  afterLoadNextDomain: function (start) {\n    'use strict';\n\n    var parent = this;\n    return this.triggerEvent('afterLoadNextDomain', function () {\n      var subDomain = parent.getSubDomain(start);\n      return [subDomain.shift(), subDomain.pop()];\n    });\n  },\n\n  /**\r\n   * Event triggered after loading the leftmost domain allowed by minDate\r\n   *\r\n   * @param  boolean  reached True if the leftmost domain was reached\r\n   */\n  onMinDomainReached: function (reached) {\n    'use strict';\n\n    this._minDomainReached = reached;\n    return this.triggerEvent('onMinDomainReached', [reached]);\n  },\n\n  /**\r\n   * Event triggered after loading the rightmost domain allowed by maxDate\r\n   *\r\n   * @param  boolean  reached True if the rightmost domain was reached\r\n   */\n  onMaxDomainReached: function (reached) {\n    'use strict';\n\n    this._maxDomainReached = reached;\n    return this.triggerEvent('onMaxDomainReached', [reached]);\n  },\n\n  checkIfMinDomainIsReached: function (date, upperBound) {\n    'use strict';\n\n    if (this.minDomainIsReached(date)) {\n      this.onMinDomainReached(true);\n    }\n\n    if (arguments.length === 2) {\n      if (this._maxDomainReached && !this.maxDomainIsReached(upperBound)) {\n        this.onMaxDomainReached(false);\n      }\n    }\n  },\n\n  checkIfMaxDomainIsReached: function (date, lowerBound) {\n    'use strict';\n\n    if (this.maxDomainIsReached(date)) {\n      this.onMaxDomainReached(true);\n    }\n\n    if (arguments.length === 2) {\n      if (this._minDomainReached && !this.minDomainIsReached(lowerBound)) {\n        this.onMinDomainReached(false);\n      }\n    }\n  },\n\n  afterUpdate: function () {\n    'use strict';\n\n    return this.triggerEvent('afterUpdate');\n  },\n\n  // =========================================================================//\n  // FORMATTER                                //\n  // =========================================================================//\n\n  formatNumber: d3.format(',g'),\n\n  formatDate: function (d, format) {\n    'use strict';\n\n    if (arguments.length < 2) {\n      format = 'title';\n    }\n\n    if (typeof format === 'function') {\n      return format(d);\n    } else {\n      var f = d3.time.format(format);\n      return f(d);\n    }\n  },\n\n  getSubDomainTitle: function (d) {\n    'use strict';\n\n    if (d.v === null && !this.options.considerMissingDataAsZero) {\n      return this.formatStringWithObject(\n      this.options.subDomainTitleFormat.empty,\n      {\n        date: this.formatDate(\n        new Date(d.t),\n        this.options.subDomainDateFormat) });\n\n\n\n    } else {\n      var value = d.v;\n      // Consider null as 0\n      if (value === null && this.options.considerMissingDataAsZero) {\n        value = 0;\n      }\n\n      return this.formatStringWithObject(\n      this.options.subDomainTitleFormat.filled,\n      {\n        count: this.formatNumber(value),\n        name: this.options.itemName[value !== 1 ? 1 : 0],\n        connector: this._domainType[this.options.subDomain].format.connector,\n        date: this.formatDate(\n        new Date(d.t),\n        this.options.subDomainDateFormat) });\n\n\n\n    }\n  },\n\n  // =========================================================================//\n  // DOMAIN NAVIGATION                            //\n  // =========================================================================//\n\n  /**\r\n   * Shift the calendar one domain forward\r\n   *\r\n   * The new domain is loaded only if it's not beyond maxDate\r\n   *\r\n   * @param int n Number of domains to load\r\n   * @return bool True if the next domain was loaded, else false\r\n   */\n  loadNextDomain: function (n) {\n    'use strict';\n\n    if (this._maxDomainReached || n === 0) {\n      return false;\n    }\n\n    var bound = this.loadNewDomains(\n    this.NAVIGATE_RIGHT,\n    this.getDomain(this.getNextDomain(), n));\n\n\n    this.afterLoadNextDomain(bound.end);\n    this.checkIfMaxDomainIsReached(this.getNextDomain().getTime(), bound.start);\n\n    return true;\n  },\n\n  /**\r\n   * Shift the calendar one domain backward\r\n   *\r\n   * The previous domain is loaded only if it's not beyond the minDate\r\n   *\r\n   * @param int n Number of domains to load\r\n   * @return bool True if the previous domain was loaded, else false\r\n   */\n  loadPreviousDomain: function (n) {\n    'use strict';\n\n    if (this._minDomainReached || n === 0) {\n      return false;\n    }\n\n    var bound = this.loadNewDomains(\n    this.NAVIGATE_LEFT,\n    this.getDomain(this.getDomainKeys()[0], -n).reverse());\n\n\n    this.afterLoadPreviousDomain(bound.start);\n    this.checkIfMinDomainIsReached(bound.start, bound.end);\n\n    return true;\n  },\n\n  loadNewDomains: function (direction, newDomains) {\n    'use strict';\n\n    var parent = this;\n    var backward = direction === this.NAVIGATE_LEFT;\n    var i = -1;\n    var total = newDomains.length;\n    var domains = this.getDomainKeys();\n\n    function buildSubDomain(d) {\n      return {\n        t: parent._domainType[parent.options.subDomain].extractUnit(d),\n        v: null };\n\n    }\n\n    // Remove out of bound domains from list of new domains to prepend\n    while (++i < total) {\n      if (backward && this.minDomainIsReached(newDomains[i])) {\n        newDomains = newDomains.slice(0, i + 1);\n        break;\n      }\n      if (!backward && this.maxDomainIsReached(newDomains[i])) {\n        newDomains = newDomains.slice(0, i);\n        break;\n      }\n    }\n\n    newDomains = newDomains.slice(-this.options.range);\n\n    for (i = 0, total = newDomains.length; i < total; i += 1) {\n      this._domains.set(\n      newDomains[i].getTime(),\n      this.getSubDomain(newDomains[i]).map(buildSubDomain));\n\n\n      this._domains.remove(backward ? domains.pop() : domains.shift());\n    }\n\n    domains = this.getDomainKeys();\n\n    if (backward) {\n      newDomains = newDomains.reverse();\n    }\n\n    this.paint(direction);\n\n    this.getDatas(\n    this.options.data,\n    newDomains[0],\n    this.getSubDomain(newDomains[newDomains.length - 1]).pop(),\n    function () {\n      parent.fill(parent.lastInsertedSvg);\n    });\n\n\n    return {\n      start: newDomains[backward ? 0 : 1],\n      end: domains[domains.length - 1] };\n\n  },\n\n  /**\r\n   * Return whether a date is inside the scope determined by maxDate\r\n   *\r\n   * @param int datetimestamp The timestamp in ms to test\r\n   * @return bool True if the specified date correspond to the calendar upper bound\r\n   */\n  maxDomainIsReached: function (datetimestamp) {\n    'use strict';\n\n    return (\n      this.options.maxDate !== null &&\n      this.options.maxDate.getTime() < datetimestamp);\n\n  },\n\n  /**\r\n   * Return whether a date is inside the scope determined by minDate\r\n   *\r\n   * @param int datetimestamp The timestamp in ms to test\r\n   * @return bool True if the specified date correspond to the calendar lower bound\r\n   */\n  minDomainIsReached: function (datetimestamp) {\n    'use strict';\n\n    return (\n      this.options.minDate !== null &&\n      this.options.minDate.getTime() >= datetimestamp);\n\n  },\n\n  /**\r\n   * Return the list of the calendar's domain timestamp\r\n   *\r\n   * @return Array a sorted array of timestamp\r\n   */\n  getDomainKeys: function () {\n    'use strict';\n\n    return this._domains.\n    keys().\n    map(function (d) {\n      return parseInt(d, 10);\n    }).\n    sort(function (a, b) {\n      return a - b;\n    });\n  },\n\n  // =========================================================================//\n  // POSITIONNING                                //\n  // =========================================================================//\n\n  positionSubDomainX: function (d) {\n    'use strict';\n\n    var index = this._domainType[this.options.subDomain].position.x(\n    new Date(d));\n\n    return index * this.options.cellSize + index * this.options.cellPadding;\n  },\n\n  positionSubDomainY: function (d) {\n    'use strict';\n\n    var index = this._domainType[this.options.subDomain].position.y(\n    new Date(d));\n\n    return index * this.options.cellSize + index * this.options.cellPadding;\n  },\n\n  getSubDomainColumnNumber: function (d) {\n    'use strict';\n\n    if (this.options.rowLimit > 0) {\n      var i = this._domainType[this.options.subDomain].maxItemNumber;\n      if (typeof i === 'function') {\n        i = i(d);\n      }\n      return Math.ceil(i / this.options.rowLimit);\n    }\n\n    var j = this._domainType[this.options.subDomain].defaultColumnNumber;\n    if (typeof j === 'function') {\n      j = j(d);\n    }\n    return this.options.colLimit || j;\n  },\n\n  getSubDomainRowNumber: function (d) {\n    'use strict';\n\n    if (this.options.colLimit > 0) {\n      var i = this._domainType[this.options.subDomain].maxItemNumber;\n      if (typeof i === 'function') {\n        i = i(d);\n      }\n      return Math.ceil(i / this.options.colLimit);\n    }\n\n    var j = this._domainType[this.options.subDomain].defaultRowNumber;\n    if (typeof j === 'function') {\n      j = j(d);\n    }\n    return this.options.rowLimit || j;\n  },\n\n  /**\r\n   * Return a classname if the specified date should be highlighted\r\n   *\r\n   * @param  timestamp date Date of the current subDomain\r\n   * @return String the highlight class\r\n   */\n  getHighlightClassName: function (d) {\n    'use strict';\n\n    d = new Date(d);\n\n    if (this.options.highlight.length > 0) {\n      for (var i in this.options.highlight) {\n        if (this.dateIsEqual(this.options.highlight[i], d)) {\n          return this.isNow(this.options.highlight[i]) ?\n          ' highlight-now' :\n          ' highlight';\n        }\n      }\n    }\n    return '';\n  },\n\n  /**\r\n   * Return whether the specified date is now,\r\n   * according to the type of subdomain\r\n   *\r\n   * @param  Date d The date to compare\r\n   * @return bool True if the date correspond to a subdomain cell\r\n   */\n  isNow: function (d) {\n    'use strict';\n\n    return this.dateIsEqual(d, new Date());\n  },\n\n  /**\r\n   * Return whether 2 dates are equals\r\n   * This function is subdomain-aware,\r\n   * and dates comparison are dependent of the subdomain\r\n   *\r\n   * @param  Date dateA First date to compare\r\n   * @param  Date dateB Secon date to compare\r\n   * @return bool true if the 2 dates are equals\r\n   */\n  /* jshint maxcomplexity: false */\n  dateIsEqual: function (dateA, dateB) {\n    'use strict';\n\n    if (!(dateA instanceof Date)) {\n      dateA = new Date(dateA);\n    }\n\n    if (!(dateB instanceof Date)) {\n      dateB = new Date(dateB);\n    }\n\n    switch (this.options.subDomain) {\n      case 'x_min':\n      case 'min':\n        return (\n          dateA.getFullYear() === dateB.getFullYear() &&\n          dateA.getMonth() === dateB.getMonth() &&\n          dateA.getDate() === dateB.getDate() &&\n          dateA.getHours() === dateB.getHours() &&\n          dateA.getMinutes() === dateB.getMinutes());\n\n      case 'x_hour':\n      case 'hour':\n        return (\n          dateA.getFullYear() === dateB.getFullYear() &&\n          dateA.getMonth() === dateB.getMonth() &&\n          dateA.getDate() === dateB.getDate() &&\n          dateA.getHours() === dateB.getHours());\n\n      case 'x_day':\n      case 'day':\n        return (\n          dateA.getFullYear() === dateB.getFullYear() &&\n          dateA.getMonth() === dateB.getMonth() &&\n          dateA.getDate() === dateB.getDate());\n\n      case 'x_week':\n      case 'week':\n        return (\n          dateA.getFullYear() === dateB.getFullYear() &&\n          this.getWeekNumber(dateA) === this.getWeekNumber(dateB));\n\n      case 'x_month':\n      case 'month':\n        return (\n          dateA.getFullYear() === dateB.getFullYear() &&\n          dateA.getMonth() === dateB.getMonth());\n\n      default:\n        return false;}\n\n  },\n\n  /**\r\n   * Returns wether or not dateA is less than or equal to dateB. This function is subdomain aware.\r\n   * Performs automatic conversion of values.\r\n   * @param dateA may be a number or a Date\r\n   * @param dateB may be a number or a Date\r\n   * @returns {boolean}\r\n   */\n  dateIsLessThan: function (dateA, dateB) {\n    'use strict';\n\n    if (!(dateA instanceof Date)) {\n      dateA = new Date(dateA);\n    }\n\n    if (!(dateB instanceof Date)) {\n      dateB = new Date(dateB);\n    }\n\n    function normalizedMillis(date, subdomain) {\n      switch (subdomain) {\n        case 'x_min':\n        case 'min':\n          return new Date(\n          date.getFullYear(),\n          date.getMonth(),\n          date.getDate(),\n          date.getHours(),\n          date.getMinutes()).\n          getTime();\n        case 'x_hour':\n        case 'hour':\n          return new Date(\n          date.getFullYear(),\n          date.getMonth(),\n          date.getDate(),\n          date.getHours()).\n          getTime();\n        case 'x_day':\n        case 'day':\n          return new Date(\n          date.getFullYear(),\n          date.getMonth(),\n          date.getDate()).\n          getTime();\n        case 'x_week':\n        case 'week':\n        case 'x_month':\n        case 'month':\n          return new Date(date.getFullYear(), date.getMonth()).getTime();\n        default:\n          return date.getTime();}\n\n    }\n\n    return (\n      normalizedMillis(dateA, this.options.subDomain) <\n      normalizedMillis(dateB, this.options.subDomain));\n\n  },\n\n  // =========================================================================//\n  // DATE COMPUTATION                              //\n  // =========================================================================//\n\n  /**\r\n   * Return the day of the year for the date\r\n   * @param  Date\r\n   * @return  int Day of the year [1,366]\r\n   */\n  getDayOfYear: d3.time.format('%j'),\n\n  /**\r\n   * Return the week number of the year\r\n   * Monday as the first day of the week\r\n   * @return int  Week number [0-53]\r\n   */\n  getWeekNumber: function (d) {\n    'use strict';\n\n    var f =\n    this.options.weekStartOnMonday === true ?\n    d3.time.format('%W') :\n    d3.time.format('%U');\n    return f(d);\n  },\n\n  /**\r\n   * Return the week number, relative to its month\r\n   *\r\n   * @param  int|Date d Date or timestamp in milliseconds\r\n   * @return int Week number, relative to the month [0-5]\r\n   */\n  getMonthWeekNumber: function (d) {\n    'use strict';\n\n    if (typeof d === 'number') {\n      d = new Date(d);\n    }\n\n    var monthFirstWeekNumber = this.getWeekNumber(\n    new Date(d.getFullYear(), d.getMonth()));\n\n    return this.getWeekNumber(d) - monthFirstWeekNumber - 1;\n  },\n\n  /**\r\n   * Return the number of weeks in the dates' year\r\n   *\r\n   * @param  int|Date d Date or timestamp in milliseconds\r\n   * @return int Number of weeks in the date's year\r\n   */\n  getWeekNumberInYear: function (d) {\n    'use strict';\n\n    if (typeof d === 'number') {\n      d = new Date(d);\n    }\n  },\n\n  /**\r\n   * Return the number of days in the date's month\r\n   *\r\n   * @param  int|Date d Date or timestamp in milliseconds\r\n   * @return int Number of days in the date's month\r\n   */\n  getDayCountInMonth: function (d) {\n    'use strict';\n\n    return this.getEndOfMonth(d).getDate();\n  },\n\n  /**\r\n   * Return the number of days in the date's year\r\n   *\r\n   * @param  int|Date d Date or timestamp in milliseconds\r\n   * @return int Number of days in the date's year\r\n   */\n  getDayCountInYear: function (d) {\n    'use strict';\n\n    if (typeof d === 'number') {\n      d = new Date(d);\n    }\n    return new Date(d.getFullYear(), 1, 29).getMonth() === 1 ? 366 : 365;\n  },\n\n  /**\r\n   * Get the weekday from a date\r\n   *\r\n   * Return the week day number (0-6) of a date,\r\n   * depending on whether the week start on monday or sunday\r\n   *\r\n   * @param  Date d\r\n   * @return int The week day number (0-6)\r\n   */\n  getWeekDay: function (d) {\n    'use strict';\n\n    if (this.options.weekStartOnMonday === false) {\n      return d.getDay();\n    }\n    return d.getDay() === 0 ? 6 : d.getDay() - 1;\n  },\n\n  /**\r\n   * Get the last day of the month\r\n   * @param  Date|int  d  Date or timestamp in milliseconds\r\n   * @return Date      Last day of the month\r\n   */\n  getEndOfMonth: function (d) {\n    'use strict';\n\n    if (typeof d === 'number') {\n      d = new Date(d);\n    }\n    return new Date(d.getFullYear(), d.getMonth() + 1, 0);\n  },\n\n  /**\r\n   *\r\n   * @param  Date date\r\n   * @param  int count\r\n   * @param  string step\r\n   * @return Date\r\n   */\n  jumpDate: function (date, count, step) {\n    'use strict';\n\n    var d = new Date(date);\n    switch (step) {\n      case 'hour':\n        d.setHours(d.getHours() + count);\n        break;\n      case 'day':\n        d.setHours(d.getHours() + count * 24);\n        break;\n      case 'week':\n        d.setHours(d.getHours() + count * 24 * 7);\n        break;\n      case 'month':\n        d.setMonth(d.getMonth() + count);\n        break;\n      case 'year':\n        d.setFullYear(d.getFullYear() + count);}\n\n\n    return new Date(d);\n  },\n\n  // =========================================================================//\n  // DOMAIN COMPUTATION                            //\n  // =========================================================================//\n\n  /**\r\n   * Return all the minutes between 2 dates\r\n   *\r\n   * @param  Date  d  date  A date\r\n   * @param  int|date  range  Number of minutes in the range, or a stop date\r\n   * @return array  An array of minutes\r\n   */\n  getMinuteDomain: function (d, range) {\n    'use strict';\n\n    var start = new Date(\n    d.getFullYear(),\n    d.getMonth(),\n    d.getDate(),\n    d.getHours());\n\n    var stop = null;\n    if (range instanceof Date) {\n      stop = new Date(\n      range.getFullYear(),\n      range.getMonth(),\n      range.getDate(),\n      range.getHours());\n\n    } else {\n      stop = new Date(+start + range * 1000 * 60);\n    }\n    return d3.time.minutes(Math.min(start, stop), Math.max(start, stop));\n  },\n\n  /**\r\n   * Return all the hours between 2 dates\r\n   *\r\n   * @param  Date  d  A date\r\n   * @param  int|date  range  Number of hours in the range, or a stop date\r\n   * @return array  An array of hours\r\n   */\n  getHourDomain: function (d, range) {\n    'use strict';\n\n    var start = new Date(\n    d.getFullYear(),\n    d.getMonth(),\n    d.getDate(),\n    d.getHours());\n\n    var stop = null;\n    if (range instanceof Date) {\n      stop = new Date(\n      range.getFullYear(),\n      range.getMonth(),\n      range.getDate(),\n      range.getHours());\n\n    } else {\n      stop = new Date(start);\n      stop.setHours(stop.getHours() + range);\n    }\n\n    var domains = d3.time.hours(Math.min(start, stop), Math.max(start, stop));\n\n    // Passing from DST to standard time\n    // If there are 25 hours, let's compress the duplicate hours\n    var i = 0;\n    var total = domains.length;\n    for (i = 0; i < total; i += 1) {\n      if (i > 0 && domains[i].getHours() === domains[i - 1].getHours()) {\n        this.DSTDomain.push(domains[i].getTime());\n        domains.splice(i, 1);\n        break;\n      }\n    }\n\n    // d3.time.hours is returning more hours than needed when changing\n    // from DST to standard time, because there is really 2 hours between\n    // 1am and 2am!\n    if (typeof range === 'number' && domains.length > Math.abs(range)) {\n      domains.splice(domains.length - 1, 1);\n    }\n\n    return domains;\n  },\n\n  /**\r\n   * Return all the days between 2 dates\r\n   *\r\n   * @param  Date    d    A date\r\n   * @param  int|date  range  Number of days in the range, or a stop date\r\n   * @return array  An array of weeks\r\n   */\n  getDayDomain: function (d, range) {\n    'use strict';\n\n    var start = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n    var stop = null;\n    if (range instanceof Date) {\n      stop = new Date(range.getFullYear(), range.getMonth(), range.getDate());\n    } else {\n      stop = new Date(start);\n      stop = new Date(stop.setDate(stop.getDate() + parseInt(range, 10)));\n    }\n\n    return d3.time.days(Math.min(start, stop), Math.max(start, stop));\n  },\n\n  /**\r\n   * Return all the weeks between 2 dates\r\n   *\r\n   * @param  Date  d  A date\r\n   * @param  int|date  range  Number of minutes in the range, or a stop date\r\n   * @return array  An array of weeks\r\n   */\n  getWeekDomain: function (d, range) {\n    'use strict';\n\n    var weekStart;\n\n    if (this.options.weekStartOnMonday === false) {\n      weekStart = new Date(\n      d.getFullYear(),\n      d.getMonth(),\n      d.getDate() - d.getDay());\n\n    } else {\n      if (d.getDay() === 1) {\n        weekStart = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      } else if (d.getDay() === 0) {\n        weekStart = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n        weekStart.setDate(weekStart.getDate() - 6);\n      } else {\n        weekStart = new Date(\n        d.getFullYear(),\n        d.getMonth(),\n        d.getDate() - d.getDay() + 1);\n\n      }\n    }\n\n    var endDate = new Date(weekStart);\n\n    var stop = range;\n    if (typeof range !== 'object') {\n      stop = new Date(endDate.setDate(endDate.getDate() + range * 7));\n    }\n\n    return this.options.weekStartOnMonday === true ?\n    d3.time.mondays(Math.min(weekStart, stop), Math.max(weekStart, stop)) :\n    d3.time.sundays(Math.min(weekStart, stop), Math.max(weekStart, stop));\n  },\n\n  /**\r\n   * Return all the months between 2 dates\r\n   *\r\n   * @param  Date    d    A date\r\n   * @param  int|date  range  Number of months in the range, or a stop date\r\n   * @return array  An array of months\r\n   */\n  getMonthDomain: function (d, range) {\n    'use strict';\n\n    var start = new Date(d.getFullYear(), d.getMonth());\n    var stop = null;\n    if (range instanceof Date) {\n      stop = new Date(range.getFullYear(), range.getMonth());\n    } else {\n      stop = new Date(start);\n      stop = stop.setMonth(stop.getMonth() + range);\n    }\n\n    return d3.time.months(Math.min(start, stop), Math.max(start, stop));\n  },\n\n  /**\r\n   * Return all the years between 2 dates\r\n   *\r\n   * @param  Date  d  date  A date\r\n   * @param  int|date  range  Number of minutes in the range, or a stop date\r\n   * @return array  An array of hours\r\n   */\n  getYearDomain: function (d, range) {\n    'use strict';\n\n    var start = new Date(d.getFullYear(), 0);\n    var stop = null;\n    if (range instanceof Date) {\n      stop = new Date(range.getFullYear(), 0);\n    } else {\n      stop = new Date(d.getFullYear() + range, 0);\n    }\n\n    return d3.time.years(Math.min(start, stop), Math.max(start, stop));\n  },\n\n  /**\r\n   * Get an array of domain start dates\r\n   *\r\n   * @param  int|Date date A random date included in the wanted domain\r\n   * @param  int|Date range Number of dates to get, or a stop date\r\n   * @return Array of dates\r\n   */\n  getDomain: function (date, range) {\n    'use strict';\n\n    if (typeof date === 'number') {\n      date = new Date(date);\n    }\n\n    if (arguments.length < 2) {\n      range = this.options.range;\n    }\n\n    switch (this.options.domain) {\n      case 'hour':\n        var domains = this.getHourDomain(date, range);\n\n        // Case where an hour is missing, when passing from standard time to DST\n        // Missing hour is perfectly acceptabl in subDomain, but not in domains\n        if (typeof range === 'number' && domains.length < range) {\n          if (range > 0) {\n            domains.push(this.getHourDomain(domains[domains.length - 1], 2)[1]);\n          } else {\n            domains.shift(this.getHourDomain(domains[0], -2)[0]);\n          }\n        }\n        return domains;\n      case 'day':\n        return this.getDayDomain(date, range);\n      case 'week':\n        return this.getWeekDomain(date, range);\n      case 'month':\n        return this.getMonthDomain(date, range);\n      case 'year':\n        return this.getYearDomain(date, range);}\n\n  },\n\n  /* jshint maxcomplexity: false */\n  getSubDomain: function (date) {\n    'use strict';\n\n    if (typeof date === 'number') {\n      date = new Date(date);\n    }\n\n    var parent = this;\n\n    /**\r\n     * @return int\r\n     */\n    var computeDaySubDomainSize = function (date, domain) {\n      switch (domain) {\n        case 'year':\n          return parent.getDayCountInYear(date);\n        case 'month':\n          return parent.getDayCountInMonth(date);\n        case 'week':\n          return 7;}\n\n    };\n\n    /**\r\n     * @return int\r\n     */\n    var computeMinSubDomainSize = function (date, domain) {\n      switch (domain) {\n        case 'hour':\n          return 60;\n        case 'day':\n          return 60 * 24;\n        case 'week':\n          return 60 * 24 * 7;}\n\n    };\n\n    /**\r\n     * @return int\r\n     */\n    var computeHourSubDomainSize = function (date, domain) {\n      switch (domain) {\n        case 'day':\n          return 24;\n        case 'week':\n          return 168;\n        case 'month':\n          return parent.getDayCountInMonth(date) * 24;}\n\n    };\n\n    /**\r\n     * @return int\r\n     */\n    var computeWeekSubDomainSize = function (date, domain) {\n      if (domain === 'month') {\n        var endOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n        var endWeekNb = parent.getWeekNumber(endOfMonth);\n        var startWeekNb = parent.getWeekNumber(\n        new Date(date.getFullYear(), date.getMonth()));\n\n\n        if (startWeekNb > endWeekNb) {\n          startWeekNb = 0;\n          endWeekNb += 1;\n        }\n\n        return endWeekNb - startWeekNb + 1;\n      } else if (domain === 'year') {\n        return parent.getWeekNumber(new Date(date.getFullYear(), 11, 31));\n      }\n    };\n\n    switch (this.options.subDomain) {\n      case 'x_min':\n      case 'min':\n        return this.getMinuteDomain(\n        date,\n        computeMinSubDomainSize(date, this.options.domain));\n\n      case 'x_hour':\n      case 'hour':\n        return this.getHourDomain(\n        date,\n        computeHourSubDomainSize(date, this.options.domain));\n\n      case 'x_day':\n      case 'day':\n        return this.getDayDomain(\n        date,\n        computeDaySubDomainSize(date, this.options.domain));\n\n      case 'x_week':\n      case 'week':\n        return this.getWeekDomain(\n        date,\n        computeWeekSubDomainSize(date, this.options.domain));\n\n      case 'x_month':\n      case 'month':\n        return this.getMonthDomain(date, 12);}\n\n  },\n\n  /**\r\n   * Get the n-th next domain after the calendar newest (rightmost) domain\r\n   * @param  int n\r\n   * @return Date The start date of the wanted domain\r\n   */\n  getNextDomain: function (n) {\n    'use strict';\n\n    if (arguments.length === 0) {\n      n = 1;\n    }\n    return this.getDomain(\n    this.jumpDate(this.getDomainKeys().pop(), n, this.options.domain),\n    1)[\n    0];\n  },\n\n  /**\r\n   * Get the n-th domain before the calendar oldest (leftmost) domain\r\n   * @param  int n\r\n   * @return Date The start date of the wanted domain\r\n   */\n  getPreviousDomain: function (n) {\n    'use strict';\n\n    if (arguments.length === 0) {\n      n = 1;\n    }\n    return this.getDomain(\n    this.jumpDate(this.getDomainKeys().shift(), -n, this.options.domain),\n    1)[\n    0];\n  },\n\n  // =========================================================================//\n  // DATAS                                  //\n  // =========================================================================//\n\n  /**\r\n   * Fetch and interpret data from the datasource\r\n   *\r\n   * @param string|object source\r\n   * @param Date startDate\r\n   * @param Date endDate\r\n   * @param function callback\r\n   * @param function|boolean afterLoad function used to convert the data into a json object. Use true to use the afterLoad callback\r\n   * @param updateMode\r\n   *\r\n   * @return mixed\r\n   * - True if there are no data to load\r\n   * - False if data are loaded asynchronously\r\n   */\n  getDatas: function (\n  source,\n  startDate,\n  endDate,\n  callback,\n  afterLoad,\n  updateMode)\n  {\n    'use strict';\n\n    var self = this;\n    if (arguments.length < 5) {\n      afterLoad = true;\n    }\n    if (arguments.length < 6) {\n      updateMode = this.APPEND_ON_UPDATE;\n    }\n    var _callback = function (error, data) {\n      if (afterLoad !== false) {\n        if (typeof afterLoad === 'function') {\n          data = afterLoad(data);\n        } else if (typeof self.options.afterLoadData === 'function') {\n          data = self.options.afterLoadData(data);\n        } else {\n          console.log('Provided callback for afterLoadData is not a function.');\n        }\n      } else if (\n      self.options.dataType === 'csv' ||\n      self.options.dataType === 'tsv')\n      {\n        data = this.interpretCSV(data);\n      }\n      self.parseDatas(data, updateMode, startDate, endDate);\n      if (typeof callback === 'function') {\n        callback();\n      }\n    };\n\n    switch (typeof source) {\n      case 'string':\n        if (source === '') {\n          _callback(null, {});\n          return true;\n        } else {\n          var url = this.parseURI(source, startDate, endDate);\n          var requestType = 'GET';\n          if (self.options.dataPostPayload !== null) {\n            requestType = 'POST';\n          }\n          var payload = null;\n          if (self.options.dataPostPayload !== null) {\n            payload = this.parseURI(\n            self.options.dataPostPayload,\n            startDate,\n            endDate);\n\n          }\n\n          var xhr = null;\n          switch (this.options.dataType) {\n            case 'json':\n              xhr = d3.json(url);\n              break;\n            case 'csv':\n              xhr = d3.csv(url);\n              break;\n            case 'tsv':\n              xhr = d3.tsv(url);\n              break;\n            case 'txt':\n              xhr = d3.text(url, 'text/plain');\n              break;}\n\n\n          // jshint maxdepth:5\n          if (self.options.dataRequestHeaders !== null) {\n            for (var header in self.options.dataRequestHeaders) {\n              if (self.options.dataRequestHeaders.hasOwnProperty(header)) {\n                xhr.header(header, self.options.dataRequestHeaders[header]);\n              }\n            }\n          }\n\n          xhr.send(requestType, payload, _callback);\n        }\n        return false;\n      case 'object':\n        if (source === Object(source)) {\n          _callback(null, source);\n          return false;\n        }\n      /* falls through */\n      default:\n        _callback(null, {});\n        return true;}\n\n  },\n\n  /**\r\n   * Populate the calendar internal data\r\n   *\r\n   * @param object data\r\n   * @param constant updateMode\r\n   * @param Date startDate\r\n   * @param Date endDate\r\n   *\r\n   * @return void\r\n   */\n  parseDatas: function (data, updateMode, startDate, endDate) {\n    'use strict';\n\n    if (updateMode === this.RESET_ALL_ON_UPDATE) {\n      this._domains.forEach(function (key, value) {\n        value.forEach(function (element, index, array) {\n          array[index].v = null;\n        });\n      });\n    }\n\n    var temp = {};\n\n    var extractTime = function (d) {\n      return d.t;\n    };\n\n    /*jshint forin:false */\n    for (var d in data) {\n      var date = new Date(d * 1000);\n      var domainUnit = this.getDomain(date)[0].getTime();\n      // The current data belongs to a domain that was compressed\n      // Compress the data for the two duplicate hours into the same hour\n      if (this.DSTDomain.indexOf(domainUnit) >= 0) {\n        // Re-assign all data to the first or the second duplicate hours\n        // depending on which is visible\n        if (this._domains.has(domainUnit - 3600 * 1000)) {\n          domainUnit -= 3600 * 1000;\n        }\n      }\n\n      // Skip if data is not relevant to current domain\n      if (\n      isNaN(d) ||\n      !data.hasOwnProperty(d) ||\n      !this._domains.has(domainUnit) ||\n      !(domainUnit >= +startDate && domainUnit < +endDate))\n      {\n        continue;\n      }\n\n      var subDomainsData = this._domains.get(domainUnit);\n\n      if (!temp.hasOwnProperty(domainUnit)) {\n        temp[domainUnit] = subDomainsData.map(extractTime);\n      }\n\n      var index = temp[domainUnit].indexOf(\n      this._domainType[this.options.subDomain].extractUnit(date));\n\n\n      if (updateMode === this.RESET_SINGLE_ON_UPDATE) {\n        subDomainsData[index].v = data[d];\n      } else {\n        if (!isNaN(subDomainsData[index].v)) {\n          subDomainsData[index].v += data[d];\n        } else {\n          subDomainsData[index].v = data[d];\n        }\n      }\n    }\n  },\n\n  parseURI: function (str, startDate, endDate) {\n    'use strict';\n\n    // Use a timestamp in seconds\n    str = str.replace(/\\{\\{t:start\\}\\}/g, startDate.getTime() / 1000);\n    str = str.replace(/\\{\\{t:end\\}\\}/g, endDate.getTime() / 1000);\n\n    // Use a string date, following the ISO-8601\n    str = str.replace(/\\{\\{d:start\\}\\}/g, startDate.toISOString());\n    str = str.replace(/\\{\\{d:end\\}\\}/g, endDate.toISOString());\n\n    return str;\n  },\n\n  interpretCSV: function (data) {\n    'use strict';\n\n    var d = {};\n    var keys = Object.keys(data[0]);\n    var i, total;\n    for (i = 0, total = data.length; i < total; i += 1) {\n      d[data[i][keys[0]]] = +data[i][keys[1]];\n    }\n    return d;\n  },\n\n  /**\r\n   * Handle the calendar layout and dimension\r\n   *\r\n   * Expand and shrink the container depending on its children dimension\r\n   * Also rearrange the children position depending on their dimension,\r\n   * and the legend position\r\n   *\r\n   * @return void\r\n   */\n  resize: function () {\n    'use strict';\n\n    var parent = this;\n    var options = parent.options;\n    var legendWidth = options.displayLegend ?\n    parent.Legend.getDim('width') +\n    options.legendMargin[1] +\n    options.legendMargin[3] :\n    0;\n    var legendHeight = options.displayLegend ?\n    parent.Legend.getDim('height') +\n    options.legendMargin[0] +\n    options.legendMargin[2] :\n    0;\n\n    var graphWidth =\n    parent.graphDim.width - options.domainGutter - options.cellPadding;\n    var graphHeight =\n    parent.graphDim.height - options.domainGutter - options.cellPadding;\n\n    this.root.\n    transition().\n    duration(options.animationDuration).\n    attr('width', function () {\n      if (\n      options.legendVerticalPosition === 'middle' ||\n      options.legendVerticalPosition === 'center')\n      {\n        return graphWidth + legendWidth;\n      }\n      return Math.max(graphWidth, legendWidth);\n    }).\n    attr('height', function () {\n      if (\n      options.legendVerticalPosition === 'middle' ||\n      options.legendVerticalPosition === 'center')\n      {\n        return Math.max(graphHeight, legendHeight);\n      }\n      return graphHeight + legendHeight;\n    });\n\n    this.root.\n    select('.graph').\n    transition().\n    duration(options.animationDuration).\n    attr('y', function () {\n      if (options.legendVerticalPosition === 'top') {\n        return legendHeight;\n      }\n      return 0;\n    }).\n    attr('x', function () {\n      if (\n      (options.legendVerticalPosition === 'middle' ||\n      options.legendVerticalPosition === 'center') &&\n      options.legendHorizontalPosition === 'left')\n      {\n        return legendWidth;\n      }\n      return 0;\n    });\n  },\n\n  // =========================================================================//\n  // PUBLIC API                                //\n  // =========================================================================//\n\n  /**\r\n   * Shift the calendar forward\r\n   */\n  next: function (n) {\n    'use strict';\n\n    if (arguments.length === 0) {\n      n = 1;\n    }\n    return this.loadNextDomain(n);\n  },\n\n  /**\r\n   * Shift the calendar backward\r\n   */\n  previous: function (n) {\n    'use strict';\n\n    if (arguments.length === 0) {\n      n = 1;\n    }\n    return this.loadPreviousDomain(n);\n  },\n\n  /**\r\n   * Jump directly to a specific date\r\n   *\r\n   * JumpTo will scroll the calendar until the wanted domain with the specified\r\n   * date is visible. Unless you set reset to true, the wanted domain\r\n   * will not necessarily be the first (leftmost) domain of the calendar.\r\n   *\r\n   * @param Date date Jump to the domain containing that date\r\n   * @param bool reset Whether the wanted domain should be the first domain of the calendar\r\n   * @param bool True of the calendar was scrolled\r\n   */\n  jumpTo: function (date, reset) {\n    'use strict';\n\n    if (arguments.length < 2) {\n      reset = false;\n    }\n    var domains = this.getDomainKeys();\n    var firstDomain = domains[0];\n    var lastDomain = domains[domains.length - 1];\n\n    if (date < firstDomain) {\n      return this.loadPreviousDomain(this.getDomain(firstDomain, date).length);\n    } else {\n      if (reset) {\n        return this.loadNextDomain(this.getDomain(firstDomain, date).length);\n      }\n\n      if (date > lastDomain) {\n        return this.loadNextDomain(this.getDomain(lastDomain, date).length);\n      }\n    }\n\n    return false;\n  },\n\n  /**\r\n   * Navigate back to the start date\r\n   *\r\n   * @since  3.3.8\r\n   * @return void\r\n   */\n  rewind: function () {\n    'use strict';\n\n    this.jumpTo(this.options.start, true);\n  },\n\n  /**\r\n   * Update the calendar with new data\r\n   *\r\n   * @param  object|string    dataSource    The calendar's datasource, same type as this.options.data\r\n   * @param  boolean|function    afterLoad    Whether to execute afterLoad() on the data. Pass directly a function\r\n   * if you don't want to use the afterLoad() callback\r\n   */\n  update: function (dataSource, afterLoad, updateMode) {\n    'use strict';\n\n    if (arguments.length === 0) {\n      dataSource = this.options.data;\n    }\n    if (arguments.length < 2) {\n      afterLoad = true;\n    }\n    if (arguments.length < 3) {\n      updateMode = this.RESET_ALL_ON_UPDATE;\n    }\n\n    var domains = this.getDomainKeys();\n    var self = this;\n    this.getDatas(\n    dataSource,\n    new Date(domains[0]),\n    this.getSubDomain(domains[domains.length - 1]).pop(),\n    function () {\n      self.fill();\n      self.afterUpdate();\n    },\n    afterLoad,\n    updateMode);\n\n  },\n\n  /**\r\n   * Set the legend\r\n   *\r\n   * @param array legend an array of integer, representing the different threshold value\r\n   * @param array colorRange an array of 2 hex colors, for the minimum and maximum colors\r\n   */\n  setLegend: function () {\n    'use strict';\n\n    var oldLegend = this.options.legend.slice(0);\n    if (arguments.length >= 1 && Array.isArray(arguments[0])) {\n      this.options.legend = arguments[0];\n    }\n    if (arguments.length >= 2) {\n      if (Array.isArray(arguments[1]) && arguments[1].length >= 2) {\n        this.options.legendColors = [arguments[1][0], arguments[1][1]];\n      } else {\n        this.options.legendColors = arguments[1];\n      }\n    }\n\n    if (\n    arguments.length > 0 && !arrayEquals(oldLegend, this.options.legend) ||\n    arguments.length >= 2)\n    {\n      this.Legend.buildColors();\n      this.fill();\n    }\n\n    this.Legend.redraw(\n    this.graphDim.width -\n    this.options.domainGutter -\n    this.options.cellPadding);\n\n  },\n\n  /**\r\n   * Remove the legend\r\n   *\r\n   * @return bool False if there is no legend to remove\r\n   */\n  removeLegend: function () {\n    'use strict';\n\n    if (!this.options.displayLegend) {\n      return false;\n    }\n    this.options.displayLegend = false;\n    this.Legend.remove();\n    return true;\n  },\n\n  /**\r\n   * Display the legend\r\n   *\r\n   * @return bool False if the legend was already displayed\r\n   */\n  showLegend: function () {\n    'use strict';\n\n    if (this.options.displayLegend) {\n      return false;\n    }\n    this.options.displayLegend = true;\n    this.Legend.redraw(\n    this.graphDim.width -\n    this.options.domainGutter -\n    this.options.cellPadding);\n\n    return true;\n  },\n\n  /**\r\n   * Highlight dates\r\n   *\r\n   * Add a highlight class to a set of dates\r\n   *\r\n   * @since  3.3.5\r\n   * @param  array Array of dates to highlight\r\n   * @return bool True if dates were highlighted\r\n   */\n  highlight: function (args) {\n    'use strict';\n\n    if ((this.options.highlight = this.expandDateSetting(args)).length > 0) {\n      this.fill();\n      return true;\n    }\n    return false;\n  },\n\n  /**\r\n   * Destroy the calendar\r\n   *\r\n   * Usage: cal = cal.destroy();\r\n   *\r\n   * @since  3.3.6\r\n   * @param function A callback function to trigger after destroying the calendar\r\n   * @return null\r\n   */\n  destroy: function (callback) {\n    'use strict';\n\n    this.root.\n    transition().\n    duration(this.options.animationDuration).\n    attr('width', 0).\n    attr('height', 0).\n    remove().\n    each('end', function () {\n      if (typeof callback === 'function') {\n        callback();\n      } else if (typeof callback !== 'undefined') {\n        console.log('Provided callback for destroy() is not a function.');\n      }\n    });\n\n    return null;\n  },\n\n  getSVG: function () {\n    'use strict';\n\n    var styles = {\n      '.cal-heatmap-container': {},\n      '.graph': {},\n      '.graph-rect': {},\n      'rect.highlight': {},\n      'rect.now': {},\n      'rect.highlight-now': {},\n      'text.highlight': {},\n      'text.now': {},\n      'text.highlight-now': {},\n      '.domain-background': {},\n      '.graph-label': {},\n      '.subdomain-text': {},\n      '.q0': {},\n      '.qi': {} };\n\n\n    for (\n    var j = 1, total = this.options.legend.length + 1;\n    j <= total;\n    j += 1)\n    {\n      styles['.q' + j] = {};\n    }\n\n    var root = this.root;\n\n    var whitelistStyles = [\n    // SVG specific properties\n    'stroke',\n    'stroke-width',\n    'stroke-opacity',\n    'stroke-dasharray',\n    'stroke-dashoffset',\n    'stroke-linecap',\n    'stroke-miterlimit',\n    'fill',\n    'fill-opacity',\n    'fill-rule',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'alignement-baseline',\n    'baseline-shift',\n    'dominant-baseline',\n    'glyph-orientation-horizontal',\n    'glyph-orientation-vertical',\n    'kerning',\n    'text-anchor',\n    'shape-rendering',\n\n    // Text Specific properties\n    'text-transform',\n    'font-family',\n    'font',\n    'font-size',\n    'font-weight'];\n\n\n    var filterStyles = function (attribute, property, value) {\n      if (whitelistStyles.indexOf(property) !== -1) {\n        styles[attribute][property] = value;\n      }\n    };\n\n    var getElement = function (e) {\n      return root.select(e)[0][0];\n    };\n\n    /* jshint forin:false */\n    for (var element in styles) {\n      if (!styles.hasOwnProperty(element)) {\n        continue;\n      }\n\n      var dom = getElement(element);\n\n      if (dom === null) {\n        continue;\n      }\n\n      // The DOM Level 2 CSS way\n      /* jshint maxdepth: false */\n      if ('getComputedStyle' in window) {\n        var cs = getComputedStyle(dom, null);\n        if (cs.length !== 0) {\n          for (var i = 0; i < cs.length; i += 1) {\n            filterStyles(element, cs.item(i), cs.getPropertyValue(cs.item(i)));\n          }\n\n          // Opera workaround. Opera doesn\"t support `item`/`length`\n          // on CSSStyleDeclaration.\n        } else {\n          for (var k in cs) {\n            if (cs.hasOwnProperty(k)) {\n              filterStyles(element, k, cs[k]);\n            }\n          }\n        }\n\n        // The IE way\n      } else if ('currentStyle' in dom) {\n        var css = dom.currentStyle;\n        for (var p in css) {\n          filterStyles(element, p, css[p]);\n        }\n      }\n    }\n\n    var string =\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" ' +\n    'xmlns:xlink=\"http://www.w3.org/1999/xlink\"><style type=\"text/css\"><![CDATA[ ';\n\n    for (var style in styles) {\n      string += style + ' {\\n';\n      for (var l in styles[style]) {\n        string += '\\t' + l + ':' + styles[style][l] + ';\\n';\n      }\n      string += '}\\n';\n    }\n\n    string += ']]></style>';\n    string += new XMLSerializer().serializeToString(this.root[0][0]);\n    string += '</svg>';\n\n    return string;\n  } };\n\n\n// =========================================================================//\n// DOMAIN POSITION COMPUTATION                        //\n// =========================================================================//\n\n/**\r\n * Compute the position of a domain, relative to the calendar\r\n */\nvar DomainPosition = function () {\n  'use strict';\n\n  this.positions = d3.map();\n};\n\nDomainPosition.prototype.getPosition = function (d) {\n  'use strict';\n\n  return this.positions.get(d);\n};\n\nDomainPosition.prototype.getPositionFromIndex = function (i) {\n  'use strict';\n\n  var domains = this.getKeys();\n  return this.positions.get(domains[i]);\n};\n\nDomainPosition.prototype.getLast = function () {\n  'use strict';\n\n  var domains = this.getKeys();\n  return this.positions.get(domains[domains.length - 1]);\n};\n\nDomainPosition.prototype.setPosition = function (d, dim) {\n  'use strict';\n\n  this.positions.set(d, dim);\n};\n\nDomainPosition.prototype.shiftRightBy = function (exitingDomainDim) {\n  'use strict';\n\n  this.positions.forEach(function (key, value) {\n    this.set(key, value - exitingDomainDim);\n  });\n\n  var domains = this.getKeys();\n  this.positions.remove(domains[0]);\n};\n\nDomainPosition.prototype.shiftLeftBy = function (enteringDomainDim) {\n  'use strict';\n\n  this.positions.forEach(function (key, value) {\n    this.set(key, value + enteringDomainDim);\n  });\n\n  var domains = this.getKeys();\n  this.positions.remove(domains[domains.length - 1]);\n};\n\nDomainPosition.prototype.getKeys = function () {\n  'use strict';\n\n  return this.positions.keys().sort(function (a, b) {\n    return parseInt(a, 10) - parseInt(b, 10);\n  });\n};\n\n// =========================================================================//\n// LEGEND                                  //\n// =========================================================================//\n\nvar Legend = function (calendar) {\n  'use strict';\n\n  this.calendar = calendar;\n  this.computeDim();\n\n  if (calendar.options.legendColors !== null) {\n    this.buildColors();\n  }\n};\n\nLegend.prototype.computeDim = function () {\n  'use strict';\n\n  var options = this.calendar.options; // Shorter accessor for variable name mangling when minifying\n  this.dim = {\n    width:\n    options.legendCellSize * (options.legend.length + 1) +\n    options.legendCellPadding * options.legend.length,\n    height: options.legendCellSize };\n\n};\n\nLegend.prototype.remove = function () {\n  'use strict';\n\n  this.calendar.root.select('.graph-legend').remove();\n  this.calendar.resize();\n};\n\nLegend.prototype.redraw = function (width) {\n  'use strict';\n\n  if (!this.calendar.options.displayLegend) {\n    return false;\n  }\n\n  var parent = this;\n  var calendar = this.calendar;\n  var legend = calendar.root;\n  var legendItem;\n  var options = calendar.options; // Shorter accessor for variable name mangling when minifying\n\n  this.computeDim();\n\n  var _legend = options.legend.slice(0);\n  _legend.push(_legend[_legend.length - 1] + 1);\n\n  var legendElement = calendar.root.select('.graph-legend');\n  if (legendElement[0][0] !== null) {\n    legend = legendElement;\n    legendItem = legend.select('g').selectAll('rect').data(_legend);\n  } else {\n    // Creating the new legend DOM if it doesn't already exist\n    legend =\n    options.legendVerticalPosition === 'top' ?\n    legend.insert('svg', '.graph') :\n    legend.append('svg');\n\n    legend.attr('x', getLegendXPosition()).attr('y', getLegendYPosition());\n\n    legendItem = legend.\n    attr('class', 'graph-legend').\n    attr('height', parent.getDim('height')).\n    attr('width', parent.getDim('width')).\n    append('g').\n    selectAll().\n    data(_legend);\n  }\n\n  legendItem.\n  enter().\n  append('rect').\n  call(legendCellLayout).\n  attr('class', function (d) {\n    return calendar.Legend.getClass(d, calendar.legendScale === null);\n  }).\n  attr('fill-opacity', 0).\n  call(function (selection) {\n    if (\n    calendar.legendScale !== null &&\n    options.legendColors !== null &&\n    options.legendColors.hasOwnProperty('base'))\n    {\n      selection.attr('fill', options.legendColors.base);\n    }\n  }).\n  append('title');\n\n  legendItem.\n  exit().\n  transition().\n  duration(options.animationDuration).\n  attr('fill-opacity', 0).\n  remove();\n\n  legendItem.\n  transition().\n  delay(function (d, i) {\n    return options.animationDuration * i / 10;\n  }).\n  call(legendCellLayout).\n  attr('fill-opacity', 1).\n  call(function (element) {\n    element.attr('fill', function (d, i) {\n      if (calendar.legendScale === null) {\n        return '';\n      }\n\n      if (i === 0) {\n        return calendar.legendScale(d - 1);\n      }\n      return calendar.legendScale(options.legend[i - 1]);\n    });\n\n    element.attr('class', function (d) {\n      return calendar.Legend.getClass(d, calendar.legendScale === null);\n    });\n  });\n\n  function legendCellLayout(selection) {\n    selection.\n    attr('width', options.legendCellSize).\n    attr('height', options.legendCellSize).\n    attr('rx', options.legendCellRadius).\n    attr('ry', options.legendCellRadius).\n    attr('x', function (d, i) {\n      return i * (options.legendCellSize + options.legendCellPadding);\n    });\n  }\n\n  legendItem.select('title').text(function (d, i) {\n    if (i === 0) {\n      return calendar.formatStringWithObject(options.legendTitleFormat.lower, {\n        min: options.legend[i],\n        name: options.itemName[1] });\n\n    } else if (i === _legend.length - 1) {\n      return calendar.formatStringWithObject(options.legendTitleFormat.upper, {\n        max: options.legend[i - 1],\n        name: options.itemName[1] });\n\n    } else {\n      return calendar.formatStringWithObject(options.legendTitleFormat.inner, {\n        down: options.legend[i - 1],\n        up: options.legend[i],\n        name: options.itemName[1] });\n\n    }\n  });\n  legendItem.\n  on('mouseover', function (d) {\n    calendar.legendTip.show(d, this);\n  }).\n  on('mouseout', function () {\n    calendar.legendTip.hide();\n  });\n\n  legend.\n  transition().\n  duration(options.animationDuration).\n  attr('x', getLegendXPosition()).\n  attr('y', getLegendYPosition()).\n  attr('width', parent.getDim('width')).\n  attr('height', parent.getDim('height'));\n\n  legend.\n  select('g').\n  transition().\n  duration(options.animationDuration).\n  attr('transform', function () {\n    if (options.legendOrientation === 'vertical') {\n      return (\n        'rotate(90 ' +\n        options.legendCellSize / 2 +\n        ' ' +\n        options.legendCellSize / 2 +\n        ')');\n\n    }\n    return '';\n  });\n\n  function getLegendXPosition() {\n    switch (options.legendHorizontalPosition) {\n      case 'right':\n        if (\n        options.legendVerticalPosition === 'center' ||\n        options.legendVerticalPosition === 'middle')\n        {\n          return width + options.legendMargin[3];\n        }\n        return width - parent.getDim('width') - options.legendMargin[1];\n      case 'middle':\n      case 'center':\n        return Math.round(width / 2 - parent.getDim('width') / 2);\n      default:\n        return options.legendMargin[3];}\n\n  }\n\n  function getLegendYPosition() {\n    if (options.legendVerticalPosition === 'bottom') {\n      return (\n        calendar.graphDim.height +\n        options.legendMargin[0] -\n        options.domainGutter -\n        options.cellPadding);\n\n    }\n    return options.legendMargin[0];\n  }\n\n  calendar.resize();\n};\n\n/**\r\n * Return the dimension of the legend\r\n *\r\n * Takes into account rotation\r\n *\r\n * @param  string axis Width or height\r\n * @return int height or width in pixels\r\n */\nLegend.prototype.getDim = function (axis) {\n  'use strict';\n\n  var isHorizontal = this.calendar.options.legendOrientation === 'horizontal';\n\n  switch (axis) {\n    case 'width':\n      return this.dim[isHorizontal ? 'width' : 'height'];\n    case 'height':\n      return this.dim[isHorizontal ? 'height' : 'width'];}\n\n};\n\nLegend.prototype.buildColors = function () {\n  'use strict';\n\n  var options = this.calendar.options; // Shorter accessor for variable name mangling when minifying\n\n  if (options.legendColors === null) {\n    this.calendar.legendScale = null;\n    return false;\n  }\n\n  var _colorRange = [];\n\n  if (Array.isArray(options.legendColors)) {\n    _colorRange = options.legendColors;\n  } else if (\n  options.legendColors.hasOwnProperty('min') &&\n  options.legendColors.hasOwnProperty('max'))\n  {\n    _colorRange = [options.legendColors.min, options.legendColors.max];\n  } else {\n    options.legendColors = null;\n    return false;\n  }\n\n  var _legend = options.legend.slice(0);\n\n  if (_legend[0] > 0) {\n    _legend.unshift(0);\n  } else if (_legend[0] <= 0) {\n    // Let's guess the leftmost value, it we have to add one\n    _legend.unshift(\n    _legend[0] - (_legend[_legend.length - 1] - _legend[0]) / _legend.length);\n\n  }\n  var colorScale;\n  if (options.legendColors.hasOwnProperty('colorScale')) {\n    colorScale = options.legendColors.colorScale;\n  } else {\n    colorScale = d3.scale.\n    linear().\n    range(_colorRange).\n    interpolate(d3.interpolateHcl).\n    domain([d3.min(_legend), d3.max(_legend)]);\n  }\n\n  var legendColors = _legend.map(function (element) {\n    return colorScale(element);\n  });\n  this.calendar.legendScale = d3.scale.\n  threshold().\n  domain(options.legend).\n  range(legendColors);\n\n  return true;\n};\n\n/**\r\n * Return the classname on the legend for the specified value\r\n *\r\n * @param integer n Value associated to a date\r\n * @param bool withCssClass Whether to display the css class used to style the cell.\r\n *                          Disabling will allow styling directly via html fill attribute\r\n *\r\n * @return string Classname according to the legend\r\n */\nLegend.prototype.getClass = function (n, withCssClass) {\n  'use strict';\n\n  if (n === null || isNaN(n)) {\n    return '';\n  }\n\n  var index = [this.calendar.options.legend.length + 1];\n\n  for (\n  var i = 0, total = this.calendar.options.legend.length - 1;\n  i <= total;\n  i += 1)\n  {\n    if (this.calendar.options.legend[0] > 0 && n < 0) {\n      index = ['1', 'i'];\n      break;\n    }\n\n    if (n <= this.calendar.options.legend[i]) {\n      index = [i + 1];\n      break;\n    }\n  }\n\n  if (n === 0) {\n    index.push(0);\n  }\n\n  index.unshift('');\n  return (index.join(' r') + (withCssClass ? index.join(' q') : '')).trim();\n};\n\n/**\r\n * #source http://stackoverflow.com/a/383245/805649\r\n */\nfunction mergeRecursive(obj1, obj2) {\n  'use strict';\n\n  /*jshint forin:false */\n  for (var p in obj2) {\n    try {\n      // Property in destination object set; update its value.\n      if (obj2[p].constructor === Object) {\n        obj1[p] = mergeRecursive(obj1[p], obj2[p]);\n      } else {\n        obj1[p] = obj2[p];\n      }\n    } catch (e) {\n      // Property in destination object not set; create it and set its value.\n      obj1[p] = obj2[p];\n    }\n  }\n\n  return obj1;\n}\n\n/**\r\n * Check if 2 arrays are equals\r\n *\r\n * @link http://stackoverflow.com/a/14853974/805649\r\n * @param  array array the array to compare to\r\n * @return bool true of the 2 arrays are equals\r\n */\nfunction arrayEquals(arrayA, arrayB) {\n  'use strict';\n\n  // if the other array is a falsy value, return\n  if (!arrayB || !arrayA) {\n    return false;\n  }\n\n  // compare lengths - can save a lot of time\n  if (arrayA.length !== arrayB.length) {\n    return false;\n  }\n\n  for (var i = 0; i < arrayA.length; i += 1) {\n    // Check if we have nested arrays\n    if (arrayA[i] instanceof Array && arrayB[i] instanceof Array) {\n      // recurse into the nested arrays\n      if (!arrayEquals(arrayA[i], arrayB[i])) {\n        return false;\n      }\n    } else if (arrayA[i] !== arrayB[i]) {\n      // Warning - two different object instances will never be equal: {x:20} != {x:20}\n      return false;\n    }\n  }\n  return true;\n}const _default =\n\nCalHeatMap;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(d3, \"d3\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\plugins\\\\legacy-plugin-chart-calendar\\\\src\\\\vendor\\\\cal-heatmap.js\");reactHotLoader.register(CalHeatMap, \"CalHeatMap\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\plugins\\\\legacy-plugin-chart-calendar\\\\src\\\\vendor\\\\cal-heatmap.js\");reactHotLoader.register(DomainPosition, \"DomainPosition\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\plugins\\\\legacy-plugin-chart-calendar\\\\src\\\\vendor\\\\cal-heatmap.js\");reactHotLoader.register(Legend, \"Legend\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\plugins\\\\legacy-plugin-chart-calendar\\\\src\\\\vendor\\\\cal-heatmap.js\");reactHotLoader.register(mergeRecursive, \"mergeRecursive\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\plugins\\\\legacy-plugin-chart-calendar\\\\src\\\\vendor\\\\cal-heatmap.js\");reactHotLoader.register(arrayEquals, \"arrayEquals\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\plugins\\\\legacy-plugin-chart-calendar\\\\src\\\\vendor\\\\cal-heatmap.js\");reactHotLoader.register(_default, \"default\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\plugins\\\\legacy-plugin-chart-calendar\\\\src\\\\vendor\\\\cal-heatmap.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./plugins/legacy-plugin-chart-calendar/src/vendor/cal-heatmap.js\n");

/***/ }),

/***/ "./packages/superset-ui-core/src/chart/components/reactify.tsx":
/*!*********************************************************************!*\
  !*** ./packages/superset-ui-core/src/chart/components/reactify.tsx ***!
  \*********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ reactify)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\nfunction reactify(renderFn, callbacks) {\n  class ReactifiedComponent extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n\n    constructor(props) {\n      super(props);this.container = void 0;\n      this.setContainerRef = this.setContainerRef.bind(this);\n    }\n    componentDidMount() {\n      this.execute();\n    }\n    componentDidUpdate() {\n      this.execute();\n    }\n    componentWillUnmount() {\n      this.container = undefined;\n      if (callbacks != null && callbacks.componentWillUnmount) {\n        callbacks.componentWillUnmount.bind(this)();\n      }\n    }\n    setContainerRef(ref) {\n      this.container = ref;\n    }\n    execute() {\n      if (this.container) {\n        renderFn(this.container, this.props);\n      }\n    }\n    render() {\n      const { id, className } = this.props;\n      return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", { ref: this.setContainerRef, id: id, className: className });\n    } // @ts-ignore\n    __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n      this[key] = eval(code);}}const ReactifiedClass = ReactifiedComponent;\n  if (renderFn.displayName) {\n    ReactifiedClass.displayName = renderFn.displayName;\n  }\n  // eslint-disable-next-line react/forbid-foreign-prop-types\n  if (renderFn.propTypes) {\n    ReactifiedClass.propTypes = {\n      ...ReactifiedClass.propTypes,\n      ...renderFn.propTypes };\n\n  }\n  if (renderFn.defaultProps) {\n    ReactifiedClass.defaultProps = renderFn.defaultProps;\n  }\n  return ReactifiedComponent;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(reactify, \"reactify\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\packages\\\\superset-ui-core\\\\src\\\\chart\\\\components\\\\reactify.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9zdXBlcnNldC11aS1jb3JlL3NyYy9jaGFydC9jb21wb25lbnRzL3JlYWN0aWZ5LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkE7QUFFQTtBQStCQTtBQUlBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBckNBO0FBQUE7QUEyQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3BhY2thZ2VzL3N1cGVyc2V0LXVpLWNvcmUvc3JjL2NoYXJ0L2NvbXBvbmVudHMvcmVhY3RpZnkudHN4P2VjYTQiXSwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxyXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcclxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cclxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxyXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXHJcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxyXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcclxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcclxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXHJcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcclxuICogdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbi8vIFRPRE86IE5vdGUgdGhhdCBpZCBhbmQgY2xhc3NOYW1lIGNhbiBjb2xsaWRlIGJldHdlZW4gUHJvcHMgYW5kIFJlYWN0aWZ5UHJvcHNcclxuLy8gbGVhZGluZyB0byAobGlrZWx5KSB1bmV4cGVjdGVkIGJlaGF2aW9ycy4gV2Ugc2hvdWxkIGVpdGhlciByZXF1aXJlIFByb3BzIHRvIG5vdFxyXG4vLyBjb250YWluIGFuIGlkL2NsYXNzTmFtZSwgb3Igbm90IGNvbWJpbmUgdGhlbSAodmlhIGludGVyc2VjdGlvbiksIGluc3RlYWQgcHJlZmVycmluZ1xyXG4vLyB3cmFwcGluZyAoY29tcG9zaXRpb24pLiBBcyBhbiBleGFtcGxlOlxyXG4vLyBpbnRlcmZhY2UgTXlQcm9wcyB7XHJcbi8vICAgaWQ6IG51bWJlcjtcclxuLy8gfVxyXG4vLyBmdW5jdGlvbiBteVJlbmRlcihjb250YWluZXI6IEhUTUxEaXZFbGVtZW50LCBwcm9wczogUmVhZG9ubHk8TXlQcm9wcz4pOiB2b2lkIHtcclxuLy8gICBwcm9wcy5pZCAvLyB1bnVzYWJsZTogaWQgaXMgc3RyaW5nICYgbnVtYmVyXHJcbi8vIH1cclxuLy8gbmV3IChyZWFjdGlmeShteVJlbmRlcikpKHsgaWQ6IDUgfSk7IC8vIGVycm9yOiBpZCBoYXMgdG8gYmUgc3RyaW5nICYgbnVtYmVyXHJcblxyXG5leHBvcnQgdHlwZSBSZWFjdGlmeVByb3BzID0ge1xyXG4gIGlkPzogc3RyaW5nO1xyXG4gIGNsYXNzTmFtZT86IHN0cmluZztcclxufTtcclxuXHJcbi8vIFRPRE86IGFkZCBtb3JlIFJlYWN0IGxpZmVjeWNsZSBjYWxsYmFja3MgYXMgbmVlZGVkXHJcbmV4cG9ydCB0eXBlIExpZmVDeWNsZUNhbGxiYWNrcyA9IHtcclxuICBjb21wb25lbnRXaWxsVW5tb3VudD86ICgpID0+IHZvaWQ7XHJcbn07XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFJlbmRlckZ1bmNUeXBlPFByb3BzPiB7XHJcbiAgKGNvbnRhaW5lcjogSFRNTERpdkVsZW1lbnQsIHByb3BzOiBSZWFkb25seTxQcm9wcyAmIFJlYWN0aWZ5UHJvcHM+KTogdm9pZDtcclxuICBkaXNwbGF5TmFtZT86IHN0cmluZztcclxuICBkZWZhdWx0UHJvcHM/OiBQYXJ0aWFsPFByb3BzICYgUmVhY3RpZnlQcm9wcz47XHJcbiAgcHJvcFR5cGVzPzogUmVhY3QuV2Vha1ZhbGlkYXRpb25NYXA8UHJvcHMgJiBSZWFjdGlmeVByb3BzPjtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVhY3RpZnk8UHJvcHMgZXh0ZW5kcyBvYmplY3Q+KFxyXG4gIHJlbmRlckZuOiBSZW5kZXJGdW5jVHlwZTxQcm9wcz4sXHJcbiAgY2FsbGJhY2tzPzogTGlmZUN5Y2xlQ2FsbGJhY2tzLFxyXG4pOiBSZWFjdC5Db21wb25lbnRDbGFzczxQcm9wcyAmIFJlYWN0aWZ5UHJvcHM+IHtcclxuICBjbGFzcyBSZWFjdGlmaWVkQ29tcG9uZW50IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PFByb3BzICYgUmVhY3RpZnlQcm9wcz4ge1xyXG4gICAgY29udGFpbmVyPzogSFRNTERpdkVsZW1lbnQ7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJvcHM6IFByb3BzICYgUmVhY3RpZnlQcm9wcykge1xyXG4gICAgICBzdXBlcihwcm9wcyk7XHJcbiAgICAgIHRoaXMuc2V0Q29udGFpbmVyUmVmID0gdGhpcy5zZXRDb250YWluZXJSZWYuYmluZCh0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcclxuICAgICAgdGhpcy5leGVjdXRlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgY29tcG9uZW50RGlkVXBkYXRlKCkge1xyXG4gICAgICB0aGlzLmV4ZWN1dGUoKTtcclxuICAgIH1cclxuXHJcbiAgICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcclxuICAgICAgdGhpcy5jb250YWluZXIgPSB1bmRlZmluZWQ7XHJcbiAgICAgIGlmIChjYWxsYmFja3M/LmNvbXBvbmVudFdpbGxVbm1vdW50KSB7XHJcbiAgICAgICAgY2FsbGJhY2tzLmNvbXBvbmVudFdpbGxVbm1vdW50LmJpbmQodGhpcykoKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNldENvbnRhaW5lclJlZihyZWY6IEhUTUxEaXZFbGVtZW50KSB7XHJcbiAgICAgIHRoaXMuY29udGFpbmVyID0gcmVmO1xyXG4gICAgfVxyXG5cclxuICAgIGV4ZWN1dGUoKSB7XHJcbiAgICAgIGlmICh0aGlzLmNvbnRhaW5lcikge1xyXG4gICAgICAgIHJlbmRlckZuKHRoaXMuY29udGFpbmVyLCB0aGlzLnByb3BzKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlcigpIHtcclxuICAgICAgY29uc3QgeyBpZCwgY2xhc3NOYW1lIH0gPSB0aGlzLnByb3BzO1xyXG5cclxuICAgICAgcmV0dXJuIDxkaXYgcmVmPXt0aGlzLnNldENvbnRhaW5lclJlZn0gaWQ9e2lkfSBjbGFzc05hbWU9e2NsYXNzTmFtZX0gLz47XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjb25zdCBSZWFjdGlmaWVkQ2xhc3M6IFJlYWN0LkNvbXBvbmVudENsYXNzPFByb3BzICYgUmVhY3RpZnlQcm9wcz4gPVxyXG4gICAgUmVhY3RpZmllZENvbXBvbmVudDtcclxuXHJcbiAgaWYgKHJlbmRlckZuLmRpc3BsYXlOYW1lKSB7XHJcbiAgICBSZWFjdGlmaWVkQ2xhc3MuZGlzcGxheU5hbWUgPSByZW5kZXJGbi5kaXNwbGF5TmFtZTtcclxuICB9XHJcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L2ZvcmJpZC1mb3JlaWduLXByb3AtdHlwZXNcclxuICBpZiAocmVuZGVyRm4ucHJvcFR5cGVzKSB7XHJcbiAgICBSZWFjdGlmaWVkQ2xhc3MucHJvcFR5cGVzID0ge1xyXG4gICAgICAuLi5SZWFjdGlmaWVkQ2xhc3MucHJvcFR5cGVzLFxyXG4gICAgICAuLi5yZW5kZXJGbi5wcm9wVHlwZXMsXHJcbiAgICB9O1xyXG4gIH1cclxuICBpZiAocmVuZGVyRm4uZGVmYXVsdFByb3BzKSB7XHJcbiAgICBSZWFjdGlmaWVkQ2xhc3MuZGVmYXVsdFByb3BzID0gcmVuZGVyRm4uZGVmYXVsdFByb3BzO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIFJlYWN0aWZpZWRDb21wb25lbnQ7XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/superset-ui-core/src/chart/components/reactify.tsx\n");

/***/ })

}]);
"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunksuperset"] = globalThis["webpackChunksuperset"] || []).push([["src_components_Datasource_DatasourceEditor_jsx"],{

/***/ "./node_modules/antd/es/badge/Ribbon.js":
/*!**********************************************!*\
  !*** ./node_modules/antd/es/badge/Ribbon.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _config_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../config-provider */ \"./node_modules/antd/es/config-provider/context.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./node_modules/antd/es/badge/utils.js\");\n\n\n\n\n\n\n\nvar Ribbon = function Ribbon(_ref) {\n  var _classNames;\n\n  var className = _ref.className,\n      customizePrefixCls = _ref.prefixCls,\n      style = _ref.style,\n      color = _ref.color,\n      children = _ref.children,\n      text = _ref.text,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'end' : _ref$placement;\n\n  var _React$useContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(_config_provider__WEBPACK_IMPORTED_MODULE_2__.ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  var colorInPreset = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.isPresetColor)(color);\n  var ribbonCls = classnames__WEBPACK_IMPORTED_MODULE_1___default()(prefixCls, \"\".concat(prefixCls, \"-placement-\").concat(placement), (_classNames = {}, (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_classNames, \"\".concat(prefixCls, \"-color-\").concat(color), colorInPreset), _classNames), className);\n  var colorStyle = {};\n  var cornerColorStyle = {};\n\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-wrapper\")\n  }, children, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: ribbonCls,\n    style: (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_5__[\"default\"])((0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({}, colorStyle), style)\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-text\")\n  }, text), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-corner\"),\n    style: cornerColorStyle\n  })));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Ribbon);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYW50ZC9lcy9iYWRnZS9SaWJib24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL2FudGQvZXMvYmFkZ2UvUmliYm9uLmpzP2VmODEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2V4dGVuZHNcIjtcbmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHlcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgQ29uZmlnQ29udGV4dCB9IGZyb20gJy4uL2NvbmZpZy1wcm92aWRlcic7XG5pbXBvcnQgeyBpc1ByZXNldENvbG9yIH0gZnJvbSAnLi91dGlscyc7XG5cbnZhciBSaWJib24gPSBmdW5jdGlvbiBSaWJib24oX3JlZikge1xuICB2YXIgX2NsYXNzTmFtZXM7XG5cbiAgdmFyIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lLFxuICAgICAgY3VzdG9taXplUHJlZml4Q2xzID0gX3JlZi5wcmVmaXhDbHMsXG4gICAgICBzdHlsZSA9IF9yZWYuc3R5bGUsXG4gICAgICBjb2xvciA9IF9yZWYuY29sb3IsXG4gICAgICBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW4sXG4gICAgICB0ZXh0ID0gX3JlZi50ZXh0LFxuICAgICAgX3JlZiRwbGFjZW1lbnQgPSBfcmVmLnBsYWNlbWVudCxcbiAgICAgIHBsYWNlbWVudCA9IF9yZWYkcGxhY2VtZW50ID09PSB2b2lkIDAgPyAnZW5kJyA6IF9yZWYkcGxhY2VtZW50O1xuXG4gIHZhciBfUmVhY3QkdXNlQ29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoQ29uZmlnQ29udGV4dCksXG4gICAgICBnZXRQcmVmaXhDbHMgPSBfUmVhY3QkdXNlQ29udGV4dC5nZXRQcmVmaXhDbHMsXG4gICAgICBkaXJlY3Rpb24gPSBfUmVhY3QkdXNlQ29udGV4dC5kaXJlY3Rpb247XG5cbiAgdmFyIHByZWZpeENscyA9IGdldFByZWZpeENscygncmliYm9uJywgY3VzdG9taXplUHJlZml4Q2xzKTtcbiAgdmFyIGNvbG9ySW5QcmVzZXQgPSBpc1ByZXNldENvbG9yKGNvbG9yKTtcbiAgdmFyIHJpYmJvbkNscyA9IGNsYXNzTmFtZXMocHJlZml4Q2xzLCBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLXBsYWNlbWVudC1cIikuY29uY2F0KHBsYWNlbWVudCksIChfY2xhc3NOYW1lcyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzTmFtZXMsIFwiXCIuY29uY2F0KHByZWZpeENscywgXCItcnRsXCIpLCBkaXJlY3Rpb24gPT09ICdydGwnKSwgX2RlZmluZVByb3BlcnR5KF9jbGFzc05hbWVzLCBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLWNvbG9yLVwiKS5jb25jYXQoY29sb3IpLCBjb2xvckluUHJlc2V0KSwgX2NsYXNzTmFtZXMpLCBjbGFzc05hbWUpO1xuICB2YXIgY29sb3JTdHlsZSA9IHt9O1xuICB2YXIgY29ybmVyQ29sb3JTdHlsZSA9IHt9O1xuXG4gIGlmIChjb2xvciAmJiAhY29sb3JJblByZXNldCkge1xuICAgIGNvbG9yU3R5bGUuYmFja2dyb3VuZCA9IGNvbG9yO1xuICAgIGNvcm5lckNvbG9yU3R5bGUuY29sb3IgPSBjb2xvcjtcbiAgfVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLXdyYXBwZXJcIilcbiAgfSwgY2hpbGRyZW4sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IHJpYmJvbkNscyxcbiAgICBzdHlsZTogX2V4dGVuZHMoX2V4dGVuZHMoe30sIGNvbG9yU3R5bGUpLCBzdHlsZSlcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICBjbGFzc05hbWU6IFwiXCIuY29uY2F0KHByZWZpeENscywgXCItdGV4dFwiKVxuICB9LCB0ZXh0KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1jb3JuZXJcIiksXG4gICAgc3R5bGU6IGNvcm5lckNvbG9yU3R5bGVcbiAgfSkpKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFJpYmJvbjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/antd/es/badge/Ribbon.js\n");

/***/ }),

/***/ "./node_modules/antd/es/badge/ScrollNumber.js":
/*!****************************************************!*\
  !*** ./node_modules/antd/es/badge/ScrollNumber.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _config_provider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../config-provider */ \"./node_modules/antd/es/config-provider/context.js\");\n/* harmony import */ var _util_reactNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../_util/reactNode */ \"./node_modules/antd/es/_util/reactNode.js\");\n\n\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\n\n\n\n\nfunction getNumberArray(num) {\n  return num ? num.toString().split('').reverse().map(function (i) {\n    var current = Number(i);\n    return isNaN(current) ? i : current;\n  }) : [];\n}\n\nfunction renderNumberList(position, className) {\n  var childrenToReturn = [];\n\n  for (var i = 0; i < 30; i++) {\n    childrenToReturn.push( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"p\", {\n      key: i.toString(),\n      className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(className, {\n        current: position === i\n      })\n    }, i % 10));\n  }\n\n  return childrenToReturn;\n}\n\nvar ScrollNumber = function ScrollNumber(_a) {\n  var customizePrefixCls = _a.prefixCls,\n      customizeCount = _a.count,\n      className = _a.className,\n      style = _a.style,\n      title = _a.title,\n      show = _a.show,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? 'sup' : _a$component,\n      children = _a.children,\n      _a$onAnimated = _a.onAnimated,\n      onAnimated = _a$onAnimated === void 0 ? function () {} : _a$onAnimated,\n      restProps = __rest(_a, [\"prefixCls\", \"count\", \"className\", \"style\", \"title\", \"show\", \"component\", \"children\", \"onAnimated\"]);\n\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true),\n      _useState2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_useState, 2),\n      animateStarted = _useState2[0],\n      setAnimateStarted = _useState2[1];\n\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(customizeCount),\n      _useState4 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_useState3, 2),\n      count = _useState4[0],\n      setCount = _useState4[1];\n\n  var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(customizeCount),\n      _useState6 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_useState5, 2),\n      prevCount = _useState6[0],\n      setPrevCount = _useState6[1];\n\n  var _useState7 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(customizeCount),\n      _useState8 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_useState7, 2),\n      lastCount = _useState8[0],\n      setLastCount = _useState8[1];\n\n  var _React$useContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(_config_provider__WEBPACK_IMPORTED_MODULE_3__.ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('scroll-number', customizePrefixCls);\n\n  if (prevCount !== customizeCount) {\n    setAnimateStarted(true);\n    setPrevCount(customizeCount);\n  }\n\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {\n    setLastCount(count);\n    var timeout;\n\n    if (animateStarted) {\n      // Let browser has time to reset the scroller before actually\n      // performing the transition.\n      timeout = setTimeout(function () {\n        setAnimateStarted(false);\n        setCount(customizeCount);\n        onAnimated();\n      });\n    }\n\n    return function () {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n  }, [animateStarted, customizeCount, onAnimated]); // =========================== Function ===========================\n\n  var getPositionByNum = function getPositionByNum(num, i) {\n    var currentCount = Math.abs(Number(count));\n    var lstCount = Math.abs(Number(lastCount));\n    var currentDigit = Math.abs(getNumberArray(count)[i]);\n    var lastDigit = Math.abs(getNumberArray(lstCount)[i]);\n\n    if (animateStarted) {\n      return 10 + num;\n    } // 同方向则在同一侧切换数字\n\n\n    if (currentCount > lstCount) {\n      if (currentDigit >= lastDigit) {\n        return 10 + num;\n      }\n\n      return 20 + num;\n    }\n\n    if (currentDigit <= lastDigit) {\n      return 10 + num;\n    }\n\n    return num;\n  }; // ============================ Render ============================\n\n\n  var newProps = (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__[\"default\"])((0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({}, restProps), {\n    'data-show': show,\n    style: style,\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(prefixCls, className),\n    title: title\n  });\n\n  var renderCurrentNumber = function renderCurrentNumber(num, i) {\n    if (typeof num === 'number') {\n      var position = getPositionByNum(num, i);\n      var removeTransition = animateStarted || getNumberArray(lastCount)[i] === undefined;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement('span', {\n        className: \"\".concat(prefixCls, \"-only\"),\n        style: {\n          transition: removeTransition ? 'none' : undefined,\n          msTransform: \"translateY(\".concat(-position * 100, \"%)\"),\n          WebkitTransform: \"translateY(\".concat(-position * 100, \"%)\"),\n          transform: \"translateY(\".concat(-position * 100, \"%)\")\n        },\n        key: i\n      }, renderNumberList(position, \"\".concat(prefixCls, \"-only-unit\")));\n    }\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      key: \"symbol\",\n      className: \"\".concat(prefixCls, \"-symbol\")\n    }, num);\n  };\n\n  var numberNode = count && Number(count) % 1 === 0 ? getNumberArray(count).map(function (num, i) {\n    return renderCurrentNumber(num, i);\n  }).reverse() : count; // allow specify the border\n  // mock border-color by box-shadow for compatible with old usage:\n  // <Badge count={4} style={{ backgroundColor: '#fff', color: '#999', borderColor: '#d9d9d9' }} />\n\n  if (style && style.borderColor) {\n    newProps.style = (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__[\"default\"])((0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({}, style), {\n      boxShadow: \"0 0 0 1px \".concat(style.borderColor, \" inset\")\n    });\n  }\n\n  if (children) {\n    return (0,_util_reactNode__WEBPACK_IMPORTED_MODULE_5__.cloneElement)(children, function (oriProps) {\n      return {\n        className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(\"\".concat(prefixCls, \"-custom-component\"), oriProps === null || oriProps === void 0 ? void 0 : oriProps.className)\n      };\n    });\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(component, newProps, numberNode);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ScrollNumber);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/antd/es/badge/ScrollNumber.js\n");

/***/ }),

/***/ "./node_modules/antd/es/badge/index.js":
/*!*********************************************!*\
  !*** ./node_modules/antd/es/badge/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var rc_motion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rc-motion */ \"./node_modules/rc-motion/es/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _ScrollNumber__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ScrollNumber */ \"./node_modules/antd/es/badge/ScrollNumber.js\");\n/* harmony import */ var _Ribbon__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Ribbon */ \"./node_modules/antd/es/badge/Ribbon.js\");\n/* harmony import */ var _config_provider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../config-provider */ \"./node_modules/antd/es/config-provider/context.js\");\n/* harmony import */ var _util_reactNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../_util/reactNode */ \"./node_modules/antd/es/_util/reactNode.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils */ \"./node_modules/antd/es/badge/utils.js\");\n\n\n\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar Badge = function Badge(_a) {\n  var _classNames, _classNames2;\n\n  var customizePrefixCls = _a.prefixCls,\n      customizeScrollNumberPrefixCls = _a.scrollNumberPrefixCls,\n      children = _a.children,\n      status = _a.status,\n      text = _a.text,\n      color = _a.color,\n      _a$count = _a.count,\n      count = _a$count === void 0 ? null : _a$count,\n      _a$overflowCount = _a.overflowCount,\n      overflowCount = _a$overflowCount === void 0 ? 99 : _a$overflowCount,\n      _a$dot = _a.dot,\n      dot = _a$dot === void 0 ? false : _a$dot,\n      _a$size = _a.size,\n      size = _a$size === void 0 ? 'default' : _a$size,\n      title = _a.title,\n      offset = _a.offset,\n      style = _a.style,\n      className = _a.className,\n      _a$showZero = _a.showZero,\n      showZero = _a$showZero === void 0 ? false : _a$showZero,\n      restProps = __rest(_a, [\"prefixCls\", \"scrollNumberPrefixCls\", \"children\", \"status\", \"text\", \"color\", \"count\", \"overflowCount\", \"dot\", \"size\", \"title\", \"offset\", \"style\", \"className\", \"showZero\"]);\n\n  var _React$useContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(_config_provider__WEBPACK_IMPORTED_MODULE_3__.ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('badge', customizePrefixCls); // ================================ Misc ================================\n\n  var numberedDisplayCount = count > overflowCount ? \"\".concat(overflowCount, \"+\") : count;\n  var hasStatus = status !== null && status !== undefined || color !== null && color !== undefined;\n  var isZero = numberedDisplayCount === '0' || numberedDisplayCount === 0;\n  var showAsDot = dot && !isZero || hasStatus;\n  var mergedCount = showAsDot ? '' : numberedDisplayCount;\n  var isHidden = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    var isEmpty = mergedCount === null || mergedCount === undefined || mergedCount === '';\n    return (isEmpty || isZero && !showZero) && !showAsDot;\n  }, [mergedCount, isZero, showZero, showAsDot]); // We need cache count since remove motion should not change count display\n\n  var displayCountRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(mergedCount);\n\n  if (!isHidden) {\n    displayCountRef.current = mergedCount;\n  }\n\n  var displayCount = displayCountRef.current; // We will cache the dot status to avoid shaking on leaved motion\n\n  var isDotRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(showAsDot);\n\n  if (!isHidden) {\n    isDotRef.current = showAsDot;\n  } // =============================== Styles ===============================\n\n\n  var mergedStyle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    if (!offset) {\n      return (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({}, style);\n    }\n\n    var offsetStyle = {\n      marginTop: offset[1]\n    };\n\n    if (direction === 'rtl') {\n      offsetStyle.left = parseInt(offset[0], 10);\n    } else {\n      offsetStyle.right = -parseInt(offset[0], 10);\n    }\n\n    return (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__[\"default\"])((0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({}, offsetStyle), style);\n  }, [direction, offset, style]); // =============================== Render ===============================\n  // >>> Title\n\n  var titleNode = title !== null && title !== void 0 ? title : typeof count === 'string' || typeof count === 'number' ? count : undefined; // >>> Status Text\n\n  var statusTextNode = isHidden || !text ? null : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-status-text\")\n  }, text); // >>> Display Component\n\n  var displayNode = !count || (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(count) !== 'object' ? undefined : (0,_util_reactNode__WEBPACK_IMPORTED_MODULE_6__.cloneElement)(count, function (oriProps) {\n    return {\n      style: (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__[\"default\"])((0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({}, mergedStyle), oriProps.style)\n    };\n  }); // Shared styles\n\n  var statusCls = classnames__WEBPACK_IMPORTED_MODULE_2___default()((_classNames = {}, (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_classNames, \"\".concat(prefixCls, \"-status-dot\"), hasStatus), (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_classNames, \"\".concat(prefixCls, \"-status-\").concat(status), !!status), (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_classNames, \"\".concat(prefixCls, \"-status-\").concat(color), (0,_utils__WEBPACK_IMPORTED_MODULE_8__.isPresetColor)(color)), _classNames));\n  var statusStyle = {};\n\n  if (color && !(0,_utils__WEBPACK_IMPORTED_MODULE_8__.isPresetColor)(color)) {\n    statusStyle.background = color;\n  }\n\n  var badgeClassName = classnames__WEBPACK_IMPORTED_MODULE_2___default()(prefixCls, (_classNames2 = {}, (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_classNames2, \"\".concat(prefixCls, \"-status\"), hasStatus), (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_classNames2, \"\".concat(prefixCls, \"-not-a-wrapper\"), !children), (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_classNames2, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames2), className); // <Badge status=\"success\" />\n\n  if (!children && hasStatus) {\n    var statusTextColor = mergedStyle.color;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({}, restProps, {\n      className: badgeClassName,\n      style: mergedStyle\n    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: statusCls,\n      style: statusStyle\n    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      style: {\n        color: statusTextColor\n      },\n      className: \"\".concat(prefixCls, \"-status-text\")\n    }, text));\n  } // <Badge status=\"success\" count={<Icon type=\"xxx\" />}></Badge>\n\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({}, restProps, {\n    className: badgeClassName\n  }), children, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(rc_motion__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n    visible: !isHidden,\n    motionName: \"\".concat(prefixCls, \"-zoom\"),\n    motionAppear: false\n  }, function (_ref) {\n    var _classNames3;\n\n    var motionClassName = _ref.className;\n    var scrollNumberPrefixCls = getPrefixCls('scroll-number', customizeScrollNumberPrefixCls);\n    var isDot = isDotRef.current;\n    var scrollNumberCls = classnames__WEBPACK_IMPORTED_MODULE_2___default()((_classNames3 = {}, (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_classNames3, \"\".concat(prefixCls, \"-dot\"), isDot), (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_classNames3, \"\".concat(prefixCls, \"-count\"), !isDot), (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_classNames3, \"\".concat(prefixCls, \"-count-sm\"), size === 'small'), (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_classNames3, \"\".concat(prefixCls, \"-multiple-words\"), !isDot && displayCount && (displayCount === null || displayCount === void 0 ? void 0 : displayCount.toString().length) > 1), (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_classNames3, \"\".concat(prefixCls, \"-status-\").concat(status), !!status), (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_classNames3, \"\".concat(prefixCls, \"-status-\").concat(color), (0,_utils__WEBPACK_IMPORTED_MODULE_8__.isPresetColor)(color)), _classNames3));\n\n    var scrollNumberStyle = (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({}, mergedStyle);\n\n    if (color && !(0,_utils__WEBPACK_IMPORTED_MODULE_8__.isPresetColor)(color)) {\n      scrollNumberStyle = scrollNumberStyle || {};\n      scrollNumberStyle.background = color;\n    }\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ScrollNumber__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n      prefixCls: scrollNumberPrefixCls,\n      show: !isHidden,\n      className: classnames__WEBPACK_IMPORTED_MODULE_2___default()(motionClassName, scrollNumberCls),\n      count: displayCount,\n      title: titleNode,\n      style: scrollNumberStyle,\n      key: \"scrollNumber\"\n    }, displayNode);\n  }), statusTextNode);\n};\n\nBadge.Ribbon = _Ribbon__WEBPACK_IMPORTED_MODULE_10__[\"default\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Badge);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/antd/es/badge/index.js\n");

/***/ }),

/***/ "./node_modules/antd/es/badge/utils.js":
/*!*********************************************!*\
  !*** ./node_modules/antd/es/badge/utils.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isPresetColor\": () => (/* binding */ isPresetColor)\n/* harmony export */ });\n/* harmony import */ var _util_colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_util/colors */ \"./node_modules/antd/es/_util/colors.js\");\n // eslint-disable-next-line import/prefer-default-export\n\nfunction isPresetColor(color) {\n  return _util_colors__WEBPACK_IMPORTED_MODULE_0__.PresetColorTypes.indexOf(color) !== -1;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYW50ZC9lcy9iYWRnZS91dGlscy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL2FudGQvZXMvYmFkZ2UvdXRpbHMuanM/NGMwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmVzZXRDb2xvclR5cGVzIH0gZnJvbSAnLi4vX3V0aWwvY29sb3JzJzsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9wcmVmZXItZGVmYXVsdC1leHBvcnRcblxuZXhwb3J0IGZ1bmN0aW9uIGlzUHJlc2V0Q29sb3IoY29sb3IpIHtcbiAgcmV0dXJuIFByZXNldENvbG9yVHlwZXMuaW5kZXhPZihjb2xvcikgIT09IC0xO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/antd/es/badge/utils.js\n");

/***/ }),

/***/ "./node_modules/antd/lib/card/Grid.js":
/*!********************************************!*\
  !*** ./node_modules/antd/lib/card/Grid.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ \"./node_modules/@babel/runtime/helpers/interopRequireWildcard.js\");\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/extends.js\"));\n\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/defineProperty.js\"));\n\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\"));\n\nvar _configProvider = __webpack_require__(/*! ../config-provider */ \"./node_modules/antd/lib/config-provider/index.js\");\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar Grid = function Grid(_a) {\n  var prefixCls = _a.prefixCls,\n      className = _a.className,\n      _a$hoverable = _a.hoverable,\n      hoverable = _a$hoverable === void 0 ? true : _a$hoverable,\n      props = __rest(_a, [\"prefixCls\", \"className\", \"hoverable\"]);\n\n  return /*#__PURE__*/React.createElement(_configProvider.ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var prefix = getPrefixCls('card', prefixCls);\n    var classString = (0, _classnames[\"default\"])(\"\".concat(prefix, \"-grid\"), className, (0, _defineProperty2[\"default\"])({}, \"\".concat(prefix, \"-grid-hoverable\"), hoverable));\n    return /*#__PURE__*/React.createElement(\"div\", (0, _extends2[\"default\"])({}, props, {\n      className: classString\n    }));\n  });\n};\n\nvar _default = Grid;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYW50ZC9saWIvY2FyZC9HcmlkLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9hbnRkL2xpYi9jYXJkL0dyaWQuanM/NjQ1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVXaWxkY2FyZFwiKTtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcblxudmFyIF9leHRlbmRzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXh0ZW5kc1wiKSk7XG5cbnZhciBfZGVmaW5lUHJvcGVydHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eVwiKSk7XG5cbnZhciBSZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5cbnZhciBfY2xhc3NuYW1lcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcImNsYXNzbmFtZXNcIikpO1xuXG52YXIgX2NvbmZpZ1Byb3ZpZGVyID0gcmVxdWlyZShcIi4uL2NvbmZpZy1wcm92aWRlclwiKTtcblxudmFyIF9fcmVzdCA9IHZvaWQgMCAmJiAodm9pZCAwKS5fX3Jlc3QgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgdmFyIHQgPSB7fTtcblxuICBmb3IgKHZhciBwIGluIHMpIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApIHRbcF0gPSBzW3BdO1xuICB9XG5cbiAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKSBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKSB0W3BbaV1dID0gc1twW2ldXTtcbiAgfVxuICByZXR1cm4gdDtcbn07XG5cbnZhciBHcmlkID0gZnVuY3Rpb24gR3JpZChfYSkge1xuICB2YXIgcHJlZml4Q2xzID0gX2EucHJlZml4Q2xzLFxuICAgICAgY2xhc3NOYW1lID0gX2EuY2xhc3NOYW1lLFxuICAgICAgX2EkaG92ZXJhYmxlID0gX2EuaG92ZXJhYmxlLFxuICAgICAgaG92ZXJhYmxlID0gX2EkaG92ZXJhYmxlID09PSB2b2lkIDAgPyB0cnVlIDogX2EkaG92ZXJhYmxlLFxuICAgICAgcHJvcHMgPSBfX3Jlc3QoX2EsIFtcInByZWZpeENsc1wiLCBcImNsYXNzTmFtZVwiLCBcImhvdmVyYWJsZVwiXSk7XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KF9jb25maWdQcm92aWRlci5Db25maWdDb25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKF9yZWYpIHtcbiAgICB2YXIgZ2V0UHJlZml4Q2xzID0gX3JlZi5nZXRQcmVmaXhDbHM7XG4gICAgdmFyIHByZWZpeCA9IGdldFByZWZpeENscygnY2FyZCcsIHByZWZpeENscyk7XG4gICAgdmFyIGNsYXNzU3RyaW5nID0gKDAsIF9jbGFzc25hbWVzW1wiZGVmYXVsdFwiXSkoXCJcIi5jb25jYXQocHJlZml4LCBcIi1ncmlkXCIpLCBjbGFzc05hbWUsICgwLCBfZGVmaW5lUHJvcGVydHkyW1wiZGVmYXVsdFwiXSkoe30sIFwiXCIuY29uY2F0KHByZWZpeCwgXCItZ3JpZC1ob3ZlcmFibGVcIiksIGhvdmVyYWJsZSkpO1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCAoMCwgX2V4dGVuZHMyW1wiZGVmYXVsdFwiXSkoe30sIHByb3BzLCB7XG4gICAgICBjbGFzc05hbWU6IGNsYXNzU3RyaW5nXG4gICAgfSkpO1xuICB9KTtcbn07XG5cbnZhciBfZGVmYXVsdCA9IEdyaWQ7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/antd/lib/card/Grid.js\n");

/***/ }),

/***/ "./node_modules/antd/lib/card/Meta.js":
/*!********************************************!*\
  !*** ./node_modules/antd/lib/card/Meta.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ \"./node_modules/@babel/runtime/helpers/interopRequireWildcard.js\");\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/extends.js\"));\n\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\"));\n\nvar _configProvider = __webpack_require__(/*! ../config-provider */ \"./node_modules/antd/lib/config-provider/index.js\");\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar Meta = function Meta(props) {\n  return /*#__PURE__*/React.createElement(_configProvider.ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n\n    var customizePrefixCls = props.prefixCls,\n        className = props.className,\n        avatar = props.avatar,\n        title = props.title,\n        description = props.description,\n        others = __rest(props, [\"prefixCls\", \"className\", \"avatar\", \"title\", \"description\"]);\n\n    var prefixCls = getPrefixCls('card', customizePrefixCls);\n    var classString = (0, _classnames[\"default\"])(\"\".concat(prefixCls, \"-meta\"), className);\n    var avatarDom = avatar ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-meta-avatar\")\n    }, avatar) : null;\n    var titleDom = title ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-meta-title\")\n    }, title) : null;\n    var descriptionDom = description ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-meta-description\")\n    }, description) : null;\n    var MetaDetail = titleDom || descriptionDom ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-meta-detail\")\n    }, titleDom, descriptionDom) : null;\n    return /*#__PURE__*/React.createElement(\"div\", (0, _extends2[\"default\"])({}, others, {\n      className: classString\n    }), avatarDom, MetaDetail);\n  });\n};\n\nvar _default = Meta;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYW50ZC9saWIvY2FyZC9NZXRhLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9hbnRkL2xpYi9jYXJkL01ldGEuanM/NGFmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVXaWxkY2FyZFwiKTtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcblxudmFyIF9leHRlbmRzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXh0ZW5kc1wiKSk7XG5cbnZhciBSZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5cbnZhciBfY2xhc3NuYW1lcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcImNsYXNzbmFtZXNcIikpO1xuXG52YXIgX2NvbmZpZ1Byb3ZpZGVyID0gcmVxdWlyZShcIi4uL2NvbmZpZy1wcm92aWRlclwiKTtcblxudmFyIF9fcmVzdCA9IHZvaWQgMCAmJiAodm9pZCAwKS5fX3Jlc3QgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgdmFyIHQgPSB7fTtcblxuICBmb3IgKHZhciBwIGluIHMpIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApIHRbcF0gPSBzW3BdO1xuICB9XG5cbiAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKSBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKSB0W3BbaV1dID0gc1twW2ldXTtcbiAgfVxuICByZXR1cm4gdDtcbn07XG5cbnZhciBNZXRhID0gZnVuY3Rpb24gTWV0YShwcm9wcykge1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoX2NvbmZpZ1Byb3ZpZGVyLkNvbmZpZ0NvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoX3JlZikge1xuICAgIHZhciBnZXRQcmVmaXhDbHMgPSBfcmVmLmdldFByZWZpeENscztcblxuICAgIHZhciBjdXN0b21pemVQcmVmaXhDbHMgPSBwcm9wcy5wcmVmaXhDbHMsXG4gICAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgICAgYXZhdGFyID0gcHJvcHMuYXZhdGFyLFxuICAgICAgICB0aXRsZSA9IHByb3BzLnRpdGxlLFxuICAgICAgICBkZXNjcmlwdGlvbiA9IHByb3BzLmRlc2NyaXB0aW9uLFxuICAgICAgICBvdGhlcnMgPSBfX3Jlc3QocHJvcHMsIFtcInByZWZpeENsc1wiLCBcImNsYXNzTmFtZVwiLCBcImF2YXRhclwiLCBcInRpdGxlXCIsIFwiZGVzY3JpcHRpb25cIl0pO1xuXG4gICAgdmFyIHByZWZpeENscyA9IGdldFByZWZpeENscygnY2FyZCcsIGN1c3RvbWl6ZVByZWZpeENscyk7XG4gICAgdmFyIGNsYXNzU3RyaW5nID0gKDAsIF9jbGFzc25hbWVzW1wiZGVmYXVsdFwiXSkoXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1tZXRhXCIpLCBjbGFzc05hbWUpO1xuICAgIHZhciBhdmF0YXJEb20gPSBhdmF0YXIgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwiXCIuY29uY2F0KHByZWZpeENscywgXCItbWV0YS1hdmF0YXJcIilcbiAgICB9LCBhdmF0YXIpIDogbnVsbDtcbiAgICB2YXIgdGl0bGVEb20gPSB0aXRsZSA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1tZXRhLXRpdGxlXCIpXG4gICAgfSwgdGl0bGUpIDogbnVsbDtcbiAgICB2YXIgZGVzY3JpcHRpb25Eb20gPSBkZXNjcmlwdGlvbiA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1tZXRhLWRlc2NyaXB0aW9uXCIpXG4gICAgfSwgZGVzY3JpcHRpb24pIDogbnVsbDtcbiAgICB2YXIgTWV0YURldGFpbCA9IHRpdGxlRG9tIHx8IGRlc2NyaXB0aW9uRG9tID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLW1ldGEtZGV0YWlsXCIpXG4gICAgfSwgdGl0bGVEb20sIGRlc2NyaXB0aW9uRG9tKSA6IG51bGw7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsICgwLCBfZXh0ZW5kczJbXCJkZWZhdWx0XCJdKSh7fSwgb3RoZXJzLCB7XG4gICAgICBjbGFzc05hbWU6IGNsYXNzU3RyaW5nXG4gICAgfSksIGF2YXRhckRvbSwgTWV0YURldGFpbCk7XG4gIH0pO1xufTtcblxudmFyIF9kZWZhdWx0ID0gTWV0YTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/antd/lib/card/Meta.js\n");

/***/ }),

/***/ "./node_modules/antd/lib/card/index.js":
/*!*********************************************!*\
  !*** ./node_modules/antd/lib/card/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var __webpack_unused_export__;\n\n\nvar _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ \"./node_modules/@babel/runtime/helpers/interopRequireWildcard.js\");\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\n__webpack_unused_export__ = ({\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/defineProperty.js\"));\n\nvar _extends3 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/extends.js\"));\n\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\"));\n\nvar _omit = _interopRequireDefault(__webpack_require__(/*! omit.js */ \"./node_modules/omit.js/es/index.js\"));\n\nvar _Grid = _interopRequireDefault(__webpack_require__(/*! ./Grid */ \"./node_modules/antd/lib/card/Grid.js\"));\n\nvar _Meta = _interopRequireDefault(__webpack_require__(/*! ./Meta */ \"./node_modules/antd/lib/card/Meta.js\"));\n\nvar _tabs = _interopRequireDefault(__webpack_require__(/*! ../tabs */ \"./node_modules/antd/lib/tabs/index.js\"));\n\nvar _row = _interopRequireDefault(__webpack_require__(/*! ../row */ \"./node_modules/antd/lib/row/index.js\"));\n\nvar _col = _interopRequireDefault(__webpack_require__(/*! ../col */ \"./node_modules/antd/lib/col/index.js\"));\n\nvar _configProvider = __webpack_require__(/*! ../config-provider */ \"./node_modules/antd/lib/config-provider/index.js\");\n\nvar _SizeContext = _interopRequireDefault(__webpack_require__(/*! ../config-provider/SizeContext */ \"./node_modules/antd/lib/config-provider/SizeContext.js\"));\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nfunction getAction(actions) {\n  var actionList = actions.map(function (action, index) {\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      React.createElement(\"li\", {\n        style: {\n          width: \"\".concat(100 / actions.length, \"%\")\n        },\n        key: \"action-\".concat(index)\n      }, /*#__PURE__*/React.createElement(\"span\", null, action))\n    );\n  });\n  return actionList;\n}\n\nvar Card = function Card(props) {\n  var _extends2, _classNames;\n\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var size = React.useContext(_SizeContext[\"default\"]);\n\n  var onTabChange = function onTabChange(key) {\n    if (props.onTabChange) {\n      props.onTabChange(key);\n    }\n  };\n\n  var isContainGrid = function isContainGrid() {\n    var containGrid;\n    React.Children.forEach(props.children, function (element) {\n      if (element && element.type && element.type === _Grid[\"default\"]) {\n        containGrid = true;\n      }\n    });\n    return containGrid;\n  };\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      extra = props.extra,\n      _props$headStyle = props.headStyle,\n      headStyle = _props$headStyle === void 0 ? {} : _props$headStyle,\n      _props$bodyStyle = props.bodyStyle,\n      bodyStyle = _props$bodyStyle === void 0 ? {} : _props$bodyStyle,\n      title = props.title,\n      loading = props.loading,\n      _props$bordered = props.bordered,\n      bordered = _props$bordered === void 0 ? true : _props$bordered,\n      customizeSize = props.size,\n      type = props.type,\n      cover = props.cover,\n      actions = props.actions,\n      tabList = props.tabList,\n      children = props.children,\n      activeTabKey = props.activeTabKey,\n      defaultActiveTabKey = props.defaultActiveTabKey,\n      tabBarExtraContent = props.tabBarExtraContent,\n      hoverable = props.hoverable,\n      _props$tabProps = props.tabProps,\n      tabProps = _props$tabProps === void 0 ? {} : _props$tabProps,\n      others = __rest(props, [\"prefixCls\", \"className\", \"extra\", \"headStyle\", \"bodyStyle\", \"title\", \"loading\", \"bordered\", \"size\", \"type\", \"cover\", \"actions\", \"tabList\", \"children\", \"activeTabKey\", \"defaultActiveTabKey\", \"tabBarExtraContent\", \"hoverable\", \"tabProps\"]);\n\n  var prefixCls = getPrefixCls('card', customizePrefixCls);\n  var loadingBlockStyle = bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? {\n    padding: 24\n  } : undefined;\n  var block = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-loading-block\")\n  });\n  var loadingBlock = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-loading-content\"),\n    style: loadingBlockStyle\n  }, /*#__PURE__*/React.createElement(_row[\"default\"], {\n    gutter: 8\n  }, /*#__PURE__*/React.createElement(_col[\"default\"], {\n    span: 22\n  }, block)), /*#__PURE__*/React.createElement(_row[\"default\"], {\n    gutter: 8\n  }, /*#__PURE__*/React.createElement(_col[\"default\"], {\n    span: 8\n  }, block), /*#__PURE__*/React.createElement(_col[\"default\"], {\n    span: 15\n  }, block)), /*#__PURE__*/React.createElement(_row[\"default\"], {\n    gutter: 8\n  }, /*#__PURE__*/React.createElement(_col[\"default\"], {\n    span: 6\n  }, block), /*#__PURE__*/React.createElement(_col[\"default\"], {\n    span: 18\n  }, block)), /*#__PURE__*/React.createElement(_row[\"default\"], {\n    gutter: 8\n  }, /*#__PURE__*/React.createElement(_col[\"default\"], {\n    span: 13\n  }, block), /*#__PURE__*/React.createElement(_col[\"default\"], {\n    span: 9\n  }, block)), /*#__PURE__*/React.createElement(_row[\"default\"], {\n    gutter: 8\n  }, /*#__PURE__*/React.createElement(_col[\"default\"], {\n    span: 4\n  }, block), /*#__PURE__*/React.createElement(_col[\"default\"], {\n    span: 3\n  }, block), /*#__PURE__*/React.createElement(_col[\"default\"], {\n    span: 16\n  }, block)));\n  var hasActiveTabKey = activeTabKey !== undefined;\n  var extraProps = (0, _extends3[\"default\"])((0, _extends3[\"default\"])({}, tabProps), (_extends2 = {}, (0, _defineProperty2[\"default\"])(_extends2, hasActiveTabKey ? 'activeKey' : 'defaultActiveKey', hasActiveTabKey ? activeTabKey : defaultActiveTabKey), (0, _defineProperty2[\"default\"])(_extends2, \"tabBarExtraContent\", tabBarExtraContent), _extends2));\n  var head;\n  var tabs = tabList && tabList.length ? /*#__PURE__*/React.createElement(_tabs[\"default\"], (0, _extends3[\"default\"])({\n    size: \"large\"\n  }, extraProps, {\n    className: \"\".concat(prefixCls, \"-head-tabs\"),\n    onChange: onTabChange\n  }), tabList.map(function (item) {\n    return /*#__PURE__*/React.createElement(_tabs[\"default\"].TabPane, {\n      tab: item.tab,\n      disabled: item.disabled,\n      key: item.key\n    });\n  })) : null;\n\n  if (title || extra || tabs) {\n    head = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-head\"),\n      style: headStyle\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-head-wrapper\")\n    }, title && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-head-title\")\n    }, title), extra && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-extra\")\n    }, extra)), tabs);\n  }\n\n  var coverDom = cover ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-cover\")\n  }, cover) : null;\n  var body = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-body\"),\n    style: bodyStyle\n  }, loading ? loadingBlock : children);\n  var actionDom = actions && actions.length ? /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"\".concat(prefixCls, \"-actions\")\n  }, getAction(actions)) : null;\n  var divProps = (0, _omit[\"default\"])(others, ['onTabChange']);\n  var mergedSize = customizeSize || size;\n  var classString = (0, _classnames[\"default\"])(prefixCls, (_classNames = {}, (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-loading\"), loading), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-bordered\"), bordered), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-hoverable\"), hoverable), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-contain-grid\"), isContainGrid()), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-contain-tabs\"), tabList && tabList.length), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-\").concat(mergedSize), mergedSize), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-type-\").concat(type), !!type), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n  return /*#__PURE__*/React.createElement(\"div\", (0, _extends3[\"default\"])({}, divProps, {\n    className: classString\n  }), head, coverDom, body, actionDom);\n};\n\nCard.Grid = _Grid[\"default\"];\nCard.Meta = _Meta[\"default\"];\nvar _default = Card;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/antd/lib/card/index.js\n");

/***/ }),

/***/ "./node_modules/antd/lib/col/index.js":
/*!********************************************!*\
  !*** ./node_modules/antd/lib/col/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _grid = __webpack_require__(/*! ../grid */ \"./node_modules/antd/lib/grid/index.js\");\n\nvar _default = _grid.Col;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYW50ZC9saWIvY29sL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9hbnRkL2xpYi9jb2wvaW5kZXguanM/NjRmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG52YXIgX2dyaWQgPSByZXF1aXJlKFwiLi4vZ3JpZFwiKTtcblxudmFyIF9kZWZhdWx0ID0gX2dyaWQuQ29sO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/antd/lib/col/index.js\n");

/***/ }),

/***/ "./node_modules/antd/lib/grid/hooks/useBreakpoint.js":
/*!***********************************************************!*\
  !*** ./node_modules/antd/lib/grid/hooks/useBreakpoint.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/slicedToArray.js\"));\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar _responsiveObserve = _interopRequireDefault(__webpack_require__(/*! ../../_util/responsiveObserve */ \"./node_modules/antd/lib/_util/responsiveObserve.js\"));\n\nfunction useBreakpoint() {\n  var _useState = (0, _react.useState)({}),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      screens = _useState2[0],\n      setScreens = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    var token = _responsiveObserve[\"default\"].subscribe(function (supportScreens) {\n      setScreens(supportScreens);\n    });\n\n    return function () {\n      return _responsiveObserve[\"default\"].unsubscribe(token);\n    };\n  }, []);\n  return screens;\n}\n\nvar _default = useBreakpoint;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYW50ZC9saWIvZ3JpZC9ob29rcy91c2VCcmVha3BvaW50LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9hbnRkL2xpYi9ncmlkL2hvb2tzL3VzZUJyZWFrcG9pbnQuanM/MTE2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcblxudmFyIF9zbGljZWRUb0FycmF5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvc2xpY2VkVG9BcnJheVwiKSk7XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5cbnZhciBfcmVzcG9uc2l2ZU9ic2VydmUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi9fdXRpbC9yZXNwb25zaXZlT2JzZXJ2ZVwiKSk7XG5cbmZ1bmN0aW9uIHVzZUJyZWFrcG9pbnQoKSB7XG4gIHZhciBfdXNlU3RhdGUgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKSh7fSksXG4gICAgICBfdXNlU3RhdGUyID0gKDAsIF9zbGljZWRUb0FycmF5MltcImRlZmF1bHRcIl0pKF91c2VTdGF0ZSwgMiksXG4gICAgICBzY3JlZW5zID0gX3VzZVN0YXRlMlswXSxcbiAgICAgIHNldFNjcmVlbnMgPSBfdXNlU3RhdGUyWzFdO1xuXG4gICgwLCBfcmVhY3QudXNlRWZmZWN0KShmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHRva2VuID0gX3Jlc3BvbnNpdmVPYnNlcnZlW1wiZGVmYXVsdFwiXS5zdWJzY3JpYmUoZnVuY3Rpb24gKHN1cHBvcnRTY3JlZW5zKSB7XG4gICAgICBzZXRTY3JlZW5zKHN1cHBvcnRTY3JlZW5zKTtcbiAgICB9KTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX3Jlc3BvbnNpdmVPYnNlcnZlW1wiZGVmYXVsdFwiXS51bnN1YnNjcmliZSh0b2tlbik7XG4gICAgfTtcbiAgfSwgW10pO1xuICByZXR1cm4gc2NyZWVucztcbn1cblxudmFyIF9kZWZhdWx0ID0gdXNlQnJlYWtwb2ludDtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/antd/lib/grid/hooks/useBreakpoint.js\n");

/***/ }),

/***/ "./node_modules/antd/lib/grid/index.js":
/*!*********************************************!*\
  !*** ./node_modules/antd/lib/grid/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"Row\", ({\n  enumerable: true,\n  get: function get() {\n    return _row[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"Col\", ({\n  enumerable: true,\n  get: function get() {\n    return _col[\"default\"];\n  }\n}));\nexports[\"default\"] = void 0;\n\nvar _row = _interopRequireDefault(__webpack_require__(/*! ./row */ \"./node_modules/antd/lib/grid/row.js\"));\n\nvar _col = _interopRequireDefault(__webpack_require__(/*! ./col */ \"./node_modules/antd/lib/grid/col.js\"));\n\nvar _useBreakpoint = _interopRequireDefault(__webpack_require__(/*! ./hooks/useBreakpoint */ \"./node_modules/antd/lib/grid/hooks/useBreakpoint.js\"));\n\nvar _default = {\n  useBreakpoint: _useBreakpoint[\"default\"]\n};\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYW50ZC9saWIvZ3JpZC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL2FudGQvbGliL2dyaWQvaW5kZXguanM/YmUxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSb3dcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX3Jvd1tcImRlZmF1bHRcIl07XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29sXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9jb2xbXCJkZWZhdWx0XCJdO1xuICB9XG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG52YXIgX3JvdyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vcm93XCIpKTtcblxudmFyIF9jb2wgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2NvbFwiKSk7XG5cbnZhciBfdXNlQnJlYWtwb2ludCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vaG9va3MvdXNlQnJlYWtwb2ludFwiKSk7XG5cbnZhciBfZGVmYXVsdCA9IHtcbiAgdXNlQnJlYWtwb2ludDogX3VzZUJyZWFrcG9pbnRbXCJkZWZhdWx0XCJdXG59O1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/antd/lib/grid/index.js\n");

/***/ }),

/***/ "./node_modules/antd/lib/row/index.js":
/*!********************************************!*\
  !*** ./node_modules/antd/lib/row/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _grid = __webpack_require__(/*! ../grid */ \"./node_modules/antd/lib/grid/index.js\");\n\nvar _default = _grid.Row;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYW50ZC9saWIvcm93L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9hbnRkL2xpYi9yb3cvaW5kZXguanM/ZjcxMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG52YXIgX2dyaWQgPSByZXF1aXJlKFwiLi4vZ3JpZFwiKTtcblxudmFyIF9kZWZhdWx0ID0gX2dyaWQuUm93O1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/antd/lib/row/index.js\n");

/***/ }),

/***/ "./src/components/Datasource/DatasourceEditor.jsx":
/*!********************************************************!*\
  !*** ./src/components/Datasource/DatasourceEditor.jsx ***!
  \********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rison */ \"./node_modules/rison/js/rison.js\");\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(rison__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var src_components_Radio__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/Radio */ \"./src/components/Radio/index.tsx\");\n/* harmony import */ var src_components_Card__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/Card */ \"./src/components/Card/index.tsx\");\n/* harmony import */ var src_components_Alert__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/Alert */ \"./src/components/Alert/index.tsx\");\n/* harmony import */ var src_components_Badge__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/components/Badge */ \"./src/components/Badge/index.tsx\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! shortid */ \"./node_modules/shortid/index.js\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(shortid__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/connection/SupersetClient.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @superset-ui/core */ \"./node_modules/@emotion/react/dist/emotion-element-99289b21.browser.esm.js\");\n/* harmony import */ var src_components__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/components */ \"./src/components/index.ts\");\n/* harmony import */ var src_components_Form__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/components/Form */ \"./src/components/Form/index.tsx\");\n/* harmony import */ var src_components_Button__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/components/Button */ \"./src/components/Button/index.tsx\");\n/* harmony import */ var src_components_Tabs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/components/Tabs */ \"./src/components/Tabs/index.ts\");\n/* harmony import */ var src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/components/CertifiedBadge */ \"./src/components/CertifiedBadge/index.tsx\");\n/* harmony import */ var src_components_WarningIconWithTooltip__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/components/WarningIconWithTooltip */ \"./src/components/WarningIconWithTooltip/index.tsx\");\n/* harmony import */ var src_components_DatabaseSelector__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/components/DatabaseSelector */ \"./src/components/DatabaseSelector/index.tsx\");\n/* harmony import */ var src_components_Label__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/components/Label */ \"./src/components/Label/index.tsx\");\n/* harmony import */ var src_components_Loading__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/components/Loading */ \"./src/components/Loading/index.tsx\");\n/* harmony import */ var src_components_TableSelector__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/components/TableSelector */ \"./src/components/TableSelector/index.tsx\");\n/* harmony import */ var src_components_EditableTitle__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/components/EditableTitle */ \"./src/components/EditableTitle/index.tsx\");\n/* harmony import */ var src_utils_getClientErrorObject__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! src/utils/getClientErrorObject */ \"./src/utils/getClientErrorObject.ts\");\n/* harmony import */ var src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! src/explore/components/controls/CheckboxControl */ \"./src/explore/components/controls/CheckboxControl.jsx\");\n/* harmony import */ var src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! src/explore/components/controls/TextControl */ \"./src/explore/components/controls/TextControl/index.tsx\");\n/* harmony import */ var src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! src/explore/components/controls/TextAreaControl */ \"./src/explore/components/controls/TextAreaControl.jsx\");\n/* harmony import */ var src_explore_components_controls_SpatialControl__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! src/explore/components/controls/SpatialControl */ \"./src/explore/components/controls/SpatialControl.jsx\");\n/* harmony import */ var src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! src/components/MessageToasts/withToasts */ \"./src/components/MessageToasts/withToasts.tsx\");\n/* harmony import */ var src_featureFlags__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! src/featureFlags */ \"./src/featureFlags.ts\");\n/* harmony import */ var src_components_Icons__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! src/components/Icons */ \"./src/components/Icons/index.tsx\");\n/* harmony import */ var _CollectionTable__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./CollectionTable */ \"./src/components/Datasource/CollectionTable.tsx\");\n/* harmony import */ var _Fieldset__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./Fieldset */ \"./src/components/Datasource/Fieldset.tsx\");\n/* harmony import */ var _Field__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./Field */ \"./src/components/Datasource/Field.tsx\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst DatasourceContainer = _superset_ui_core__WEBPACK_IMPORTED_MODULE_30__.styled.div`\n  .change-warning {\n    margin: 16px 10px 0;\n    color: ${({ theme }) => theme.colors.warning.base};\n  }\n\n  .change-warning .bold {\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n  }\n\n  .form-group.has-feedback > .help-block {\n    margin-top: 8px;\n  }\n\n  .form-group.form-group-md {\n    margin-bottom: 8px;\n  }\n`;\n\nconst FlexRowContainer = _superset_ui_core__WEBPACK_IMPORTED_MODULE_30__.styled.div`\n  align-items: center;\n  display: flex;\n\n  svg {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst StyledTableTabs = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_30__.styled)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_11__[\"default\"])`\n  overflow: visible;\n  .ant-tabs-content-holder {\n    overflow: visible;\n  }\n`;\n\nconst StyledBadge = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_30__.styled)(src_components_Badge__WEBPACK_IMPORTED_MODULE_6__[\"default\"])`\n  .ant-badge-count {\n    line-height: ${({ theme }) => theme.gridUnit * 4}px;\n    height: ${({ theme }) => theme.gridUnit * 4}px;\n    margin-left: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst EditLockContainer = _superset_ui_core__WEBPACK_IMPORTED_MODULE_30__.styled.div`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  display: flex;\n  align-items: center;\n  a {\n    padding: 0 10px;\n  }\n`;\n\nconst ColumnButtonWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_30__.styled.div`\n  text-align: right;\n  ${({ theme }) => `margin-bottom: ${theme.gridUnit * 2}px`}\n`;\n\nconst StyledLabelWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_30__.styled.div`\n  display: flex;\n  align-items: center;\n  span {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst StyledColumnsTabWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_30__.styled.div`\n  .table > tbody > tr > td {\n    vertical-align: middle;\n  }\n\n  .ant-tag {\n    margin-top: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst checkboxGenerator = (d, onChange) =>\n(0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], { value: d, onChange: onChange });\n\nconst DATA_TYPES = [\n{ value: 'STRING', label: 'STRING' },\n{ value: 'NUMERIC', label: 'NUMERIC' },\n{ value: 'DATETIME', label: 'DATETIME' },\n{ value: 'BOOLEAN', label: 'BOOLEAN' }];\n\n\nconst DATASOURCE_TYPES_ARR = [\n{ key: 'physical', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Physical (table or view)') },\n{ key: 'virtual', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Virtual (SQL)') }];\n\nconst DATASOURCE_TYPES = {};\nDATASOURCE_TYPES_ARR.forEach((o) => {\n  DATASOURCE_TYPES[o.key] = o;\n});var _ref =  false ? 0 : { name: \"l0hchv-CollectionTabTitle\", styles: \"display:flex;align-items:center;label:CollectionTabTitle;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\nfunction CollectionTabTitle({ title, collection }) {\n  return (\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"div\", {\n      css: _ref,\n      \"data-test\": `collection-tab-${title}` },\n\n    title, ' ',\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(StyledBadge, { count: collection ? collection.length : 0, showZero: true })));\n\n\n}\n\nCollectionTabTitle.propTypes = {\n  title: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n  collection: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().array) };\n\n\nfunction ColumnCollectionTable({\n  columns,\n  datasource,\n  onColumnsChange,\n  onDatasourceChange,\n  editableColumnName,\n  showExpression,\n  allowAddItem,\n  allowEditDataType,\n  itemGenerator })\n{\n  return (\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_CollectionTable__WEBPACK_IMPORTED_MODULE_27__[\"default\"], {\n      collection: columns,\n      tableColumns: [\n      'column_name',\n      'type',\n      'is_dttm',\n      'main_dttm_col',\n      'filterable',\n      'groupby'],\n\n      sortColumns: [\n      'column_name',\n      'type',\n      'is_dttm',\n      'main_dttm_col',\n      'filterable',\n      'groupby'],\n\n      allowDeletes: true,\n      allowAddItem: allowAddItem,\n      itemGenerator: itemGenerator,\n      stickyHeader: true,\n      expandFieldset:\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(FormContainer, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Fieldset__WEBPACK_IMPORTED_MODULE_28__[\"default\"], { compact: true },\n      showExpression &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"expression\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('SQL expression'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n          language: \"markdown\",\n          offerEditInModal: false }) }),\n\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"verbose_name\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Label'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n          controlId: \"verbose_name\",\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Label') }) }),\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"description\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Description'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n          controlId: \"description\",\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Description') }) }),\n\n\n\n      allowEditDataType &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"type\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Data type'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_8__.Select, {\n          ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Data type'),\n          options: DATA_TYPES,\n          name: \"type\",\n          allowNewOptions: true,\n          allowClear: true }) }),\n\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"python_date_format\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Datetime format'),\n        description:\n        /* Note the fragmented translations may not work. */\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"div\", null,\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('The pattern of timestamp format. For strings use '),\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"a\", { href: \"https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior\" },\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Python datetime string pattern')),\n\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)(' expression which needs to adhere to the '),\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"a\", { href: \"https://en.wikipedia.org/wiki/ISO_8601\" },\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('ISO 8601')),\n\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)(` standard to ensure that the lexicographical ordering\n                      coincides with the chronological ordering. If the\n                      timestamp format does not adhere to the ISO 8601 standard\n                      you will need to define an expression and type for\n                      transforming the string into a date or timestamp. Note\n                      currently time zones are not supported. If time is stored\n                      in epoch format, put \\`epoch_s\\` or \\`epoch_ms\\`. If no pattern\n                      is specified we fall back to using the optional defaults on a per\n                      database/column name level via the extra parameter.`)),\n\n\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n          controlId: \"python_date_format\",\n          placeholder: \"%Y/%m/%d\" }) }),\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"certified_by\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Certified By'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Person or group that has certified this metric'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n          controlId: \"certified\",\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Certified by') }) }),\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"certification_details\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Certification details'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Details of the certification'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n          controlId: \"certificationDetails\",\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Certification details') }) }))),\n\n\n\n\n\n\n      columnLabels: {\n        column_name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Column'),\n        type: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Data type'),\n        groupby: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Is dimension'),\n        is_dttm: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Is temporal'),\n        main_dttm_col: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Default datetime'),\n        filterable: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Is filterable') },\n\n      onChange: onColumnsChange,\n      itemRenderers: {\n        column_name: (v, onItemChange, _, record) =>\n        editableColumnName ?\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(StyledLabelWrapper, null,\n        record.is_certified &&\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n          certifiedBy: record.certified_by,\n          details: record.certification_details }),\n\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], { value: v, onChange: onItemChange })) :\n\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(StyledLabelWrapper, null,\n        record.is_certified &&\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n          certifiedBy: record.certified_by,\n          details: record.certification_details }),\n\n\n        v),\n\n\n        main_dttm_col: (value, _onItemChange, _label, record) => {\n          const checked = datasource.main_dttm_col === record.column_name;\n          const disabled = !columns.find(\n          (column) => column.column_name === record.column_name).\n          is_dttm;\n          return (\n            (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Radio__WEBPACK_IMPORTED_MODULE_3__.Radio, {\n              \"data-test\": `radio-default-dttm-${record.column_name}`,\n              checked: checked,\n              disabled: disabled,\n              onChange: () =>\n              onDatasourceChange({\n                ...datasource,\n                main_dttm_col: record.column_name }) }));\n\n\n\n\n        },\n        type: (d) => d ? (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Label__WEBPACK_IMPORTED_MODULE_15__[\"default\"], null, d) : null,\n        is_dttm: checkboxGenerator,\n        filterable: checkboxGenerator,\n        groupby: checkboxGenerator } }));\n\n\n\n}\nColumnCollectionTable.propTypes = {\n  columns: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().array.isRequired),\n  datasource: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().object.isRequired),\n  onColumnsChange: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func.isRequired),\n  onDatasourceChange: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func.isRequired),\n  editableColumnName: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n  showExpression: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n  allowAddItem: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n  allowEditDataType: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n  itemGenerator: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func) };\n\nColumnCollectionTable.defaultProps = {\n  editableColumnName: false,\n  showExpression: false,\n  allowAddItem: false,\n  allowEditDataType: false,\n  itemGenerator: () => ({\n    column_name: '<new column>',\n    filterable: true,\n    groupby: true }) };\n\n\n\nfunction StackedField({ label, formElement }) {\n  return (\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"div\", null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"div\", null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"strong\", null, label)),\n\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"div\", null, formElement)));\n\n\n}\n\nStackedField.propTypes = {\n  label: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n  formElement: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().node) };\n\n\nfunction FormContainer({ children }) {\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Card__WEBPACK_IMPORTED_MODULE_4__[\"default\"], { padded: true }, children);\n}\n\nFormContainer.propTypes = {\n  children: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().node) };\n\n\nconst propTypes = {\n  datasource: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().object.isRequired),\n  onChange: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func),\n  addSuccessToast: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func.isRequired),\n  addDangerToast: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func.isRequired) };\n\n\nconst defaultProps = {\n  onChange: () => {} };\n\n\nfunction OwnersSelector({ datasource, onChange }) {\n  const loadOptions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((search = '', page, pageSize) => {\n    const query = rison__WEBPACK_IMPORTED_MODULE_0___default().encode({ filter: search, page, page_size: pageSize });\n    return _superset_ui_core__WEBPACK_IMPORTED_MODULE_33__[\"default\"].get({\n      endpoint: `/api/v1/dataset/related/owners?q=${query}` }).\n    then((response) => ({\n      data: response.json.result.map((item) => ({\n        value: item.value,\n        label: item.text })),\n\n      totalCount: response.json.count }));\n\n  }, []);\n\n  return (\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_8__.Select, {\n      ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Select owners'),\n      mode: \"multiple\",\n      name: \"owners\",\n      value: datasource.owners,\n      options: loadOptions,\n      onChange: onChange,\n      header: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_9__.FormLabel, null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Owners')),\n      allowClear: true }));\n\n\n}__signature__(OwnersSelector, \"useCallback{loadOptions}\");var _ref2 =  false ? 0 : { name: \"17jm38f-DatasourceEditor\", styles: \"margin-top:8px;label:DatasourceEditor;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFx3b3JrXFxQdWJsaWNQcm9qZWN0XFxzdXBlcnNldFxcc3VwZXJzZXQtZnJvbnRlbmRcXHNyY1xcY29tcG9uZW50c1xcRGF0YXNvdXJjZVxcRGF0YXNvdXJjZUVkaXRvci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBczVCNkIiLCJmaWxlIjoiRDpcXHdvcmtcXFB1YmxpY1Byb2plY3RcXHN1cGVyc2V0XFxzdXBlcnNldC1mcm9udGVuZFxcc3JjXFxjb21wb25lbnRzXFxEYXRhc291cmNlXFxEYXRhc291cmNlRWRpdG9yLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXHJcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxyXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxyXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXHJcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcclxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXHJcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxyXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxyXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxyXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcclxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xyXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCByaXNvbiBmcm9tICdyaXNvbic7XHJcbmltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHsgUmFkaW8gfSBmcm9tICdzcmMvY29tcG9uZW50cy9SYWRpbyc7XHJcbmltcG9ydCBDYXJkIGZyb20gJ3NyYy9jb21wb25lbnRzL0NhcmQnO1xyXG5pbXBvcnQgQWxlcnQgZnJvbSAnc3JjL2NvbXBvbmVudHMvQWxlcnQnO1xyXG5pbXBvcnQgQmFkZ2UgZnJvbSAnc3JjL2NvbXBvbmVudHMvQmFkZ2UnO1xyXG5pbXBvcnQgc2hvcnRpZCBmcm9tICdzaG9ydGlkJztcclxuaW1wb3J0IHsgc3R5bGVkLCBTdXBlcnNldENsaWVudCwgdCwgd2l0aFRoZW1lIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xyXG5pbXBvcnQgeyBTZWxlY3QsIFJvdywgQ29sIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMnO1xyXG5pbXBvcnQgeyBGb3JtTGFiZWwgfSBmcm9tICdzcmMvY29tcG9uZW50cy9Gb3JtJztcclxuaW1wb3J0IEJ1dHRvbiBmcm9tICdzcmMvY29tcG9uZW50cy9CdXR0b24nO1xyXG5pbXBvcnQgVGFicyBmcm9tICdzcmMvY29tcG9uZW50cy9UYWJzJztcclxuaW1wb3J0IENlcnRpZmllZEJhZGdlIGZyb20gJ3NyYy9jb21wb25lbnRzL0NlcnRpZmllZEJhZGdlJztcclxuaW1wb3J0IFdhcm5pbmdJY29uV2l0aFRvb2x0aXAgZnJvbSAnc3JjL2NvbXBvbmVudHMvV2FybmluZ0ljb25XaXRoVG9vbHRpcCc7XHJcbmltcG9ydCBEYXRhYmFzZVNlbGVjdG9yIGZyb20gJ3NyYy9jb21wb25lbnRzL0RhdGFiYXNlU2VsZWN0b3InO1xyXG5pbXBvcnQgTGFiZWwgZnJvbSAnc3JjL2NvbXBvbmVudHMvTGFiZWwnO1xyXG5pbXBvcnQgTG9hZGluZyBmcm9tICdzcmMvY29tcG9uZW50cy9Mb2FkaW5nJztcclxuaW1wb3J0IFRhYmxlU2VsZWN0b3IgZnJvbSAnc3JjL2NvbXBvbmVudHMvVGFibGVTZWxlY3Rvcic7XHJcbmltcG9ydCBFZGl0YWJsZVRpdGxlIGZyb20gJ3NyYy9jb21wb25lbnRzL0VkaXRhYmxlVGl0bGUnO1xyXG5pbXBvcnQgeyBnZXRDbGllbnRFcnJvck9iamVjdCB9IGZyb20gJ3NyYy91dGlscy9nZXRDbGllbnRFcnJvck9iamVjdCc7XHJcbmltcG9ydCBDaGVja2JveENvbnRyb2wgZnJvbSAnc3JjL2V4cGxvcmUvY29tcG9uZW50cy9jb250cm9scy9DaGVja2JveENvbnRyb2wnO1xyXG5pbXBvcnQgVGV4dENvbnRyb2wgZnJvbSAnc3JjL2V4cGxvcmUvY29tcG9uZW50cy9jb250cm9scy9UZXh0Q29udHJvbCc7XHJcbmltcG9ydCBUZXh0QXJlYUNvbnRyb2wgZnJvbSAnc3JjL2V4cGxvcmUvY29tcG9uZW50cy9jb250cm9scy9UZXh0QXJlYUNvbnRyb2wnO1xyXG5pbXBvcnQgU3BhdGlhbENvbnRyb2wgZnJvbSAnc3JjL2V4cGxvcmUvY29tcG9uZW50cy9jb250cm9scy9TcGF0aWFsQ29udHJvbCc7XHJcbmltcG9ydCB3aXRoVG9hc3RzIGZyb20gJ3NyYy9jb21wb25lbnRzL01lc3NhZ2VUb2FzdHMvd2l0aFRvYXN0cyc7XHJcbmltcG9ydCB7IEZlYXR1cmVGbGFnLCBpc0ZlYXR1cmVFbmFibGVkIH0gZnJvbSAnc3JjL2ZlYXR1cmVGbGFncyc7XHJcbmltcG9ydCBJY29ucyBmcm9tICdzcmMvY29tcG9uZW50cy9JY29ucyc7XHJcbmltcG9ydCBDb2xsZWN0aW9uVGFibGUgZnJvbSAnLi9Db2xsZWN0aW9uVGFibGUnO1xyXG5pbXBvcnQgRmllbGRzZXQgZnJvbSAnLi9GaWVsZHNldCc7XHJcbmltcG9ydCBGaWVsZCBmcm9tICcuL0ZpZWxkJztcclxuXHJcbmNvbnN0IERhdGFzb3VyY2VDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIC5jaGFuZ2Utd2FybmluZyB7XHJcbiAgICBtYXJnaW46IDE2cHggMTBweCAwO1xyXG4gICAgY29sb3I6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuY29sb3JzLndhcm5pbmcuYmFzZX07XHJcbiAgfVxyXG5cclxuICAuY2hhbmdlLXdhcm5pbmcgLmJvbGQge1xyXG4gICAgZm9udC13ZWlnaHQ6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUudHlwb2dyYXBoeS53ZWlnaHRzLmJvbGR9O1xyXG4gIH1cclxuXHJcbiAgLmZvcm0tZ3JvdXAuaGFzLWZlZWRiYWNrID4gLmhlbHAtYmxvY2sge1xyXG4gICAgbWFyZ2luLXRvcDogOHB4O1xyXG4gIH1cclxuXHJcbiAgLmZvcm0tZ3JvdXAuZm9ybS1ncm91cC1tZCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgRmxleFJvd0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG5cclxuICBzdmcge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0fXB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IFN0eWxlZFRhYmxlVGFicyA9IHN0eWxlZChUYWJzKWBcclxuICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAuYW50LXRhYnMtY29udGVudC1ob2xkZXIge1xyXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3R5bGVkQmFkZ2UgPSBzdHlsZWQoQmFkZ2UpYFxyXG4gIC5hbnQtYmFkZ2UtY291bnQge1xyXG4gICAgbGluZS1oZWlnaHQ6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuZ3JpZFVuaXQgKiA0fXB4O1xyXG4gICAgaGVpZ2h0OiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0ICogNH1weDtcclxuICAgIG1hcmdpbi1sZWZ0OiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0fXB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IEVkaXRMb2NrQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBmb250LXNpemU6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUudHlwb2dyYXBoeS5zaXplcy5zfXB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBhIHtcclxuICAgIHBhZGRpbmc6IDAgMTBweDtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBDb2x1bW5CdXR0b25XcmFwcGVyID0gc3R5bGVkLmRpdmBcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAkeyh7IHRoZW1lIH0pID0+IGBtYXJnaW4tYm90dG9tOiAke3RoZW1lLmdyaWRVbml0ICogMn1weGB9XHJcbmA7XHJcblxyXG5jb25zdCBTdHlsZWRMYWJlbFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBzcGFuIHtcclxuICAgIG1hcmdpbi1yaWdodDogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5ncmlkVW5pdH1weDtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBTdHlsZWRDb2x1bW5zVGFiV3JhcHBlciA9IHN0eWxlZC5kaXZgXHJcbiAgLnRhYmxlID4gdGJvZHkgPiB0ciA+IHRkIHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgfVxyXG5cclxuICAuYW50LXRhZyB7XHJcbiAgICBtYXJnaW4tdG9wOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0fXB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IGNoZWNrYm94R2VuZXJhdG9yID0gKGQsIG9uQ2hhbmdlKSA9PiAoXHJcbiAgPENoZWNrYm94Q29udHJvbCB2YWx1ZT17ZH0gb25DaGFuZ2U9e29uQ2hhbmdlfSAvPlxyXG4pO1xyXG5jb25zdCBEQVRBX1RZUEVTID0gW1xyXG4gIHsgdmFsdWU6ICdTVFJJTkcnLCBsYWJlbDogJ1NUUklORycgfSxcclxuICB7IHZhbHVlOiAnTlVNRVJJQycsIGxhYmVsOiAnTlVNRVJJQycgfSxcclxuICB7IHZhbHVlOiAnREFURVRJTUUnLCBsYWJlbDogJ0RBVEVUSU1FJyB9LFxyXG4gIHsgdmFsdWU6ICdCT09MRUFOJywgbGFiZWw6ICdCT09MRUFOJyB9LFxyXG5dO1xyXG5cclxuY29uc3QgREFUQVNPVVJDRV9UWVBFU19BUlIgPSBbXHJcbiAgeyBrZXk6ICdwaHlzaWNhbCcsIGxhYmVsOiB0KCdQaHlzaWNhbCAodGFibGUgb3IgdmlldyknKSB9LFxyXG4gIHsga2V5OiAndmlydHVhbCcsIGxhYmVsOiB0KCdWaXJ0dWFsIChTUUwpJykgfSxcclxuXTtcclxuY29uc3QgREFUQVNPVVJDRV9UWVBFUyA9IHt9O1xyXG5EQVRBU09VUkNFX1RZUEVTX0FSUi5mb3JFYWNoKG8gPT4ge1xyXG4gIERBVEFTT1VSQ0VfVFlQRVNbby5rZXldID0gbztcclxufSk7XHJcblxyXG5mdW5jdGlvbiBDb2xsZWN0aW9uVGFiVGl0bGUoeyB0aXRsZSwgY29sbGVjdGlvbiB9KSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXZcclxuICAgICAgY3NzPXt7IGRpc3BsYXk6ICdmbGV4JywgYWxpZ25JdGVtczogJ2NlbnRlcicgfX1cclxuICAgICAgZGF0YS10ZXN0PXtgY29sbGVjdGlvbi10YWItJHt0aXRsZX1gfVxyXG4gICAgPlxyXG4gICAgICB7dGl0bGV9eycgJ31cclxuICAgICAgPFN0eWxlZEJhZGdlIGNvdW50PXtjb2xsZWN0aW9uID8gY29sbGVjdGlvbi5sZW5ndGggOiAwfSBzaG93WmVybyAvPlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufVxyXG5cclxuQ29sbGVjdGlvblRhYlRpdGxlLnByb3BUeXBlcyA9IHtcclxuICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICBjb2xsZWN0aW9uOiBQcm9wVHlwZXMuYXJyYXksXHJcbn07XHJcblxyXG5mdW5jdGlvbiBDb2x1bW5Db2xsZWN0aW9uVGFibGUoe1xyXG4gIGNvbHVtbnMsXHJcbiAgZGF0YXNvdXJjZSxcclxuICBvbkNvbHVtbnNDaGFuZ2UsXHJcbiAgb25EYXRhc291cmNlQ2hhbmdlLFxyXG4gIGVkaXRhYmxlQ29sdW1uTmFtZSxcclxuICBzaG93RXhwcmVzc2lvbixcclxuICBhbGxvd0FkZEl0ZW0sXHJcbiAgYWxsb3dFZGl0RGF0YVR5cGUsXHJcbiAgaXRlbUdlbmVyYXRvcixcclxufSkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8Q29sbGVjdGlvblRhYmxlXHJcbiAgICAgIGNvbGxlY3Rpb249e2NvbHVtbnN9XHJcbiAgICAgIHRhYmxlQ29sdW1ucz17W1xyXG4gICAgICAgICdjb2x1bW5fbmFtZScsXHJcbiAgICAgICAgJ3R5cGUnLFxyXG4gICAgICAgICdpc19kdHRtJyxcclxuICAgICAgICAnbWFpbl9kdHRtX2NvbCcsXHJcbiAgICAgICAgJ2ZpbHRlcmFibGUnLFxyXG4gICAgICAgICdncm91cGJ5JyxcclxuICAgICAgXX1cclxuICAgICAgc29ydENvbHVtbnM9e1tcclxuICAgICAgICAnY29sdW1uX25hbWUnLFxyXG4gICAgICAgICd0eXBlJyxcclxuICAgICAgICAnaXNfZHR0bScsXHJcbiAgICAgICAgJ21haW5fZHR0bV9jb2wnLFxyXG4gICAgICAgICdmaWx0ZXJhYmxlJyxcclxuICAgICAgICAnZ3JvdXBieScsXHJcbiAgICAgIF19XHJcbiAgICAgIGFsbG93RGVsZXRlc1xyXG4gICAgICBhbGxvd0FkZEl0ZW09e2FsbG93QWRkSXRlbX1cclxuICAgICAgaXRlbUdlbmVyYXRvcj17aXRlbUdlbmVyYXRvcn1cclxuICAgICAgc3RpY2t5SGVhZGVyXHJcbiAgICAgIGV4cGFuZEZpZWxkc2V0PXtcclxuICAgICAgICA8Rm9ybUNvbnRhaW5lcj5cclxuICAgICAgICAgIDxGaWVsZHNldCBjb21wYWN0PlxyXG4gICAgICAgICAgICB7c2hvd0V4cHJlc3Npb24gJiYgKFxyXG4gICAgICAgICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgICAgICAgZmllbGRLZXk9XCJleHByZXNzaW9uXCJcclxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdTUUwgZXhwcmVzc2lvbicpfVxyXG4gICAgICAgICAgICAgICAgY29udHJvbD17XHJcbiAgICAgICAgICAgICAgICAgIDxUZXh0QXJlYUNvbnRyb2xcclxuICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZT1cIm1hcmtkb3duXCJcclxuICAgICAgICAgICAgICAgICAgICBvZmZlckVkaXRJbk1vZGFsPXtmYWxzZX1cclxuICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICBmaWVsZEtleT1cInZlcmJvc2VfbmFtZVwiXHJcbiAgICAgICAgICAgICAgbGFiZWw9e3QoJ0xhYmVsJyl9XHJcbiAgICAgICAgICAgICAgY29udHJvbD17XHJcbiAgICAgICAgICAgICAgICA8VGV4dENvbnRyb2xcclxuICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwidmVyYm9zZV9uYW1lXCJcclxuICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e3QoJ0xhYmVsJyl9XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICAgICAgZmllbGRLZXk9XCJkZXNjcmlwdGlvblwiXHJcbiAgICAgICAgICAgICAgbGFiZWw9e3QoJ0Rlc2NyaXB0aW9uJyl9XHJcbiAgICAgICAgICAgICAgY29udHJvbD17XHJcbiAgICAgICAgICAgICAgICA8VGV4dENvbnRyb2xcclxuICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwiZGVzY3JpcHRpb25cIlxyXG4gICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnRGVzY3JpcHRpb24nKX1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICB7YWxsb3dFZGl0RGF0YVR5cGUgJiYgKFxyXG4gICAgICAgICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgICAgICAgZmllbGRLZXk9XCJ0eXBlXCJcclxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdEYXRhIHR5cGUnKX1cclxuICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xyXG4gICAgICAgICAgICAgICAgICA8U2VsZWN0XHJcbiAgICAgICAgICAgICAgICAgICAgYXJpYUxhYmVsPXt0KCdEYXRhIHR5cGUnKX1cclxuICAgICAgICAgICAgICAgICAgICBvcHRpb25zPXtEQVRBX1RZUEVTfVxyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU9XCJ0eXBlXCJcclxuICAgICAgICAgICAgICAgICAgICBhbGxvd05ld09wdGlvbnNcclxuICAgICAgICAgICAgICAgICAgICBhbGxvd0NsZWFyXHJcbiAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICAgICAgZmllbGRLZXk9XCJweXRob25fZGF0ZV9mb3JtYXRcIlxyXG4gICAgICAgICAgICAgIGxhYmVsPXt0KCdEYXRldGltZSBmb3JtYXQnKX1cclxuICAgICAgICAgICAgICBkZXNjcmlwdGlvbj17XHJcbiAgICAgICAgICAgICAgICAvKiBOb3RlIHRoZSBmcmFnbWVudGVkIHRyYW5zbGF0aW9ucyBtYXkgbm90IHdvcmsuICovXHJcbiAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICB7dCgnVGhlIHBhdHRlcm4gb2YgdGltZXN0YW1wIGZvcm1hdC4gRm9yIHN0cmluZ3MgdXNlICcpfVxyXG4gICAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMi9saWJyYXJ5L2RhdGV0aW1lLmh0bWwjc3RyZnRpbWUtc3RycHRpbWUtYmVoYXZpb3JcIj5cclxuICAgICAgICAgICAgICAgICAgICB7dCgnUHl0aG9uIGRhdGV0aW1lIHN0cmluZyBwYXR0ZXJuJyl9XHJcbiAgICAgICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgICAgICAge3QoJyBleHByZXNzaW9uIHdoaWNoIG5lZWRzIHRvIGFkaGVyZSB0byB0aGUgJyl9XHJcbiAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9JU09fODYwMVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIHt0KCdJU08gODYwMScpfVxyXG4gICAgICAgICAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICAgICAgICAgIHt0KGAgc3RhbmRhcmQgdG8gZW5zdXJlIHRoYXQgdGhlIGxleGljb2dyYXBoaWNhbCBvcmRlcmluZ1xyXG4gICAgICAgICAgICAgICAgICAgICAgY29pbmNpZGVzIHdpdGggdGhlIGNocm9ub2xvZ2ljYWwgb3JkZXJpbmcuIElmIHRoZVxyXG4gICAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wIGZvcm1hdCBkb2VzIG5vdCBhZGhlcmUgdG8gdGhlIElTTyA4NjAxIHN0YW5kYXJkXHJcbiAgICAgICAgICAgICAgICAgICAgICB5b3Ugd2lsbCBuZWVkIHRvIGRlZmluZSBhbiBleHByZXNzaW9uIGFuZCB0eXBlIGZvclxyXG4gICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtaW5nIHRoZSBzdHJpbmcgaW50byBhIGRhdGUgb3IgdGltZXN0YW1wLiBOb3RlXHJcbiAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50bHkgdGltZSB6b25lcyBhcmUgbm90IHN1cHBvcnRlZC4gSWYgdGltZSBpcyBzdG9yZWRcclxuICAgICAgICAgICAgICAgICAgICAgIGluIGVwb2NoIGZvcm1hdCwgcHV0IFxcYGVwb2NoX3NcXGAgb3IgXFxgZXBvY2hfbXNcXGAuIElmIG5vIHBhdHRlcm5cclxuICAgICAgICAgICAgICAgICAgICAgIGlzIHNwZWNpZmllZCB3ZSBmYWxsIGJhY2sgdG8gdXNpbmcgdGhlIG9wdGlvbmFsIGRlZmF1bHRzIG9uIGEgcGVyXHJcbiAgICAgICAgICAgICAgICAgICAgICBkYXRhYmFzZS9jb2x1bW4gbmFtZSBsZXZlbCB2aWEgdGhlIGV4dHJhIHBhcmFtZXRlci5gKX1cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgIDxUZXh0Q29udHJvbFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sSWQ9XCJweXRob25fZGF0ZV9mb3JtYXRcIlxyXG4gICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIiVZLyVtLyVkXCJcclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICBmaWVsZEtleT1cImNlcnRpZmllZF9ieVwiXHJcbiAgICAgICAgICAgICAgbGFiZWw9e3QoJ0NlcnRpZmllZCBCeScpfVxyXG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KCdQZXJzb24gb3IgZ3JvdXAgdGhhdCBoYXMgY2VydGlmaWVkIHRoaXMgbWV0cmljJyl9XHJcbiAgICAgICAgICAgICAgY29udHJvbD17XHJcbiAgICAgICAgICAgICAgICA8VGV4dENvbnRyb2xcclxuICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwiY2VydGlmaWVkXCJcclxuICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e3QoJ0NlcnRpZmllZCBieScpfVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgICAgIGZpZWxkS2V5PVwiY2VydGlmaWNhdGlvbl9kZXRhaWxzXCJcclxuICAgICAgICAgICAgICBsYWJlbD17dCgnQ2VydGlmaWNhdGlvbiBkZXRhaWxzJyl9XHJcbiAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoJ0RldGFpbHMgb2YgdGhlIGNlcnRpZmljYXRpb24nKX1cclxuICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgIDxUZXh0Q29udHJvbFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sSWQ9XCJjZXJ0aWZpY2F0aW9uRGV0YWlsc1wiXHJcbiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXt0KCdDZXJ0aWZpY2F0aW9uIGRldGFpbHMnKX1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgPC9GaWVsZHNldD5cclxuICAgICAgICA8L0Zvcm1Db250YWluZXI+XHJcbiAgICAgIH1cclxuICAgICAgY29sdW1uTGFiZWxzPXt7XHJcbiAgICAgICAgY29sdW1uX25hbWU6IHQoJ0NvbHVtbicpLFxyXG4gICAgICAgIHR5cGU6IHQoJ0RhdGEgdHlwZScpLFxyXG4gICAgICAgIGdyb3VwYnk6IHQoJ0lzIGRpbWVuc2lvbicpLFxyXG4gICAgICAgIGlzX2R0dG06IHQoJ0lzIHRlbXBvcmFsJyksXHJcbiAgICAgICAgbWFpbl9kdHRtX2NvbDogdCgnRGVmYXVsdCBkYXRldGltZScpLFxyXG4gICAgICAgIGZpbHRlcmFibGU6IHQoJ0lzIGZpbHRlcmFibGUnKSxcclxuICAgICAgfX1cclxuICAgICAgb25DaGFuZ2U9e29uQ29sdW1uc0NoYW5nZX1cclxuICAgICAgaXRlbVJlbmRlcmVycz17e1xyXG4gICAgICAgIGNvbHVtbl9uYW1lOiAodiwgb25JdGVtQ2hhbmdlLCBfLCByZWNvcmQpID0+XHJcbiAgICAgICAgICBlZGl0YWJsZUNvbHVtbk5hbWUgPyAoXHJcbiAgICAgICAgICAgIDxTdHlsZWRMYWJlbFdyYXBwZXI+XHJcbiAgICAgICAgICAgICAge3JlY29yZC5pc19jZXJ0aWZpZWQgJiYgKFxyXG4gICAgICAgICAgICAgICAgPENlcnRpZmllZEJhZGdlXHJcbiAgICAgICAgICAgICAgICAgIGNlcnRpZmllZEJ5PXtyZWNvcmQuY2VydGlmaWVkX2J5fVxyXG4gICAgICAgICAgICAgICAgICBkZXRhaWxzPXtyZWNvcmQuY2VydGlmaWNhdGlvbl9kZXRhaWxzfVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgIDxUZXh0Q29udHJvbCB2YWx1ZT17dn0gb25DaGFuZ2U9e29uSXRlbUNoYW5nZX0gLz5cclxuICAgICAgICAgICAgPC9TdHlsZWRMYWJlbFdyYXBwZXI+XHJcbiAgICAgICAgICApIDogKFxyXG4gICAgICAgICAgICA8U3R5bGVkTGFiZWxXcmFwcGVyPlxyXG4gICAgICAgICAgICAgIHtyZWNvcmQuaXNfY2VydGlmaWVkICYmIChcclxuICAgICAgICAgICAgICAgIDxDZXJ0aWZpZWRCYWRnZVxyXG4gICAgICAgICAgICAgICAgICBjZXJ0aWZpZWRCeT17cmVjb3JkLmNlcnRpZmllZF9ieX1cclxuICAgICAgICAgICAgICAgICAgZGV0YWlscz17cmVjb3JkLmNlcnRpZmljYXRpb25fZGV0YWlsc31cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgICB7dn1cclxuICAgICAgICAgICAgPC9TdHlsZWRMYWJlbFdyYXBwZXI+XHJcbiAgICAgICAgICApLFxyXG4gICAgICAgIG1haW5fZHR0bV9jb2w6ICh2YWx1ZSwgX29uSXRlbUNoYW5nZSwgX2xhYmVsLCByZWNvcmQpID0+IHtcclxuICAgICAgICAgIGNvbnN0IGNoZWNrZWQgPSBkYXRhc291cmNlLm1haW5fZHR0bV9jb2wgPT09IHJlY29yZC5jb2x1bW5fbmFtZTtcclxuICAgICAgICAgIGNvbnN0IGRpc2FibGVkID0gIWNvbHVtbnMuZmluZChcclxuICAgICAgICAgICAgY29sdW1uID0+IGNvbHVtbi5jb2x1bW5fbmFtZSA9PT0gcmVjb3JkLmNvbHVtbl9uYW1lLFxyXG4gICAgICAgICAgKS5pc19kdHRtO1xyXG4gICAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPFJhZGlvXHJcbiAgICAgICAgICAgICAgZGF0YS10ZXN0PXtgcmFkaW8tZGVmYXVsdC1kdHRtLSR7cmVjb3JkLmNvbHVtbl9uYW1lfWB9XHJcbiAgICAgICAgICAgICAgY2hlY2tlZD17Y2hlY2tlZH1cclxuICAgICAgICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XHJcbiAgICAgICAgICAgICAgb25DaGFuZ2U9eygpID0+XHJcbiAgICAgICAgICAgICAgICBvbkRhdGFzb3VyY2VDaGFuZ2Uoe1xyXG4gICAgICAgICAgICAgICAgICAuLi5kYXRhc291cmNlLFxyXG4gICAgICAgICAgICAgICAgICBtYWluX2R0dG1fY29sOiByZWNvcmQuY29sdW1uX25hbWUsXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICB0eXBlOiBkID0+IChkID8gPExhYmVsPntkfTwvTGFiZWw+IDogbnVsbCksXHJcbiAgICAgICAgaXNfZHR0bTogY2hlY2tib3hHZW5lcmF0b3IsXHJcbiAgICAgICAgZmlsdGVyYWJsZTogY2hlY2tib3hHZW5lcmF0b3IsXHJcbiAgICAgICAgZ3JvdXBieTogY2hlY2tib3hHZW5lcmF0b3IsXHJcbiAgICAgIH19XHJcbiAgICAvPlxyXG4gICk7XHJcbn1cclxuQ29sdW1uQ29sbGVjdGlvblRhYmxlLnByb3BUeXBlcyA9IHtcclxuICBjb2x1bW5zOiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcclxuICBkYXRhc291cmNlOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXHJcbiAgb25Db2x1bW5zQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxyXG4gIG9uRGF0YXNvdXJjZUNoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcclxuICBlZGl0YWJsZUNvbHVtbk5hbWU6IFByb3BUeXBlcy5ib29sLFxyXG4gIHNob3dFeHByZXNzaW9uOiBQcm9wVHlwZXMuYm9vbCxcclxuICBhbGxvd0FkZEl0ZW06IFByb3BUeXBlcy5ib29sLFxyXG4gIGFsbG93RWRpdERhdGFUeXBlOiBQcm9wVHlwZXMuYm9vbCxcclxuICBpdGVtR2VuZXJhdG9yOiBQcm9wVHlwZXMuZnVuYyxcclxufTtcclxuQ29sdW1uQ29sbGVjdGlvblRhYmxlLmRlZmF1bHRQcm9wcyA9IHtcclxuICBlZGl0YWJsZUNvbHVtbk5hbWU6IGZhbHNlLFxyXG4gIHNob3dFeHByZXNzaW9uOiBmYWxzZSxcclxuICBhbGxvd0FkZEl0ZW06IGZhbHNlLFxyXG4gIGFsbG93RWRpdERhdGFUeXBlOiBmYWxzZSxcclxuICBpdGVtR2VuZXJhdG9yOiAoKSA9PiAoe1xyXG4gICAgY29sdW1uX25hbWU6ICc8bmV3IGNvbHVtbj4nLFxyXG4gICAgZmlsdGVyYWJsZTogdHJ1ZSxcclxuICAgIGdyb3VwYnk6IHRydWUsXHJcbiAgfSksXHJcbn07XHJcblxyXG5mdW5jdGlvbiBTdGFja2VkRmllbGQoeyBsYWJlbCwgZm9ybUVsZW1lbnQgfSkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2PlxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIDxzdHJvbmc+e2xhYmVsfTwvc3Ryb25nPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdj57Zm9ybUVsZW1lbnR9PC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59XHJcblxyXG5TdGFja2VkRmllbGQucHJvcFR5cGVzID0ge1xyXG4gIGxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIGZvcm1FbGVtZW50OiBQcm9wVHlwZXMubm9kZSxcclxufTtcclxuXHJcbmZ1bmN0aW9uIEZvcm1Db250YWluZXIoeyBjaGlsZHJlbiB9KSB7XHJcbiAgcmV0dXJuIDxDYXJkIHBhZGRlZD57Y2hpbGRyZW59PC9DYXJkPjtcclxufVxyXG5cclxuRm9ybUNvbnRhaW5lci5wcm9wVHlwZXMgPSB7XHJcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxyXG59O1xyXG5cclxuY29uc3QgcHJvcFR5cGVzID0ge1xyXG4gIGRhdGFzb3VyY2U6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcclxuICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgYWRkU3VjY2Vzc1RvYXN0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxyXG4gIGFkZERhbmdlclRvYXN0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxyXG59O1xyXG5cclxuY29uc3QgZGVmYXVsdFByb3BzID0ge1xyXG4gIG9uQ2hhbmdlOiAoKSA9PiB7fSxcclxufTtcclxuXHJcbmZ1bmN0aW9uIE93bmVyc1NlbGVjdG9yKHsgZGF0YXNvdXJjZSwgb25DaGFuZ2UgfSkge1xyXG4gIGNvbnN0IGxvYWRPcHRpb25zID0gdXNlQ2FsbGJhY2soKHNlYXJjaCA9ICcnLCBwYWdlLCBwYWdlU2l6ZSkgPT4ge1xyXG4gICAgY29uc3QgcXVlcnkgPSByaXNvbi5lbmNvZGUoeyBmaWx0ZXI6IHNlYXJjaCwgcGFnZSwgcGFnZV9zaXplOiBwYWdlU2l6ZSB9KTtcclxuICAgIHJldHVybiBTdXBlcnNldENsaWVudC5nZXQoe1xyXG4gICAgICBlbmRwb2ludDogYC9hcGkvdjEvZGF0YXNldC9yZWxhdGVkL293bmVycz9xPSR7cXVlcnl9YCxcclxuICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4gKHtcclxuICAgICAgZGF0YTogcmVzcG9uc2UuanNvbi5yZXN1bHQubWFwKGl0ZW0gPT4gKHtcclxuICAgICAgICB2YWx1ZTogaXRlbS52YWx1ZSxcclxuICAgICAgICBsYWJlbDogaXRlbS50ZXh0LFxyXG4gICAgICB9KSksXHJcbiAgICAgIHRvdGFsQ291bnQ6IHJlc3BvbnNlLmpzb24uY291bnQsXHJcbiAgICB9KSk7XHJcbiAgfSwgW10pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFNlbGVjdFxyXG4gICAgICBhcmlhTGFiZWw9e3QoJ1NlbGVjdCBvd25lcnMnKX1cclxuICAgICAgbW9kZT1cIm11bHRpcGxlXCJcclxuICAgICAgbmFtZT1cIm93bmVyc1wiXHJcbiAgICAgIHZhbHVlPXtkYXRhc291cmNlLm93bmVyc31cclxuICAgICAgb3B0aW9ucz17bG9hZE9wdGlvbnN9XHJcbiAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cclxuICAgICAgaGVhZGVyPXs8Rm9ybUxhYmVsPnt0KCdPd25lcnMnKX08L0Zvcm1MYWJlbD59XHJcbiAgICAgIGFsbG93Q2xlYXJcclxuICAgIC8+XHJcbiAgKTtcclxufVxyXG5cclxuY2xhc3MgRGF0YXNvdXJjZUVkaXRvciBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQge1xyXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICBzdXBlcihwcm9wcyk7XHJcbiAgICB0aGlzLnN0YXRlID0ge1xyXG4gICAgICBkYXRhc291cmNlOiB7XHJcbiAgICAgICAgLi4ucHJvcHMuZGF0YXNvdXJjZSxcclxuICAgICAgICBvd25lcnM6IHByb3BzLmRhdGFzb3VyY2Uub3duZXJzLm1hcChvd25lciA9PiAoe1xyXG4gICAgICAgICAgdmFsdWU6IG93bmVyLnZhbHVlIHx8IG93bmVyLmlkLFxyXG4gICAgICAgICAgbGFiZWw6IG93bmVyLmxhYmVsIHx8IGAke293bmVyLmZpcnN0X25hbWV9ICR7b3duZXIubGFzdF9uYW1lfWAsXHJcbiAgICAgICAgfSkpLFxyXG4gICAgICAgIG1ldHJpY3M6IHByb3BzLmRhdGFzb3VyY2UubWV0cmljcz8ubWFwKG1ldHJpYyA9PiB7XHJcbiAgICAgICAgICBjb25zdCB7XHJcbiAgICAgICAgICAgIGNlcnRpZmllZF9ieTogY2VydGlmaWVkQnlNZXRyaWMsXHJcbiAgICAgICAgICAgIGNlcnRpZmljYXRpb25fZGV0YWlsczogY2VydGlmaWNhdGlvbkRldGFpbHMsXHJcbiAgICAgICAgICB9ID0gbWV0cmljO1xyXG4gICAgICAgICAgY29uc3Qge1xyXG4gICAgICAgICAgICBjZXJ0aWZpY2F0aW9uOiB7IGRldGFpbHMsIGNlcnRpZmllZF9ieTogY2VydGlmaWVkQnkgfSA9IHt9LFxyXG4gICAgICAgICAgICB3YXJuaW5nX21hcmtkb3duOiB3YXJuaW5nTWFya2Rvd24sXHJcbiAgICAgICAgICB9ID0gSlNPTi5wYXJzZShtZXRyaWMuZXh0cmEgfHwgJ3t9JykgfHwge307XHJcbiAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAuLi5tZXRyaWMsXHJcbiAgICAgICAgICAgIGNlcnRpZmljYXRpb25fZGV0YWlsczogY2VydGlmaWNhdGlvbkRldGFpbHMgfHwgZGV0YWlscyxcclxuICAgICAgICAgICAgd2FybmluZ19tYXJrZG93bjogd2FybmluZ01hcmtkb3duIHx8ICcnLFxyXG4gICAgICAgICAgICBjZXJ0aWZpZWRfYnk6IGNlcnRpZmllZEJ5IHx8IGNlcnRpZmllZEJ5TWV0cmljLFxyXG4gICAgICAgICAgfTtcclxuICAgICAgICB9KSxcclxuICAgICAgfSxcclxuICAgICAgZXJyb3JzOiBbXSxcclxuICAgICAgaXNEcnVpZDpcclxuICAgICAgICBwcm9wcy5kYXRhc291cmNlLnR5cGUgPT09ICdkcnVpZCcgfHxcclxuICAgICAgICBwcm9wcy5kYXRhc291cmNlLmRhdGFzb3VyY2VfdHlwZSA9PT0gJ2RydWlkJyxcclxuICAgICAgaXNTcWxhOlxyXG4gICAgICAgIHByb3BzLmRhdGFzb3VyY2UuZGF0YXNvdXJjZV90eXBlID09PSAndGFibGUnIHx8XHJcbiAgICAgICAgcHJvcHMuZGF0YXNvdXJjZS50eXBlID09PSAndGFibGUnLFxyXG4gICAgICBpc0VkaXRNb2RlOiBmYWxzZSxcclxuICAgICAgZGF0YWJhc2VDb2x1bW5zOiBwcm9wcy5kYXRhc291cmNlLmNvbHVtbnMuZmlsdGVyKGNvbCA9PiAhY29sLmV4cHJlc3Npb24pLFxyXG4gICAgICBjYWxjdWxhdGVkQ29sdW1uczogcHJvcHMuZGF0YXNvdXJjZS5jb2x1bW5zLmZpbHRlcihcclxuICAgICAgICBjb2wgPT4gISFjb2wuZXhwcmVzc2lvbixcclxuICAgICAgKSxcclxuICAgICAgbWV0YWRhdGFMb2FkaW5nOiBmYWxzZSxcclxuICAgICAgYWN0aXZlVGFiS2V5OiAwLFxyXG4gICAgICBkYXRhc291cmNlVHlwZTogcHJvcHMuZGF0YXNvdXJjZS5zcWxcclxuICAgICAgICA/IERBVEFTT1VSQ0VfVFlQRVMudmlydHVhbC5rZXlcclxuICAgICAgICA6IERBVEFTT1VSQ0VfVFlQRVMucGh5c2ljYWwua2V5LFxyXG4gICAgfTtcclxuXHJcbiAgICB0aGlzLm9uQ2hhbmdlID0gdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5vbkNoYW5nZUVkaXRNb2RlID0gdGhpcy5vbkNoYW5nZUVkaXRNb2RlLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLm9uRGF0YXNvdXJjZVByb3BDaGFuZ2UgPSB0aGlzLm9uRGF0YXNvdXJjZVByb3BDaGFuZ2UuYmluZCh0aGlzKTtcclxuICAgIHRoaXMub25EYXRhc291cmNlQ2hhbmdlID0gdGhpcy5vbkRhdGFzb3VyY2VDaGFuZ2UuYmluZCh0aGlzKTtcclxuICAgIHRoaXMudGFibGVDaGFuZ2VBbmRTeW5jTWV0YWRhdGEgPVxyXG4gICAgICB0aGlzLnRhYmxlQ2hhbmdlQW5kU3luY01ldGFkYXRhLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLnN5bmNNZXRhZGF0YSA9IHRoaXMuc3luY01ldGFkYXRhLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLnNldENvbHVtbnMgPSB0aGlzLnNldENvbHVtbnMuYmluZCh0aGlzKTtcclxuICAgIHRoaXMudmFsaWRhdGVBbmRDaGFuZ2UgPSB0aGlzLnZhbGlkYXRlQW5kQ2hhbmdlLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmhhbmRsZVRhYlNlbGVjdCA9IHRoaXMuaGFuZGxlVGFiU2VsZWN0LmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmFsbG93RWRpdFNvdXJjZSA9ICFpc0ZlYXR1cmVFbmFibGVkKFxyXG4gICAgICBGZWF0dXJlRmxhZy5ESVNBQkxFX0RBVEFTRVRfU09VUkNFX0VESVQsXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgb25DaGFuZ2UoKSB7XHJcbiAgICAvLyBFbXB0eWluZyBTUUwgaWYgXCJQaHlzaWNhbFwiIHJhZGlvIGJ1dHRvbiBpcyBzZWxlY3RlZFxyXG4gICAgLy8gQ3VycmVudGx5IHRoZSBsb2dpYyB0byBrbm93IHdoZXRoZXIgdGhlIHNvdXJjZSBpc1xyXG4gICAgLy8gcGh5c2ljYWwgb3IgdmlydHVhbCBpcyBiYXNlZCBvbiB3aGV0aGVyIFNRTCBpcyBlbXB0eSBvciBub3QuXHJcbiAgICBjb25zdCB7IGRhdGFzb3VyY2VUeXBlLCBkYXRhc291cmNlIH0gPSB0aGlzLnN0YXRlO1xyXG4gICAgY29uc3Qgc3FsID1cclxuICAgICAgZGF0YXNvdXJjZVR5cGUgPT09IERBVEFTT1VSQ0VfVFlQRVMucGh5c2ljYWwua2V5ID8gJycgOiBkYXRhc291cmNlLnNxbDtcclxuICAgIGNvbnN0IG5ld0RhdGFzb3VyY2UgPSB7XHJcbiAgICAgIC4uLnRoaXMuc3RhdGUuZGF0YXNvdXJjZSxcclxuICAgICAgc3FsLFxyXG4gICAgICBjb2x1bW5zOiBbLi4udGhpcy5zdGF0ZS5kYXRhYmFzZUNvbHVtbnMsIC4uLnRoaXMuc3RhdGUuY2FsY3VsYXRlZENvbHVtbnNdLFxyXG4gICAgfTtcclxuICAgIHRoaXMucHJvcHMub25DaGFuZ2UobmV3RGF0YXNvdXJjZSwgdGhpcy5zdGF0ZS5lcnJvcnMpO1xyXG4gIH1cclxuXHJcbiAgb25DaGFuZ2VFZGl0TW9kZSgpIHtcclxuICAgIHRoaXMuc2V0U3RhdGUocHJldlN0YXRlID0+ICh7IGlzRWRpdE1vZGU6ICFwcmV2U3RhdGUuaXNFZGl0TW9kZSB9KSk7XHJcbiAgfVxyXG5cclxuICBvbkRhdGFzb3VyY2VDaGFuZ2UoZGF0YXNvdXJjZSwgY2FsbGJhY2sgPSB0aGlzLnZhbGlkYXRlQW5kQ2hhbmdlKSB7XHJcbiAgICB0aGlzLnNldFN0YXRlKHsgZGF0YXNvdXJjZSB9LCBjYWxsYmFjayk7XHJcbiAgfVxyXG5cclxuICBvbkRhdGFzb3VyY2VQcm9wQ2hhbmdlKGF0dHIsIHZhbHVlKSB7XHJcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkgcmV0dXJuOyAvLyBpZiB2YWx1ZSBpcyB1bmRlZmluZWQgZG8gbm90IHVwZGF0ZSBzdGF0ZVxyXG4gICAgY29uc3QgZGF0YXNvdXJjZSA9IHsgLi4udGhpcy5zdGF0ZS5kYXRhc291cmNlLCBbYXR0cl06IHZhbHVlIH07XHJcbiAgICB0aGlzLnNldFN0YXRlKFxyXG4gICAgICBwcmV2U3RhdGUgPT4gKHtcclxuICAgICAgICBkYXRhc291cmNlOiB7IC4uLnByZXZTdGF0ZS5kYXRhc291cmNlLCBbYXR0cl06IHZhbHVlIH0sXHJcbiAgICAgIH0pLFxyXG4gICAgICBhdHRyID09PSAndGFibGVfbmFtZSdcclxuICAgICAgICA/IHRoaXMub25EYXRhc291cmNlQ2hhbmdlKGRhdGFzb3VyY2UsIHRoaXMudGFibGVDaGFuZ2VBbmRTeW5jTWV0YWRhdGEpXHJcbiAgICAgICAgOiB0aGlzLm9uRGF0YXNvdXJjZUNoYW5nZShkYXRhc291cmNlLCB0aGlzLnZhbGlkYXRlQW5kQ2hhbmdlKSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBvbkRhdGFzb3VyY2VUeXBlQ2hhbmdlKGRhdGFzb3VyY2VUeXBlKSB7XHJcbiAgICB0aGlzLnNldFN0YXRlKHsgZGF0YXNvdXJjZVR5cGUgfSk7XHJcbiAgfVxyXG5cclxuICBzZXRDb2x1bW5zKG9iaikge1xyXG4gICAgLy8gdXBkYXRlIGNhbGN1bGF0ZWRDb2x1bW5zIG9yIGRhdGFiYXNlQ29sdW1uc1xyXG4gICAgdGhpcy5zZXRTdGF0ZShvYmosIHRoaXMudmFsaWRhdGVBbmRDaGFuZ2UpO1xyXG4gIH1cclxuXHJcbiAgdmFsaWRhdGVBbmRDaGFuZ2UoKSB7XHJcbiAgICB0aGlzLnZhbGlkYXRlKHRoaXMub25DaGFuZ2UpO1xyXG4gIH1cclxuXHJcbiAgdGFibGVDaGFuZ2VBbmRTeW5jTWV0YWRhdGEoKSB7XHJcbiAgICB0aGlzLnZhbGlkYXRlKCgpID0+IHtcclxuICAgICAgdGhpcy5zeW5jTWV0YWRhdGEoKTtcclxuICAgICAgdGhpcy5vbkNoYW5nZSgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGVDb2x1bW5zKGNvbHMpIHtcclxuICAgIGNvbnN0IHsgZGF0YWJhc2VDb2x1bW5zIH0gPSB0aGlzLnN0YXRlO1xyXG4gICAgY29uc3QgZGF0YWJhc2VDb2x1bW5OYW1lcyA9IGNvbHMubWFwKGNvbCA9PiBjb2wubmFtZSk7XHJcbiAgICBjb25zdCBjdXJyZW50Q29scyA9IGRhdGFiYXNlQ29sdW1ucy5yZWR1Y2UoXHJcbiAgICAgIChhZ2csIGNvbCkgPT4gKHtcclxuICAgICAgICAuLi5hZ2csXHJcbiAgICAgICAgW2NvbC5jb2x1bW5fbmFtZV06IGNvbCxcclxuICAgICAgfSksXHJcbiAgICAgIHt9LFxyXG4gICAgKTtcclxuICAgIGNvbnN0IGZpbmFsQ29sdW1ucyA9IFtdO1xyXG4gICAgY29uc3QgcmVzdWx0cyA9IHtcclxuICAgICAgYWRkZWQ6IFtdLFxyXG4gICAgICBtb2RpZmllZDogW10sXHJcbiAgICAgIHJlbW92ZWQ6IGRhdGFiYXNlQ29sdW1uc1xyXG4gICAgICAgIC5tYXAoY29sID0+IGNvbC5jb2x1bW5fbmFtZSlcclxuICAgICAgICAuZmlsdGVyKGNvbCA9PiAhZGF0YWJhc2VDb2x1bW5OYW1lcy5pbmNsdWRlcyhjb2wpKSxcclxuICAgIH07XHJcbiAgICBjb2xzLmZvckVhY2goY29sID0+IHtcclxuICAgICAgY29uc3QgY3VycmVudENvbCA9IGN1cnJlbnRDb2xzW2NvbC5uYW1lXTtcclxuICAgICAgaWYgKCFjdXJyZW50Q29sKSB7XHJcbiAgICAgICAgLy8gbmV3IGNvbHVtblxyXG4gICAgICAgIGZpbmFsQ29sdW1ucy5wdXNoKHtcclxuICAgICAgICAgIGlkOiBzaG9ydGlkLmdlbmVyYXRlKCksXHJcbiAgICAgICAgICBjb2x1bW5fbmFtZTogY29sLm5hbWUsXHJcbiAgICAgICAgICB0eXBlOiBjb2wudHlwZSxcclxuICAgICAgICAgIGdyb3VwYnk6IHRydWUsXHJcbiAgICAgICAgICBmaWx0ZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgaXNfZHR0bTogY29sLmlzX2R0dG0sXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmVzdWx0cy5hZGRlZC5wdXNoKGNvbC5uYW1lKTtcclxuICAgICAgfSBlbHNlIGlmIChcclxuICAgICAgICBjdXJyZW50Q29sLnR5cGUgIT09IGNvbC50eXBlIHx8XHJcbiAgICAgICAgKCFjdXJyZW50Q29sLmlzX2R0dG0gJiYgY29sLmlzX2R0dG0pXHJcbiAgICAgICkge1xyXG4gICAgICAgIC8vIG1vZGlmaWVkIGNvbHVtblxyXG4gICAgICAgIGZpbmFsQ29sdW1ucy5wdXNoKHtcclxuICAgICAgICAgIC4uLmN1cnJlbnRDb2wsXHJcbiAgICAgICAgICB0eXBlOiBjb2wudHlwZSxcclxuICAgICAgICAgIGlzX2R0dG06IGN1cnJlbnRDb2wuaXNfZHR0bSB8fCBjb2wuaXNfZHR0bSxcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXN1bHRzLm1vZGlmaWVkLnB1c2goY29sLm5hbWUpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vIHVuY2hhbmdlZFxyXG4gICAgICAgIGZpbmFsQ29sdW1ucy5wdXNoKGN1cnJlbnRDb2wpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIGlmIChcclxuICAgICAgcmVzdWx0cy5hZGRlZC5sZW5ndGggfHxcclxuICAgICAgcmVzdWx0cy5tb2RpZmllZC5sZW5ndGggfHxcclxuICAgICAgcmVzdWx0cy5yZW1vdmVkLmxlbmd0aFxyXG4gICAgKSB7XHJcbiAgICAgIHRoaXMuc2V0Q29sdW1ucyh7IGRhdGFiYXNlQ29sdW1uczogZmluYWxDb2x1bW5zIH0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlc3VsdHM7XHJcbiAgfVxyXG5cclxuICBzeW5jTWV0YWRhdGEoKSB7XHJcbiAgICBjb25zdCB7IGRhdGFzb3VyY2UgfSA9IHRoaXMuc3RhdGU7XHJcbiAgICBjb25zdCBwYXJhbXMgPSB7XHJcbiAgICAgIGRhdGFzb3VyY2VfdHlwZTogZGF0YXNvdXJjZS50eXBlIHx8IGRhdGFzb3VyY2UuZGF0YXNvdXJjZV90eXBlLFxyXG4gICAgICBkYXRhYmFzZV9uYW1lOlxyXG4gICAgICAgIGRhdGFzb3VyY2UuZGF0YWJhc2UuZGF0YWJhc2VfbmFtZSB8fCBkYXRhc291cmNlLmRhdGFiYXNlLm5hbWUsXHJcbiAgICAgIHNjaGVtYV9uYW1lOiBkYXRhc291cmNlLnNjaGVtYSxcclxuICAgICAgdGFibGVfbmFtZTogZGF0YXNvdXJjZS50YWJsZV9uYW1lLFxyXG4gICAgfTtcclxuICAgIE9iamVjdC5lbnRyaWVzKHBhcmFtcykuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XHJcbiAgICAgIC8vIHJpc29uIGNhbid0IGVuY29kZSB0aGUgdW5kZWZpbmVkIHZhbHVlXHJcbiAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgcGFyYW1zW2tleV0gPSBudWxsO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIGNvbnN0IGVuZHBvaW50ID0gYC9kYXRhc291cmNlL2V4dGVybmFsX21ldGFkYXRhX2J5X25hbWUvP3E9JHtyaXNvbi5lbmNvZGUoXHJcbiAgICAgIHBhcmFtcyxcclxuICAgICl9YDtcclxuICAgIHRoaXMuc2V0U3RhdGUoeyBtZXRhZGF0YUxvYWRpbmc6IHRydWUgfSk7XHJcblxyXG4gICAgU3VwZXJzZXRDbGllbnQuZ2V0KHsgZW5kcG9pbnQgfSlcclxuICAgICAgLnRoZW4oKHsganNvbiB9KSA9PiB7XHJcbiAgICAgICAgY29uc3QgcmVzdWx0cyA9IHRoaXMudXBkYXRlQ29sdW1ucyhqc29uKTtcclxuICAgICAgICBpZiAocmVzdWx0cy5tb2RpZmllZC5sZW5ndGgpIHtcclxuICAgICAgICAgIHRoaXMucHJvcHMuYWRkU3VjY2Vzc1RvYXN0KFxyXG4gICAgICAgICAgICB0KCdNb2RpZmllZCBjb2x1bW5zOiAlcycsIHJlc3VsdHMubW9kaWZpZWQuam9pbignLCAnKSksXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocmVzdWx0cy5yZW1vdmVkLmxlbmd0aCkge1xyXG4gICAgICAgICAgdGhpcy5wcm9wcy5hZGRTdWNjZXNzVG9hc3QoXHJcbiAgICAgICAgICAgIHQoJ1JlbW92ZWQgY29sdW1uczogJXMnLCByZXN1bHRzLnJlbW92ZWQuam9pbignLCAnKSksXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocmVzdWx0cy5hZGRlZC5sZW5ndGgpIHtcclxuICAgICAgICAgIHRoaXMucHJvcHMuYWRkU3VjY2Vzc1RvYXN0KFxyXG4gICAgICAgICAgICB0KCdOZXcgY29sdW1ucyBhZGRlZDogJXMnLCByZXN1bHRzLmFkZGVkLmpvaW4oJywgJykpLFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5wcm9wcy5hZGRTdWNjZXNzVG9hc3QodCgnTWV0YWRhdGEgaGFzIGJlZW4gc3luY2VkJykpO1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBtZXRhZGF0YUxvYWRpbmc6IGZhbHNlIH0pO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2gocmVzcG9uc2UgPT5cclxuICAgICAgICBnZXRDbGllbnRFcnJvck9iamVjdChyZXNwb25zZSkudGhlbigoeyBlcnJvciwgc3RhdHVzVGV4dCB9KSA9PiB7XHJcbiAgICAgICAgICB0aGlzLnByb3BzLmFkZERhbmdlclRvYXN0KFxyXG4gICAgICAgICAgICBlcnJvciB8fCBzdGF0dXNUZXh0IHx8IHQoJ0FuIGVycm9yIGhhcyBvY2N1cnJlZCcpLFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBtZXRhZGF0YUxvYWRpbmc6IGZhbHNlIH0pO1xyXG4gICAgICAgIH0pLFxyXG4gICAgICApO1xyXG4gIH1cclxuXHJcbiAgZmluZER1cGxpY2F0ZXMoYXJyLCBhY2Nlc3Nvcikge1xyXG4gICAgY29uc3Qgc2VlbiA9IHt9O1xyXG4gICAgY29uc3QgZHVwcyA9IFtdO1xyXG4gICAgYXJyLmZvckVhY2gob2JqID0+IHtcclxuICAgICAgY29uc3QgaXRlbSA9IGFjY2Vzc29yKG9iaik7XHJcbiAgICAgIGlmIChpdGVtIGluIHNlZW4pIHtcclxuICAgICAgICBkdXBzLnB1c2goaXRlbSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgc2VlbltpdGVtXSA9IG51bGw7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGR1cHM7XHJcbiAgfVxyXG5cclxuICB2YWxpZGF0ZShjYWxsYmFjaykge1xyXG4gICAgbGV0IGVycm9ycyA9IFtdO1xyXG4gICAgbGV0IGR1cHM7XHJcbiAgICBjb25zdCB7IGRhdGFzb3VyY2UgfSA9IHRoaXMuc3RhdGU7XHJcblxyXG4gICAgLy8gTG9va2luZyBmb3IgZHVwbGljYXRlIGNvbHVtbl9uYW1lXHJcbiAgICBkdXBzID0gdGhpcy5maW5kRHVwbGljYXRlcyhkYXRhc291cmNlLmNvbHVtbnMsIG9iaiA9PiBvYmouY29sdW1uX25hbWUpO1xyXG4gICAgZXJyb3JzID0gZXJyb3JzLmNvbmNhdChcclxuICAgICAgZHVwcy5tYXAobmFtZSA9PiB0KCdDb2x1bW4gbmFtZSBbJXNdIGlzIGR1cGxpY2F0ZWQnLCBuYW1lKSksXHJcbiAgICApO1xyXG5cclxuICAgIC8vIExvb2tpbmcgZm9yIGR1cGxpY2F0ZSBtZXRyaWNfbmFtZVxyXG4gICAgZHVwcyA9IHRoaXMuZmluZER1cGxpY2F0ZXMoZGF0YXNvdXJjZS5tZXRyaWNzLCBvYmogPT4gb2JqLm1ldHJpY19uYW1lKTtcclxuICAgIGVycm9ycyA9IGVycm9ycy5jb25jYXQoXHJcbiAgICAgIGR1cHMubWFwKG5hbWUgPT4gdCgnTWV0cmljIG5hbWUgWyVzXSBpcyBkdXBsaWNhdGVkJywgbmFtZSkpLFxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBNYWtpbmcgc3VyZSBjYWxjdWxhdGVkQ29sdW1ucyBoYXZlIGFuIGV4cHJlc3Npb24gZGVmaW5lZFxyXG4gICAgY29uc3Qgbm9GaWx0ZXJDYWxjQ29scyA9IHRoaXMuc3RhdGUuY2FsY3VsYXRlZENvbHVtbnMuZmlsdGVyKFxyXG4gICAgICBjb2wgPT4gIWNvbC5leHByZXNzaW9uICYmICFjb2wuanNvbixcclxuICAgICk7XHJcbiAgICBlcnJvcnMgPSBlcnJvcnMuY29uY2F0KFxyXG4gICAgICBub0ZpbHRlckNhbGNDb2xzLm1hcChjb2wgPT5cclxuICAgICAgICB0KCdDYWxjdWxhdGVkIGNvbHVtbiBbJXNdIHJlcXVpcmVzIGFuIGV4cHJlc3Npb24nLCBjb2wuY29sdW1uX25hbWUpLFxyXG4gICAgICApLFxyXG4gICAgKTtcclxuXHJcbiAgICB0aGlzLnNldFN0YXRlKHsgZXJyb3JzIH0sIGNhbGxiYWNrKTtcclxuICB9XHJcblxyXG4gIGhhbmRsZVRhYlNlbGVjdChhY3RpdmVUYWJLZXkpIHtcclxuICAgIHRoaXMuc2V0U3RhdGUoeyBhY3RpdmVUYWJLZXkgfSk7XHJcbiAgfVxyXG5cclxuICBzb3J0TWV0cmljcyhtZXRyaWNzKSB7XHJcbiAgICByZXR1cm4gbWV0cmljcy5zb3J0KCh7IGlkOiBhIH0sIHsgaWQ6IGIgfSkgPT4gYiAtIGEpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyU2V0dGluZ3NGaWVsZHNldCgpIHtcclxuICAgIGNvbnN0IHsgZGF0YXNvdXJjZSB9ID0gdGhpcy5zdGF0ZTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxGaWVsZHNldFxyXG4gICAgICAgIHRpdGxlPXt0KCdCYXNpYycpfVxyXG4gICAgICAgIGl0ZW09e2RhdGFzb3VyY2V9XHJcbiAgICAgICAgb25DaGFuZ2U9e3RoaXMub25EYXRhc291cmNlQ2hhbmdlfVxyXG4gICAgICA+XHJcbiAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICBmaWVsZEtleT1cImRlc2NyaXB0aW9uXCJcclxuICAgICAgICAgIGxhYmVsPXt0KCdEZXNjcmlwdGlvbicpfVxyXG4gICAgICAgICAgY29udHJvbD17XHJcbiAgICAgICAgICAgIDxUZXh0QXJlYUNvbnRyb2wgbGFuZ3VhZ2U9XCJtYXJrZG93blwiIG9mZmVyRWRpdEluTW9kYWw9e2ZhbHNlfSAvPlxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIC8+XHJcbiAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICBmaWVsZEtleT1cImRlZmF1bHRfZW5kcG9pbnRcIlxyXG4gICAgICAgICAgbGFiZWw9e3QoJ0RlZmF1bHQgVVJMJyl9XHJcbiAgICAgICAgICBkZXNjcmlwdGlvbj17dChcclxuICAgICAgICAgICAgJ0RlZmF1bHQgVVJMIHRvIHJlZGlyZWN0IHRvIHdoZW4gYWNjZXNzaW5nIGZyb20gdGhlIGRhdGFzZXQgbGlzdCBwYWdlJyxcclxuICAgICAgICAgICl9XHJcbiAgICAgICAgICBjb250cm9sPXs8VGV4dENvbnRyb2wgY29udHJvbElkPVwiZGVmYXVsdF9lbmRwb2ludFwiIC8+fVxyXG4gICAgICAgIC8+XHJcbiAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICBpbmxpbmVcclxuICAgICAgICAgIGZpZWxkS2V5PVwiZmlsdGVyX3NlbGVjdF9lbmFibGVkXCJcclxuICAgICAgICAgIGxhYmVsPXt0KCdBdXRvY29tcGxldGUgZmlsdGVycycpfVxyXG4gICAgICAgICAgZGVzY3JpcHRpb249e3QoJ1doZXRoZXIgdG8gcG9wdWxhdGUgYXV0b2NvbXBsZXRlIGZpbHRlcnMgb3B0aW9ucycpfVxyXG4gICAgICAgICAgY29udHJvbD17PENoZWNrYm94Q29udHJvbCAvPn1cclxuICAgICAgICAvPlxyXG4gICAgICAgIHt0aGlzLnN0YXRlLmlzU3FsYSAmJiAoXHJcbiAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgZmllbGRLZXk9XCJmZXRjaF92YWx1ZXNfcHJlZGljYXRlXCJcclxuICAgICAgICAgICAgbGFiZWw9e3QoJ0F1dG9jb21wbGV0ZSBxdWVyeSBwcmVkaWNhdGUnKX1cclxuICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoXHJcbiAgICAgICAgICAgICAgJ1doZW4gdXNpbmcgXCJBdXRvY29tcGxldGUgZmlsdGVyc1wiLCB0aGlzIGNhbiBiZSB1c2VkIHRvIGltcHJvdmUgcGVyZm9ybWFuY2UgJyArXHJcbiAgICAgICAgICAgICAgICAnb2YgdGhlIHF1ZXJ5IGZldGNoaW5nIHRoZSB2YWx1ZXMuIFVzZSB0aGlzIG9wdGlvbiB0byBhcHBseSBhICcgK1xyXG4gICAgICAgICAgICAgICAgJ3ByZWRpY2F0ZSAoV0hFUkUgY2xhdXNlKSB0byB0aGUgcXVlcnkgc2VsZWN0aW5nIHRoZSBkaXN0aW5jdCAnICtcclxuICAgICAgICAgICAgICAgICd2YWx1ZXMgZnJvbSB0aGUgdGFibGUuIFR5cGljYWxseSB0aGUgaW50ZW50IHdvdWxkIGJlIHRvIGxpbWl0IHRoZSBzY2FuICcgK1xyXG4gICAgICAgICAgICAgICAgJ2J5IGFwcGx5aW5nIGEgcmVsYXRpdmUgdGltZSBmaWx0ZXIgb24gYSBwYXJ0aXRpb25lZCBvciBpbmRleGVkIHRpbWUtcmVsYXRlZCBmaWVsZC4nLFxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICA8VGV4dEFyZWFDb250cm9sXHJcbiAgICAgICAgICAgICAgICBsYW5ndWFnZT1cInNxbFwiXHJcbiAgICAgICAgICAgICAgICBjb250cm9sSWQ9XCJmZXRjaF92YWx1ZXNfcHJlZGljYXRlXCJcclxuICAgICAgICAgICAgICAgIG1pbkxpbmVzPXs1fVxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgKX1cclxuICAgICAgICB7dGhpcy5zdGF0ZS5pc1NxbGEgJiYgKFxyXG4gICAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICAgIGZpZWxkS2V5PVwiZXh0cmFcIlxyXG4gICAgICAgICAgICBsYWJlbD17dCgnRXh0cmEnKX1cclxuICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoXHJcbiAgICAgICAgICAgICAgJ0V4dHJhIGRhdGEgdG8gc3BlY2lmeSB0YWJsZSBtZXRhZGF0YS4gQ3VycmVudGx5IHN1cHBvcnRzICcgK1xyXG4gICAgICAgICAgICAgICAgJ21ldGFkYXRhIG9mIHRoZSBmb3JtYXQ6IGB7IFwiY2VydGlmaWNhdGlvblwiOiB7IFwiY2VydGlmaWVkX2J5XCI6ICcgK1xyXG4gICAgICAgICAgICAgICAgJ1wiRGF0YSBQbGF0Zm9ybSBUZWFtXCIsIFwiZGV0YWlsc1wiOiBcIlRoaXMgdGFibGUgaXMgdGhlIHNvdXJjZSBvZiB0cnV0aC5cIiAnICtcclxuICAgICAgICAgICAgICAgICd9LCBcIndhcm5pbmdfbWFya2Rvd25cIjogXCJUaGlzIGlzIGEgd2FybmluZy5cIiB9YC4nLFxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICA8VGV4dEFyZWFDb250cm9sXHJcbiAgICAgICAgICAgICAgICBjb250cm9sSWQ9XCJleHRyYVwiXHJcbiAgICAgICAgICAgICAgICBsYW5ndWFnZT1cImpzb25cIlxyXG4gICAgICAgICAgICAgICAgb2ZmZXJFZGl0SW5Nb2RhbD17ZmFsc2V9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICApfVxyXG4gICAgICAgIDxPd25lcnNTZWxlY3RvclxyXG4gICAgICAgICAgZGF0YXNvdXJjZT17ZGF0YXNvdXJjZX1cclxuICAgICAgICAgIG9uQ2hhbmdlPXtuZXdPd25lcnMgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLm9uRGF0YXNvdXJjZUNoYW5nZSh7IC4uLmRhdGFzb3VyY2UsIG93bmVyczogbmV3T3duZXJzIH0pO1xyXG4gICAgICAgICAgfX1cclxuICAgICAgICAvPlxyXG4gICAgICA8L0ZpZWxkc2V0PlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHJlbmRlckFkdmFuY2VkRmllbGRzZXQoKSB7XHJcbiAgICBjb25zdCB7IGRhdGFzb3VyY2UgfSA9IHRoaXMuc3RhdGU7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8RmllbGRzZXRcclxuICAgICAgICB0aXRsZT17dCgnQWR2YW5jZWQnKX1cclxuICAgICAgICBpdGVtPXtkYXRhc291cmNlfVxyXG4gICAgICAgIG9uQ2hhbmdlPXt0aGlzLm9uRGF0YXNvdXJjZUNoYW5nZX1cclxuICAgICAgPlxyXG4gICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgZmllbGRLZXk9XCJjYWNoZV90aW1lb3V0XCJcclxuICAgICAgICAgIGxhYmVsPXt0KCdDYWNoZSB0aW1lb3V0Jyl9XHJcbiAgICAgICAgICBkZXNjcmlwdGlvbj17dChcclxuICAgICAgICAgICAgJ1RoZSBkdXJhdGlvbiBvZiB0aW1lIGluIHNlY29uZHMgYmVmb3JlIHRoZSBjYWNoZSBpcyBpbnZhbGlkYXRlZCcsXHJcbiAgICAgICAgICApfVxyXG4gICAgICAgICAgY29udHJvbD17PFRleHRDb250cm9sIGNvbnRyb2xJZD1cImNhY2hlX3RpbWVvdXRcIiAvPn1cclxuICAgICAgICAvPlxyXG4gICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgZmllbGRLZXk9XCJvZmZzZXRcIlxyXG4gICAgICAgICAgbGFiZWw9e3QoJ0hvdXJzIG9mZnNldCcpfVxyXG4gICAgICAgICAgY29udHJvbD17PFRleHRDb250cm9sIGNvbnRyb2xJZD1cIm9mZnNldFwiIC8+fVxyXG4gICAgICAgICAgZGVzY3JpcHRpb249e3QoXHJcbiAgICAgICAgICAgICdUaGUgbnVtYmVyIG9mIGhvdXJzLCBuZWdhdGl2ZSBvciBwb3NpdGl2ZSwgdG8gc2hpZnQgdGhlIHRpbWUgY29sdW1uLiBUaGlzIGNhbiBiZSB1c2VkIHRvIG1vdmUgVVRDIHRpbWUgdG8gbG9jYWwgdGltZS4nLFxyXG4gICAgICAgICAgKX1cclxuICAgICAgICAvPlxyXG4gICAgICAgIHt0aGlzLnN0YXRlLmlzU3FsYSAmJiAoXHJcbiAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgZmllbGRLZXk9XCJ0ZW1wbGF0ZV9wYXJhbXNcIlxyXG4gICAgICAgICAgICBsYWJlbD17dCgnVGVtcGxhdGUgcGFyYW1ldGVycycpfVxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbj17dChcclxuICAgICAgICAgICAgICAnQSBzZXQgb2YgcGFyYW1ldGVycyB0aGF0IGJlY29tZSBhdmFpbGFibGUgaW4gdGhlIHF1ZXJ5IHVzaW5nIEppbmphIHRlbXBsYXRpbmcgc3ludGF4JyxcclxuICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgY29udHJvbD17PFRleHRDb250cm9sIGNvbnRyb2xJZD1cInRlbXBsYXRlX3BhcmFtc1wiIC8+fVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICApfVxyXG4gICAgICA8L0ZpZWxkc2V0PlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHJlbmRlclNwYXRpYWxUYWIoKSB7XHJcbiAgICBjb25zdCB7IGRhdGFzb3VyY2UgfSA9IHRoaXMuc3RhdGU7XHJcbiAgICBjb25zdCB7IHNwYXRpYWxzLCBhbGxfY29sczogYWxsQ29scyB9ID0gZGF0YXNvdXJjZTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxUYWJzLlRhYlBhbmVcclxuICAgICAgICB0YWI9ezxDb2xsZWN0aW9uVGFiVGl0bGUgY29sbGVjdGlvbj17c3BhdGlhbHN9IHRpdGxlPXt0KCdTcGF0aWFsJyl9IC8+fVxyXG4gICAgICAgIGtleT17NH1cclxuICAgICAgPlxyXG4gICAgICAgIDxDb2xsZWN0aW9uVGFibGVcclxuICAgICAgICAgIHRhYmxlQ29sdW1ucz17WyduYW1lJywgJ2NvbmZpZyddfVxyXG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMub25EYXRhc291cmNlUHJvcENoYW5nZS5iaW5kKHRoaXMsICdzcGF0aWFscycpfVxyXG4gICAgICAgICAgaXRlbUdlbmVyYXRvcj17KCkgPT4gKHtcclxuICAgICAgICAgICAgbmFtZTogJzxuZXcgc3BhdGlhbD4nLFxyXG4gICAgICAgICAgICB0eXBlOiAnPG5vIHR5cGU+JyxcclxuICAgICAgICAgICAgY29uZmlnOiBudWxsLFxyXG4gICAgICAgICAgfSl9XHJcbiAgICAgICAgICBjb2xsZWN0aW9uPXtzcGF0aWFsc31cclxuICAgICAgICAgIGFsbG93RGVsZXRlc1xyXG4gICAgICAgICAgaXRlbVJlbmRlcmVycz17e1xyXG4gICAgICAgICAgICBuYW1lOiAoZCwgb25DaGFuZ2UpID0+IChcclxuICAgICAgICAgICAgICA8RWRpdGFibGVUaXRsZSBjYW5FZGl0IHRpdGxlPXtkfSBvblNhdmVUaXRsZT17b25DaGFuZ2V9IC8+XHJcbiAgICAgICAgICAgICksXHJcbiAgICAgICAgICAgIGNvbmZpZzogKHYsIG9uQ2hhbmdlKSA9PiAoXHJcbiAgICAgICAgICAgICAgPFNwYXRpYWxDb250cm9sIHZhbHVlPXt2fSBvbkNoYW5nZT17b25DaGFuZ2V9IGNob2ljZXM9e2FsbENvbHN9IC8+XHJcbiAgICAgICAgICAgICksXHJcbiAgICAgICAgICB9fVxyXG4gICAgICAgIC8+XHJcbiAgICAgIDwvVGFicy5UYWJQYW5lPlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHJlbmRlclNvdXJjZUZpZWxkc2V0KHRoZW1lKSB7XHJcbiAgICBjb25zdCB7IGRhdGFzb3VyY2UgfSA9IHRoaXMuc3RhdGU7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIHt0aGlzLmFsbG93RWRpdFNvdXJjZSAmJiAoXHJcbiAgICAgICAgICA8RWRpdExvY2tDb250YWluZXI+XHJcbiAgICAgICAgICAgIDxzcGFuIHJvbGU9XCJidXR0b25cIiB0YWJJbmRleD17MH0gb25DbGljaz17dGhpcy5vbkNoYW5nZUVkaXRNb2RlfT5cclxuICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5pc0VkaXRNb2RlID8gKFxyXG4gICAgICAgICAgICAgICAgPEljb25zLkxvY2tVbmxvY2tlZCBpY29uQ29sb3I9e3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUuYmFzZX0gLz5cclxuICAgICAgICAgICAgICApIDogKFxyXG4gICAgICAgICAgICAgICAgPEljb25zLkxvY2tMb2NrZWQgaWNvbkNvbG9yPXt0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmJhc2V9IC8+XHJcbiAgICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICB7IXRoaXMuc3RhdGUuaXNFZGl0TW9kZSAmJiAoXHJcbiAgICAgICAgICAgICAgPGRpdj57dCgnQ2xpY2sgdGhlIGxvY2sgdG8gbWFrZSBjaGFuZ2VzLicpfTwvZGl2PlxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICB7dGhpcy5zdGF0ZS5pc0VkaXRNb2RlICYmIChcclxuICAgICAgICAgICAgICA8ZGl2Pnt0KCdDbGljayB0aGUgbG9jayB0byBwcmV2ZW50IGZ1cnRoZXIgY2hhbmdlcy4nKX08L2Rpdj5cclxuICAgICAgICAgICAgKX1cclxuICAgICAgICAgIDwvRWRpdExvY2tDb250YWluZXI+XHJcbiAgICAgICAgKX1cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm0tbC0xMCBtLXQtMjAgbS1iLTEwXCI+XHJcbiAgICAgICAgICB7REFUQVNPVVJDRV9UWVBFU19BUlIubWFwKHR5cGUgPT4gKFxyXG4gICAgICAgICAgICA8UmFkaW9cclxuICAgICAgICAgICAgICBrZXk9e3R5cGUua2V5fVxyXG4gICAgICAgICAgICAgIHZhbHVlPXt0eXBlLmtleX1cclxuICAgICAgICAgICAgICBpbmxpbmVcclxuICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5vbkRhdGFzb3VyY2VUeXBlQ2hhbmdlLmJpbmQodGhpcywgdHlwZS5rZXkpfVxyXG4gICAgICAgICAgICAgIGNoZWNrZWQ9e3RoaXMuc3RhdGUuZGF0YXNvdXJjZVR5cGUgPT09IHR5cGUua2V5fVxyXG4gICAgICAgICAgICAgIGRpc2FibGVkPXshdGhpcy5zdGF0ZS5pc0VkaXRNb2RlfVxyXG4gICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAge3R5cGUubGFiZWx9XHJcbiAgICAgICAgICAgIDwvUmFkaW8+XHJcbiAgICAgICAgICApKX1cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8aHIgLz5cclxuICAgICAgICA8RmllbGRzZXQgaXRlbT17ZGF0YXNvdXJjZX0gb25DaGFuZ2U9e3RoaXMub25EYXRhc291cmNlQ2hhbmdlfSBjb21wYWN0PlxyXG4gICAgICAgICAge3RoaXMuc3RhdGUuZGF0YXNvdXJjZVR5cGUgPT09IERBVEFTT1VSQ0VfVFlQRVMudmlydHVhbC5rZXkgJiYgKFxyXG4gICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgIHt0aGlzLnN0YXRlLmlzU3FsYSAmJiAoXHJcbiAgICAgICAgICAgICAgICA8PlxyXG4gICAgICAgICAgICAgICAgICA8Q29sIHhzPXsyNH0gbWQ9ezEyfT5cclxuICAgICAgICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgICAgICAgIGZpZWxkS2V5PVwiZGF0YWJhc2VTZWxlY3RvclwiXHJcbiAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17dCgndmlydHVhbCcpfVxyXG4gICAgICAgICAgICAgICAgICAgICAgY29udHJvbD17XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY3NzPXt7IG1hcmdpblRvcDogOCB9fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8RGF0YWJhc2VTZWxlY3RvclxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGI9e2RhdGFzb3VyY2U/LmRhdGFiYXNlfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NoZW1hPXtkYXRhc291cmNlLnNjaGVtYX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uU2NoZW1hQ2hhbmdlPXtzY2hlbWEgPT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5pc0VkaXRNb2RlICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub25EYXRhc291cmNlUHJvcENoYW5nZSgnc2NoZW1hJywgc2NoZW1hKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25EYkNoYW5nZT17ZGF0YWJhc2UgPT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5pc0VkaXRNb2RlICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub25EYXRhc291cmNlUHJvcENoYW5nZSgnZGF0YWJhc2UnLCBkYXRhYmFzZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1Nb2RlPXtmYWxzZX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUVycm9yPXt0aGlzLnByb3BzLmFkZERhbmdlclRvYXN0fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyF0aGlzLnN0YXRlLmlzRWRpdE1vZGV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNzcz17eyB3aWR0aDogJ2NhbGMoMTAwJSAtIDM0cHgpJywgbWFyZ2luVG9wOiAtMTYgfX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgICAgICAgICAgZmllbGRLZXk9XCJ0YWJsZV9uYW1lXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e3QoJ0RhdGFzZXQgbmFtZScpfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dENvbnRyb2xcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xJZD1cInRhYmxlX25hbWVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RhYmxlID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkRhdGFzb3VyY2VQcm9wQ2hhbmdlKCd0YWJsZV9uYW1lJywgdGFibGUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXt0KCdEYXRhc2V0IG5hbWUnKX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXshdGhpcy5zdGF0ZS5pc0VkaXRNb2RlfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgIDwvQ29sPlxyXG4gICAgICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgICAgICBmaWVsZEtleT1cInNxbFwiXHJcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e3QoJ1NRTCcpfVxyXG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KFxyXG4gICAgICAgICAgICAgICAgICAgICAgJ1doZW4gc3BlY2lmeWluZyBTUUwsIHRoZSBkYXRhc291cmNlIGFjdHMgYXMgYSB2aWV3LiAnICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ1N1cGVyc2V0IHdpbGwgdXNlIHRoaXMgc3RhdGVtZW50IGFzIGEgc3VicXVlcnkgd2hpbGUgZ3JvdXBpbmcgYW5kIGZpbHRlcmluZyAnICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ29uIHRoZSBnZW5lcmF0ZWQgcGFyZW50IHF1ZXJpZXMuJyxcclxuICAgICAgICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xyXG4gICAgICAgICAgICAgICAgICAgICAgPFRleHRBcmVhQ29udHJvbFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZT1cInNxbFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9mZmVyRWRpdEluTW9kYWw9e2ZhbHNlfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtaW5MaW5lcz17MjB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heExpbmVzPXsyMH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyF0aGlzLnN0YXRlLmlzRWRpdE1vZGV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgIDwvPlxyXG4gICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAge3RoaXMuc3RhdGUuaXNEcnVpZCAmJiAoXHJcbiAgICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgICAgZmllbGRLZXk9XCJqc29uXCJcclxuICAgICAgICAgICAgICAgICAgbGFiZWw9e3QoJ0pTT04nKX1cclxuICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e1xyXG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICB7dCgnVGhlIEpTT04gbWV0cmljIG9yIHBvc3QgYWdncmVnYXRpb24gZGVmaW5pdGlvbi4nKX1cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgICA8VGV4dEFyZWFDb250cm9sIGxhbmd1YWdlPVwianNvblwiIG9mZmVyRWRpdEluTW9kYWw9e2ZhbHNlfSAvPlxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgKX1cclxuICAgICAgICAgIHt0aGlzLnN0YXRlLmRhdGFzb3VyY2VUeXBlID09PSBEQVRBU09VUkNFX1RZUEVTLnBoeXNpY2FsLmtleSAmJiAoXHJcbiAgICAgICAgICAgIDxDb2wgeHM9ezI0fSBtZD17MTJ9PlxyXG4gICAgICAgICAgICAgIHt0aGlzLnN0YXRlLmlzU3FsYSAmJiAoXHJcbiAgICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgICAgZmllbGRLZXk9XCJ0YWJsZVNlbGVjdG9yXCJcclxuICAgICAgICAgICAgICAgICAgbGFiZWw9e3QoJ1BoeXNpY2FsJyl9XHJcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY3NzPXt7IG1hcmdpblRvcDogOCB9fT5cclxuICAgICAgICAgICAgICAgICAgICAgIDxUYWJsZVNlbGVjdG9yXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZT17ZmFsc2V9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFiYXNlPXt7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uZGF0YXNvdXJjZS5kYXRhYmFzZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhYmFzZV9uYW1lOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YXNvdXJjZS5kYXRhYmFzZT8uZGF0YWJhc2VfbmFtZSB8fFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YXNvdXJjZS5kYXRhYmFzZT8ubmFtZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgZGJJZD17ZGF0YXNvdXJjZS5kYXRhYmFzZT8uaWR9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUVycm9yPXt0aGlzLnByb3BzLmFkZERhbmdlclRvYXN0fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWE9e2RhdGFzb3VyY2Uuc2NoZW1hfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzcWxMYWJNb2RlPXtmYWxzZX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgdGFibGVWYWx1ZT17ZGF0YXNvdXJjZS50YWJsZV9uYW1lfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvblNjaGVtYUNoYW5nZT17XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5pc0VkaXRNb2RlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHNjaGVtYSA9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub25EYXRhc291cmNlUHJvcENoYW5nZSgnc2NoZW1hJywgc2NoZW1hKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkRiQ2hhbmdlPXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLmlzRWRpdE1vZGVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gZGF0YWJhc2UgPT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9uRGF0YXNvdXJjZVByb3BDaGFuZ2UoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGF0YWJhc2UnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YWJhc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvblRhYmxlU2VsZWN0Q2hhbmdlPXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLmlzRWRpdE1vZGVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gdGFibGUgPT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9uRGF0YXNvdXJjZVByb3BDaGFuZ2UoJ3RhYmxlX25hbWUnLCB0YWJsZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyF0aGlzLnN0YXRlLmlzRWRpdE1vZGV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KFxyXG4gICAgICAgICAgICAgICAgICAgICdUaGUgcG9pbnRlciB0byBhIHBoeXNpY2FsIHRhYmxlIChvciB2aWV3KS4gS2VlcCBpbiBtaW5kIHRoYXQgdGhlIGNoYXJ0IGlzICcgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgJ2Fzc29jaWF0ZWQgdG8gdGhpcyBTdXBlcnNldCBsb2dpY2FsIHRhYmxlLCBhbmQgdGhpcyBsb2dpY2FsIHRhYmxlIHBvaW50cyAnICtcclxuICAgICAgICAgICAgICAgICAgICAgICd0aGUgcGh5c2ljYWwgdGFibGUgcmVmZXJlbmNlZCBoZXJlLicsXHJcbiAgICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIDwvQ29sPlxyXG4gICAgICAgICAgKX1cclxuICAgICAgICA8L0ZpZWxkc2V0PlxyXG4gICAgICA8L2Rpdj5cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICByZW5kZXJFcnJvcnMoKSB7XHJcbiAgICBpZiAodGhpcy5zdGF0ZS5lcnJvcnMubGVuZ3RoID4gMCkge1xyXG4gICAgICByZXR1cm4gKFxyXG4gICAgICAgIDxBbGVydFxyXG4gICAgICAgICAgY3NzPXt0aGVtZSA9PiAoeyBtYXJnaW5Cb3R0b206IHRoZW1lLmdyaWRVbml0ICogNCB9KX1cclxuICAgICAgICAgIHR5cGU9XCJlcnJvclwiXHJcbiAgICAgICAgICBtZXNzYWdlPXtcclxuICAgICAgICAgICAgPD5cclxuICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5lcnJvcnMubWFwKGVyciA9PiAoXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGtleT17ZXJyfT57ZXJyfTwvZGl2PlxyXG4gICAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgICA8Lz5cclxuICAgICAgICAgIH1cclxuICAgICAgICAvPlxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG5cclxuICByZW5kZXJNZXRyaWNDb2xsZWN0aW9uKCkge1xyXG4gICAgY29uc3QgeyBkYXRhc291cmNlIH0gPSB0aGlzLnN0YXRlO1xyXG4gICAgY29uc3QgeyBtZXRyaWNzIH0gPSBkYXRhc291cmNlO1xyXG4gICAgY29uc3Qgc29ydGVkTWV0cmljcyA9IG1ldHJpY3M/Lmxlbmd0aCA/IHRoaXMuc29ydE1ldHJpY3MobWV0cmljcykgOiBbXTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxDb2xsZWN0aW9uVGFibGVcclxuICAgICAgICB0YWJsZUNvbHVtbnM9e1snbWV0cmljX25hbWUnLCAndmVyYm9zZV9uYW1lJywgJ2V4cHJlc3Npb24nXX1cclxuICAgICAgICBzb3J0Q29sdW1ucz17WydtZXRyaWNfbmFtZScsICd2ZXJib3NlX25hbWUnLCAnZXhwcmVzc2lvbiddfVxyXG4gICAgICAgIGNvbHVtbkxhYmVscz17e1xyXG4gICAgICAgICAgbWV0cmljX25hbWU6IHQoJ01ldHJpYycpLFxyXG4gICAgICAgICAgdmVyYm9zZV9uYW1lOiB0KCdMYWJlbCcpLFxyXG4gICAgICAgICAgZXhwcmVzc2lvbjogdCgnU1FMIGV4cHJlc3Npb24nKSxcclxuICAgICAgICB9fVxyXG4gICAgICAgIGV4cGFuZEZpZWxkc2V0PXtcclxuICAgICAgICAgIDxGb3JtQ29udGFpbmVyPlxyXG4gICAgICAgICAgICA8RmllbGRzZXQgY29tcGFjdD5cclxuICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgIGZpZWxkS2V5PVwiZGVzY3JpcHRpb25cIlxyXG4gICAgICAgICAgICAgICAgbGFiZWw9e3QoJ0Rlc2NyaXB0aW9uJyl9XHJcbiAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgPFRleHRDb250cm9sXHJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwiZGVzY3JpcHRpb25cIlxyXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXt0KCdEZXNjcmlwdGlvbicpfVxyXG4gICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICAgICAgICBmaWVsZEtleT1cImQzZm9ybWF0XCJcclxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdEMyBmb3JtYXQnKX1cclxuICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xyXG4gICAgICAgICAgICAgICAgICA8VGV4dENvbnRyb2wgY29udHJvbElkPVwiZDNmb3JtYXRcIiBwbGFjZWhvbGRlcj1cIiV5LyVtLyVkXCIgLz5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgICAgICAgbGFiZWw9e3QoJ0NlcnRpZmllZCBieScpfVxyXG4gICAgICAgICAgICAgICAgZmllbGRLZXk9XCJjZXJ0aWZpZWRfYnlcIlxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoXHJcbiAgICAgICAgICAgICAgICAgICdQZXJzb24gb3IgZ3JvdXAgdGhhdCBoYXMgY2VydGlmaWVkIHRoaXMgbWV0cmljJyxcclxuICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgPFRleHRDb250cm9sXHJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwiY2VydGlmaWVkX2J5XCJcclxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnQ2VydGlmaWVkIGJ5Jyl9XHJcbiAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdDZXJ0aWZpY2F0aW9uIGRldGFpbHMnKX1cclxuICAgICAgICAgICAgICAgIGZpZWxkS2V5PVwiY2VydGlmaWNhdGlvbl9kZXRhaWxzXCJcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KCdEZXRhaWxzIG9mIHRoZSBjZXJ0aWZpY2F0aW9uJyl9XHJcbiAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgPFRleHRDb250cm9sXHJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwiY2VydGlmaWNhdGlvbl9kZXRhaWxzXCJcclxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnQ2VydGlmaWNhdGlvbiBkZXRhaWxzJyl9XHJcbiAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdXYXJuaW5nJyl9XHJcbiAgICAgICAgICAgICAgICBmaWVsZEtleT1cIndhcm5pbmdfbWFya2Rvd25cIlxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoJ09wdGlvbmFsIHdhcm5pbmcgYWJvdXQgdXNlIG9mIHRoaXMgbWV0cmljJyl9XHJcbiAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgPFRleHRBcmVhQ29udHJvbFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xJZD1cIndhcm5pbmdfbWFya2Rvd25cIlxyXG4gICAgICAgICAgICAgICAgICAgIGxhbmd1YWdlPVwibWFya2Rvd25cIlxyXG4gICAgICAgICAgICAgICAgICAgIG9mZmVyRWRpdEluTW9kYWw9e2ZhbHNlfVxyXG4gICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDwvRmllbGRzZXQ+XHJcbiAgICAgICAgICA8L0Zvcm1Db250YWluZXI+XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbGxlY3Rpb249e3NvcnRlZE1ldHJpY3N9XHJcbiAgICAgICAgYWxsb3dBZGRJdGVtXHJcbiAgICAgICAgb25DaGFuZ2U9e3RoaXMub25EYXRhc291cmNlUHJvcENoYW5nZS5iaW5kKHRoaXMsICdtZXRyaWNzJyl9XHJcbiAgICAgICAgaXRlbUdlbmVyYXRvcj17KCkgPT4gKHtcclxuICAgICAgICAgIG1ldHJpY19uYW1lOiAnPG5ldyBtZXRyaWM+JyxcclxuICAgICAgICAgIHZlcmJvc2VfbmFtZTogJycsXHJcbiAgICAgICAgICBleHByZXNzaW9uOiAnJyxcclxuICAgICAgICB9KX1cclxuICAgICAgICBpdGVtUmVuZGVyZXJzPXt7XHJcbiAgICAgICAgICBtZXRyaWNfbmFtZTogKHYsIG9uQ2hhbmdlLCBfLCByZWNvcmQpID0+IChcclxuICAgICAgICAgICAgPEZsZXhSb3dDb250YWluZXI+XHJcbiAgICAgICAgICAgICAge3JlY29yZC5pc19jZXJ0aWZpZWQgJiYgKFxyXG4gICAgICAgICAgICAgICAgPENlcnRpZmllZEJhZGdlXHJcbiAgICAgICAgICAgICAgICAgIGNlcnRpZmllZEJ5PXtyZWNvcmQuY2VydGlmaWVkX2J5fVxyXG4gICAgICAgICAgICAgICAgICBkZXRhaWxzPXtyZWNvcmQuY2VydGlmaWNhdGlvbl9kZXRhaWxzfVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgIHtyZWNvcmQud2FybmluZ19tYXJrZG93biAmJiAoXHJcbiAgICAgICAgICAgICAgICA8V2FybmluZ0ljb25XaXRoVG9vbHRpcFxyXG4gICAgICAgICAgICAgICAgICB3YXJuaW5nTWFya2Rvd249e3JlY29yZC53YXJuaW5nX21hcmtkb3dufVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgIDxFZGl0YWJsZVRpdGxlIGNhbkVkaXQgdGl0bGU9e3Z9IG9uU2F2ZVRpdGxlPXtvbkNoYW5nZX0gLz5cclxuICAgICAgICAgICAgPC9GbGV4Um93Q29udGFpbmVyPlxyXG4gICAgICAgICAgKSxcclxuICAgICAgICAgIHZlcmJvc2VfbmFtZTogKHYsIG9uQ2hhbmdlKSA9PiAoXHJcbiAgICAgICAgICAgIDxUZXh0Q29udHJvbCBjYW5FZGl0IHZhbHVlPXt2fSBvbkNoYW5nZT17b25DaGFuZ2V9IC8+XHJcbiAgICAgICAgICApLFxyXG4gICAgICAgICAgZXhwcmVzc2lvbjogKHYsIG9uQ2hhbmdlKSA9PiAoXHJcbiAgICAgICAgICAgIDxUZXh0QXJlYUNvbnRyb2xcclxuICAgICAgICAgICAgICBjYW5FZGl0XHJcbiAgICAgICAgICAgICAgaW5pdGlhbFZhbHVlPXt2fVxyXG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cclxuICAgICAgICAgICAgICBleHRyYUNsYXNzZXM9e1snZGF0YXNvdXJjZS1zcWwtZXhwcmVzc2lvbiddfVxyXG4gICAgICAgICAgICAgIGxhbmd1YWdlPVwic3FsXCJcclxuICAgICAgICAgICAgICBvZmZlckVkaXRJbk1vZGFsPXtmYWxzZX1cclxuICAgICAgICAgICAgICBtaW5MaW5lcz17NX1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICksXHJcbiAgICAgICAgICBkZXNjcmlwdGlvbjogKHYsIG9uQ2hhbmdlLCBsYWJlbCkgPT4gKFxyXG4gICAgICAgICAgICA8U3RhY2tlZEZpZWxkXHJcbiAgICAgICAgICAgICAgbGFiZWw9e2xhYmVsfVxyXG4gICAgICAgICAgICAgIGZvcm1FbGVtZW50PXs8VGV4dENvbnRyb2wgdmFsdWU9e3Z9IG9uQ2hhbmdlPXtvbkNoYW5nZX0gLz59XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICApLFxyXG4gICAgICAgICAgZDNmb3JtYXQ6ICh2LCBvbkNoYW5nZSwgbGFiZWwpID0+IChcclxuICAgICAgICAgICAgPFN0YWNrZWRGaWVsZFxyXG4gICAgICAgICAgICAgIGxhYmVsPXtsYWJlbH1cclxuICAgICAgICAgICAgICBmb3JtRWxlbWVudD17PFRleHRDb250cm9sIHZhbHVlPXt2fSBvbkNoYW5nZT17b25DaGFuZ2V9IC8+fVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgKSxcclxuICAgICAgICB9fVxyXG4gICAgICAgIGFsbG93RGVsZXRlc1xyXG4gICAgICAgIHN0aWNreUhlYWRlclxyXG4gICAgICAvPlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHJlbmRlcigpIHtcclxuICAgIGNvbnN0IHsgZGF0YXNvdXJjZSwgYWN0aXZlVGFiS2V5IH0gPSB0aGlzLnN0YXRlO1xyXG4gICAgY29uc3QgeyBtZXRyaWNzIH0gPSBkYXRhc291cmNlO1xyXG4gICAgY29uc3Qgc29ydGVkTWV0cmljcyA9IG1ldHJpY3M/Lmxlbmd0aCA/IHRoaXMuc29ydE1ldHJpY3MobWV0cmljcykgOiBbXTtcclxuICAgIGNvbnN0IHsgdGhlbWUgfSA9IHRoaXMucHJvcHM7XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgPERhdGFzb3VyY2VDb250YWluZXI+XHJcbiAgICAgICAge3RoaXMucmVuZGVyRXJyb3JzKCl9XHJcbiAgICAgICAgPEFsZXJ0XHJcbiAgICAgICAgICBjc3M9e3RoZW1lID0+ICh7IG1hcmdpbkJvdHRvbTogdGhlbWUuZ3JpZFVuaXQgKiA0IH0pfVxyXG4gICAgICAgICAgdHlwZT1cIndhcm5pbmdcIlxyXG4gICAgICAgICAgbWVzc2FnZT17XHJcbiAgICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgICAgeycgJ31cclxuICAgICAgICAgICAgICA8c3Ryb25nPnt0KCdCZSBjYXJlZnVsLicpfSA8L3N0cm9uZz5cclxuICAgICAgICAgICAgICB7dChcclxuICAgICAgICAgICAgICAgICdDaGFuZ2luZyB0aGVzZSBzZXR0aW5ncyB3aWxsIGFmZmVjdCBhbGwgY2hhcnRzIHVzaW5nIHRoaXMgZGF0YXNldCwgaW5jbHVkaW5nIGNoYXJ0cyBvd25lZCBieSBvdGhlciBwZW9wbGUuJyxcclxuICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICA8Lz5cclxuICAgICAgICAgIH1cclxuICAgICAgICAvPlxyXG4gICAgICAgIDxTdHlsZWRUYWJsZVRhYnNcclxuICAgICAgICAgIGZ1bGxXaWR0aD17ZmFsc2V9XHJcbiAgICAgICAgICBpZD1cInRhYmxlLXRhYnNcIlxyXG4gICAgICAgICAgZGF0YS10ZXN0PVwiZWRpdC1kYXRhc2V0LXRhYnNcIlxyXG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlVGFiU2VsZWN0fVxyXG4gICAgICAgICAgZGVmYXVsdEFjdGl2ZUtleT17YWN0aXZlVGFiS2V5fVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxUYWJzLlRhYlBhbmUga2V5PXswfSB0YWI9e3QoJ1NvdXJjZScpfT5cclxuICAgICAgICAgICAge3RoaXMucmVuZGVyU291cmNlRmllbGRzZXQodGhlbWUpfVxyXG4gICAgICAgICAgPC9UYWJzLlRhYlBhbmU+XHJcbiAgICAgICAgICA8VGFicy5UYWJQYW5lXHJcbiAgICAgICAgICAgIHRhYj17XHJcbiAgICAgICAgICAgICAgPENvbGxlY3Rpb25UYWJUaXRsZVxyXG4gICAgICAgICAgICAgICAgY29sbGVjdGlvbj17c29ydGVkTWV0cmljc31cclxuICAgICAgICAgICAgICAgIHRpdGxlPXt0KCdNZXRyaWNzJyl9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBrZXk9ezF9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIHt0aGlzLnJlbmRlck1ldHJpY0NvbGxlY3Rpb24oKX1cclxuICAgICAgICAgIDwvVGFicy5UYWJQYW5lPlxyXG4gICAgICAgICAgPFRhYnMuVGFiUGFuZVxyXG4gICAgICAgICAgICB0YWI9e1xyXG4gICAgICAgICAgICAgIDxDb2xsZWN0aW9uVGFiVGl0bGVcclxuICAgICAgICAgICAgICAgIGNvbGxlY3Rpb249e3RoaXMuc3RhdGUuZGF0YWJhc2VDb2x1bW5zfVxyXG4gICAgICAgICAgICAgICAgdGl0bGU9e3QoJ0NvbHVtbnMnKX1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGtleT17Mn1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPFN0eWxlZENvbHVtbnNUYWJXcmFwcGVyPlxyXG4gICAgICAgICAgICAgIDxDb2x1bW5CdXR0b25XcmFwcGVyPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibS10LTEwIG0tci0xMFwiPlxyXG4gICAgICAgICAgICAgICAgICA8QnV0dG9uXHJcbiAgICAgICAgICAgICAgICAgICAgYnV0dG9uU2l6ZT1cInNtYWxsXCJcclxuICAgICAgICAgICAgICAgICAgICBidXR0b25TdHlsZT1cInRlcnRpYXJ5XCJcclxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLnN5bmNNZXRhZGF0YX1cclxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJzeW5jLWZyb20tc291cmNlXCJcclxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17dGhpcy5zdGF0ZS5pc0VkaXRNb2RlfVxyXG4gICAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtZGF0YWJhc2VcIiAvPnsnICd9XHJcbiAgICAgICAgICAgICAgICAgICAge3QoJ1N5bmMgY29sdW1ucyBmcm9tIHNvdXJjZScpfVxyXG4gICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgICA8L0NvbHVtbkJ1dHRvbldyYXBwZXI+XHJcbiAgICAgICAgICAgICAgPENvbHVtbkNvbGxlY3Rpb25UYWJsZVxyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY29sdW1ucy10YWJsZVwiXHJcbiAgICAgICAgICAgICAgICBjb2x1bW5zPXt0aGlzLnN0YXRlLmRhdGFiYXNlQ29sdW1uc31cclxuICAgICAgICAgICAgICAgIGRhdGFzb3VyY2U9e2RhdGFzb3VyY2V9XHJcbiAgICAgICAgICAgICAgICBvbkNvbHVtbnNDaGFuZ2U9e2RhdGFiYXNlQ29sdW1ucyA9PlxyXG4gICAgICAgICAgICAgICAgICB0aGlzLnNldENvbHVtbnMoeyBkYXRhYmFzZUNvbHVtbnMgfSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIG9uRGF0YXNvdXJjZUNoYW5nZT17dGhpcy5vbkRhdGFzb3VyY2VDaGFuZ2V9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5tZXRhZGF0YUxvYWRpbmcgJiYgPExvYWRpbmcgLz59XHJcbiAgICAgICAgICAgIDwvU3R5bGVkQ29sdW1uc1RhYldyYXBwZXI+XHJcbiAgICAgICAgICA8L1RhYnMuVGFiUGFuZT5cclxuICAgICAgICAgIDxUYWJzLlRhYlBhbmVcclxuICAgICAgICAgICAgdGFiPXtcclxuICAgICAgICAgICAgICA8Q29sbGVjdGlvblRhYlRpdGxlXHJcbiAgICAgICAgICAgICAgICBjb2xsZWN0aW9uPXt0aGlzLnN0YXRlLmNhbGN1bGF0ZWRDb2x1bW5zfVxyXG4gICAgICAgICAgICAgICAgdGl0bGU9e3QoJ0NhbGN1bGF0ZWQgY29sdW1ucycpfVxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAga2V5PXszfVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8U3R5bGVkQ29sdW1uc1RhYldyYXBwZXI+XHJcbiAgICAgICAgICAgICAgPENvbHVtbkNvbGxlY3Rpb25UYWJsZVxyXG4gICAgICAgICAgICAgICAgY29sdW1ucz17dGhpcy5zdGF0ZS5jYWxjdWxhdGVkQ29sdW1uc31cclxuICAgICAgICAgICAgICAgIG9uQ29sdW1uc0NoYW5nZT17Y2FsY3VsYXRlZENvbHVtbnMgPT5cclxuICAgICAgICAgICAgICAgICAgdGhpcy5zZXRDb2x1bW5zKHsgY2FsY3VsYXRlZENvbHVtbnMgfSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIG9uRGF0YXNvdXJjZUNoYW5nZT17dGhpcy5vbkRhdGFzb3VyY2VDaGFuZ2V9XHJcbiAgICAgICAgICAgICAgICBkYXRhc291cmNlPXtkYXRhc291cmNlfVxyXG4gICAgICAgICAgICAgICAgZWRpdGFibGVDb2x1bW5OYW1lXHJcbiAgICAgICAgICAgICAgICBzaG93RXhwcmVzc2lvblxyXG4gICAgICAgICAgICAgICAgYWxsb3dBZGRJdGVtXHJcbiAgICAgICAgICAgICAgICBhbGxvd0VkaXREYXRhVHlwZVxyXG4gICAgICAgICAgICAgICAgaXRlbUdlbmVyYXRvcj17KCkgPT4gKHtcclxuICAgICAgICAgICAgICAgICAgY29sdW1uX25hbWU6ICc8bmV3IGNvbHVtbj4nLFxyXG4gICAgICAgICAgICAgICAgICBmaWx0ZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICBncm91cGJ5OiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAnPGVudGVyIFNRTCBleHByZXNzaW9uIGhlcmU+JyxcclxuICAgICAgICAgICAgICAgICAgX19leHBhbmRlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIH0pfVxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDwvU3R5bGVkQ29sdW1uc1RhYldyYXBwZXI+XHJcbiAgICAgICAgICA8L1RhYnMuVGFiUGFuZT5cclxuICAgICAgICAgIDxUYWJzLlRhYlBhbmUga2V5PXs0fSB0YWI9e3QoJ1NldHRpbmdzJyl9PlxyXG4gICAgICAgICAgICA8Um93IGd1dHRlcj17MTZ9PlxyXG4gICAgICAgICAgICAgIDxDb2wgeHM9ezI0fSBtZD17MTJ9PlxyXG4gICAgICAgICAgICAgICAgPEZvcm1Db250YWluZXI+e3RoaXMucmVuZGVyU2V0dGluZ3NGaWVsZHNldCgpfTwvRm9ybUNvbnRhaW5lcj5cclxuICAgICAgICAgICAgICA8L0NvbD5cclxuICAgICAgICAgICAgICA8Q29sIHhzPXsyNH0gbWQ9ezEyfT5cclxuICAgICAgICAgICAgICAgIDxGb3JtQ29udGFpbmVyPnt0aGlzLnJlbmRlckFkdmFuY2VkRmllbGRzZXQoKX08L0Zvcm1Db250YWluZXI+XHJcbiAgICAgICAgICAgICAgPC9Db2w+XHJcbiAgICAgICAgICAgIDwvUm93PlxyXG4gICAgICAgICAgPC9UYWJzLlRhYlBhbmU+XHJcbiAgICAgICAgPC9TdHlsZWRUYWJsZVRhYnM+XHJcbiAgICAgIDwvRGF0YXNvdXJjZUNvbnRhaW5lcj5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5EYXRhc291cmNlRWRpdG9yLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcclxuRGF0YXNvdXJjZUVkaXRvci5wcm9wVHlwZXMgPSBwcm9wVHlwZXM7XHJcblxyXG5jb25zdCBEYXRhU291cmNlQ29tcG9uZW50ID0gd2l0aFRoZW1lKERhdGFzb3VyY2VFZGl0b3IpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgd2l0aFRvYXN0cyhEYXRhU291cmNlQ29tcG9uZW50KTtcclxuIl19 */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };var _ref3 =  false ? 0 : { name: \"17jm38f-DatasourceEditor\", styles: \"margin-top:8px;label:DatasourceEditor;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFx3b3JrXFxQdWJsaWNQcm9qZWN0XFxzdXBlcnNldFxcc3VwZXJzZXQtZnJvbnRlbmRcXHNyY1xcY29tcG9uZW50c1xcRGF0YXNvdXJjZVxcRGF0YXNvdXJjZUVkaXRvci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcStCeUIiLCJmaWxlIjoiRDpcXHdvcmtcXFB1YmxpY1Byb2plY3RcXHN1cGVyc2V0XFxzdXBlcnNldC1mcm9udGVuZFxcc3JjXFxjb21wb25lbnRzXFxEYXRhc291cmNlXFxEYXRhc291cmNlRWRpdG9yLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXHJcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxyXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxyXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXHJcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcclxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXHJcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxyXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxyXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxyXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcclxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xyXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCByaXNvbiBmcm9tICdyaXNvbic7XHJcbmltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHsgUmFkaW8gfSBmcm9tICdzcmMvY29tcG9uZW50cy9SYWRpbyc7XHJcbmltcG9ydCBDYXJkIGZyb20gJ3NyYy9jb21wb25lbnRzL0NhcmQnO1xyXG5pbXBvcnQgQWxlcnQgZnJvbSAnc3JjL2NvbXBvbmVudHMvQWxlcnQnO1xyXG5pbXBvcnQgQmFkZ2UgZnJvbSAnc3JjL2NvbXBvbmVudHMvQmFkZ2UnO1xyXG5pbXBvcnQgc2hvcnRpZCBmcm9tICdzaG9ydGlkJztcclxuaW1wb3J0IHsgc3R5bGVkLCBTdXBlcnNldENsaWVudCwgdCwgd2l0aFRoZW1lIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xyXG5pbXBvcnQgeyBTZWxlY3QsIFJvdywgQ29sIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMnO1xyXG5pbXBvcnQgeyBGb3JtTGFiZWwgfSBmcm9tICdzcmMvY29tcG9uZW50cy9Gb3JtJztcclxuaW1wb3J0IEJ1dHRvbiBmcm9tICdzcmMvY29tcG9uZW50cy9CdXR0b24nO1xyXG5pbXBvcnQgVGFicyBmcm9tICdzcmMvY29tcG9uZW50cy9UYWJzJztcclxuaW1wb3J0IENlcnRpZmllZEJhZGdlIGZyb20gJ3NyYy9jb21wb25lbnRzL0NlcnRpZmllZEJhZGdlJztcclxuaW1wb3J0IFdhcm5pbmdJY29uV2l0aFRvb2x0aXAgZnJvbSAnc3JjL2NvbXBvbmVudHMvV2FybmluZ0ljb25XaXRoVG9vbHRpcCc7XHJcbmltcG9ydCBEYXRhYmFzZVNlbGVjdG9yIGZyb20gJ3NyYy9jb21wb25lbnRzL0RhdGFiYXNlU2VsZWN0b3InO1xyXG5pbXBvcnQgTGFiZWwgZnJvbSAnc3JjL2NvbXBvbmVudHMvTGFiZWwnO1xyXG5pbXBvcnQgTG9hZGluZyBmcm9tICdzcmMvY29tcG9uZW50cy9Mb2FkaW5nJztcclxuaW1wb3J0IFRhYmxlU2VsZWN0b3IgZnJvbSAnc3JjL2NvbXBvbmVudHMvVGFibGVTZWxlY3Rvcic7XHJcbmltcG9ydCBFZGl0YWJsZVRpdGxlIGZyb20gJ3NyYy9jb21wb25lbnRzL0VkaXRhYmxlVGl0bGUnO1xyXG5pbXBvcnQgeyBnZXRDbGllbnRFcnJvck9iamVjdCB9IGZyb20gJ3NyYy91dGlscy9nZXRDbGllbnRFcnJvck9iamVjdCc7XHJcbmltcG9ydCBDaGVja2JveENvbnRyb2wgZnJvbSAnc3JjL2V4cGxvcmUvY29tcG9uZW50cy9jb250cm9scy9DaGVja2JveENvbnRyb2wnO1xyXG5pbXBvcnQgVGV4dENvbnRyb2wgZnJvbSAnc3JjL2V4cGxvcmUvY29tcG9uZW50cy9jb250cm9scy9UZXh0Q29udHJvbCc7XHJcbmltcG9ydCBUZXh0QXJlYUNvbnRyb2wgZnJvbSAnc3JjL2V4cGxvcmUvY29tcG9uZW50cy9jb250cm9scy9UZXh0QXJlYUNvbnRyb2wnO1xyXG5pbXBvcnQgU3BhdGlhbENvbnRyb2wgZnJvbSAnc3JjL2V4cGxvcmUvY29tcG9uZW50cy9jb250cm9scy9TcGF0aWFsQ29udHJvbCc7XHJcbmltcG9ydCB3aXRoVG9hc3RzIGZyb20gJ3NyYy9jb21wb25lbnRzL01lc3NhZ2VUb2FzdHMvd2l0aFRvYXN0cyc7XHJcbmltcG9ydCB7IEZlYXR1cmVGbGFnLCBpc0ZlYXR1cmVFbmFibGVkIH0gZnJvbSAnc3JjL2ZlYXR1cmVGbGFncyc7XHJcbmltcG9ydCBJY29ucyBmcm9tICdzcmMvY29tcG9uZW50cy9JY29ucyc7XHJcbmltcG9ydCBDb2xsZWN0aW9uVGFibGUgZnJvbSAnLi9Db2xsZWN0aW9uVGFibGUnO1xyXG5pbXBvcnQgRmllbGRzZXQgZnJvbSAnLi9GaWVsZHNldCc7XHJcbmltcG9ydCBGaWVsZCBmcm9tICcuL0ZpZWxkJztcclxuXHJcbmNvbnN0IERhdGFzb3VyY2VDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIC5jaGFuZ2Utd2FybmluZyB7XHJcbiAgICBtYXJnaW46IDE2cHggMTBweCAwO1xyXG4gICAgY29sb3I6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuY29sb3JzLndhcm5pbmcuYmFzZX07XHJcbiAgfVxyXG5cclxuICAuY2hhbmdlLXdhcm5pbmcgLmJvbGQge1xyXG4gICAgZm9udC13ZWlnaHQ6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUudHlwb2dyYXBoeS53ZWlnaHRzLmJvbGR9O1xyXG4gIH1cclxuXHJcbiAgLmZvcm0tZ3JvdXAuaGFzLWZlZWRiYWNrID4gLmhlbHAtYmxvY2sge1xyXG4gICAgbWFyZ2luLXRvcDogOHB4O1xyXG4gIH1cclxuXHJcbiAgLmZvcm0tZ3JvdXAuZm9ybS1ncm91cC1tZCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgRmxleFJvd0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG5cclxuICBzdmcge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0fXB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IFN0eWxlZFRhYmxlVGFicyA9IHN0eWxlZChUYWJzKWBcclxuICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAuYW50LXRhYnMtY29udGVudC1ob2xkZXIge1xyXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3R5bGVkQmFkZ2UgPSBzdHlsZWQoQmFkZ2UpYFxyXG4gIC5hbnQtYmFkZ2UtY291bnQge1xyXG4gICAgbGluZS1oZWlnaHQ6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuZ3JpZFVuaXQgKiA0fXB4O1xyXG4gICAgaGVpZ2h0OiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0ICogNH1weDtcclxuICAgIG1hcmdpbi1sZWZ0OiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0fXB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IEVkaXRMb2NrQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBmb250LXNpemU6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUudHlwb2dyYXBoeS5zaXplcy5zfXB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBhIHtcclxuICAgIHBhZGRpbmc6IDAgMTBweDtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBDb2x1bW5CdXR0b25XcmFwcGVyID0gc3R5bGVkLmRpdmBcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAkeyh7IHRoZW1lIH0pID0+IGBtYXJnaW4tYm90dG9tOiAke3RoZW1lLmdyaWRVbml0ICogMn1weGB9XHJcbmA7XHJcblxyXG5jb25zdCBTdHlsZWRMYWJlbFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBzcGFuIHtcclxuICAgIG1hcmdpbi1yaWdodDogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5ncmlkVW5pdH1weDtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBTdHlsZWRDb2x1bW5zVGFiV3JhcHBlciA9IHN0eWxlZC5kaXZgXHJcbiAgLnRhYmxlID4gdGJvZHkgPiB0ciA+IHRkIHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgfVxyXG5cclxuICAuYW50LXRhZyB7XHJcbiAgICBtYXJnaW4tdG9wOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0fXB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IGNoZWNrYm94R2VuZXJhdG9yID0gKGQsIG9uQ2hhbmdlKSA9PiAoXHJcbiAgPENoZWNrYm94Q29udHJvbCB2YWx1ZT17ZH0gb25DaGFuZ2U9e29uQ2hhbmdlfSAvPlxyXG4pO1xyXG5jb25zdCBEQVRBX1RZUEVTID0gW1xyXG4gIHsgdmFsdWU6ICdTVFJJTkcnLCBsYWJlbDogJ1NUUklORycgfSxcclxuICB7IHZhbHVlOiAnTlVNRVJJQycsIGxhYmVsOiAnTlVNRVJJQycgfSxcclxuICB7IHZhbHVlOiAnREFURVRJTUUnLCBsYWJlbDogJ0RBVEVUSU1FJyB9LFxyXG4gIHsgdmFsdWU6ICdCT09MRUFOJywgbGFiZWw6ICdCT09MRUFOJyB9LFxyXG5dO1xyXG5cclxuY29uc3QgREFUQVNPVVJDRV9UWVBFU19BUlIgPSBbXHJcbiAgeyBrZXk6ICdwaHlzaWNhbCcsIGxhYmVsOiB0KCdQaHlzaWNhbCAodGFibGUgb3IgdmlldyknKSB9LFxyXG4gIHsga2V5OiAndmlydHVhbCcsIGxhYmVsOiB0KCdWaXJ0dWFsIChTUUwpJykgfSxcclxuXTtcclxuY29uc3QgREFUQVNPVVJDRV9UWVBFUyA9IHt9O1xyXG5EQVRBU09VUkNFX1RZUEVTX0FSUi5mb3JFYWNoKG8gPT4ge1xyXG4gIERBVEFTT1VSQ0VfVFlQRVNbby5rZXldID0gbztcclxufSk7XHJcblxyXG5mdW5jdGlvbiBDb2xsZWN0aW9uVGFiVGl0bGUoeyB0aXRsZSwgY29sbGVjdGlvbiB9KSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXZcclxuICAgICAgY3NzPXt7IGRpc3BsYXk6ICdmbGV4JywgYWxpZ25JdGVtczogJ2NlbnRlcicgfX1cclxuICAgICAgZGF0YS10ZXN0PXtgY29sbGVjdGlvbi10YWItJHt0aXRsZX1gfVxyXG4gICAgPlxyXG4gICAgICB7dGl0bGV9eycgJ31cclxuICAgICAgPFN0eWxlZEJhZGdlIGNvdW50PXtjb2xsZWN0aW9uID8gY29sbGVjdGlvbi5sZW5ndGggOiAwfSBzaG93WmVybyAvPlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufVxyXG5cclxuQ29sbGVjdGlvblRhYlRpdGxlLnByb3BUeXBlcyA9IHtcclxuICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICBjb2xsZWN0aW9uOiBQcm9wVHlwZXMuYXJyYXksXHJcbn07XHJcblxyXG5mdW5jdGlvbiBDb2x1bW5Db2xsZWN0aW9uVGFibGUoe1xyXG4gIGNvbHVtbnMsXHJcbiAgZGF0YXNvdXJjZSxcclxuICBvbkNvbHVtbnNDaGFuZ2UsXHJcbiAgb25EYXRhc291cmNlQ2hhbmdlLFxyXG4gIGVkaXRhYmxlQ29sdW1uTmFtZSxcclxuICBzaG93RXhwcmVzc2lvbixcclxuICBhbGxvd0FkZEl0ZW0sXHJcbiAgYWxsb3dFZGl0RGF0YVR5cGUsXHJcbiAgaXRlbUdlbmVyYXRvcixcclxufSkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8Q29sbGVjdGlvblRhYmxlXHJcbiAgICAgIGNvbGxlY3Rpb249e2NvbHVtbnN9XHJcbiAgICAgIHRhYmxlQ29sdW1ucz17W1xyXG4gICAgICAgICdjb2x1bW5fbmFtZScsXHJcbiAgICAgICAgJ3R5cGUnLFxyXG4gICAgICAgICdpc19kdHRtJyxcclxuICAgICAgICAnbWFpbl9kdHRtX2NvbCcsXHJcbiAgICAgICAgJ2ZpbHRlcmFibGUnLFxyXG4gICAgICAgICdncm91cGJ5JyxcclxuICAgICAgXX1cclxuICAgICAgc29ydENvbHVtbnM9e1tcclxuICAgICAgICAnY29sdW1uX25hbWUnLFxyXG4gICAgICAgICd0eXBlJyxcclxuICAgICAgICAnaXNfZHR0bScsXHJcbiAgICAgICAgJ21haW5fZHR0bV9jb2wnLFxyXG4gICAgICAgICdmaWx0ZXJhYmxlJyxcclxuICAgICAgICAnZ3JvdXBieScsXHJcbiAgICAgIF19XHJcbiAgICAgIGFsbG93RGVsZXRlc1xyXG4gICAgICBhbGxvd0FkZEl0ZW09e2FsbG93QWRkSXRlbX1cclxuICAgICAgaXRlbUdlbmVyYXRvcj17aXRlbUdlbmVyYXRvcn1cclxuICAgICAgc3RpY2t5SGVhZGVyXHJcbiAgICAgIGV4cGFuZEZpZWxkc2V0PXtcclxuICAgICAgICA8Rm9ybUNvbnRhaW5lcj5cclxuICAgICAgICAgIDxGaWVsZHNldCBjb21wYWN0PlxyXG4gICAgICAgICAgICB7c2hvd0V4cHJlc3Npb24gJiYgKFxyXG4gICAgICAgICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgICAgICAgZmllbGRLZXk9XCJleHByZXNzaW9uXCJcclxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdTUUwgZXhwcmVzc2lvbicpfVxyXG4gICAgICAgICAgICAgICAgY29udHJvbD17XHJcbiAgICAgICAgICAgICAgICAgIDxUZXh0QXJlYUNvbnRyb2xcclxuICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZT1cIm1hcmtkb3duXCJcclxuICAgICAgICAgICAgICAgICAgICBvZmZlckVkaXRJbk1vZGFsPXtmYWxzZX1cclxuICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICBmaWVsZEtleT1cInZlcmJvc2VfbmFtZVwiXHJcbiAgICAgICAgICAgICAgbGFiZWw9e3QoJ0xhYmVsJyl9XHJcbiAgICAgICAgICAgICAgY29udHJvbD17XHJcbiAgICAgICAgICAgICAgICA8VGV4dENvbnRyb2xcclxuICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwidmVyYm9zZV9uYW1lXCJcclxuICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e3QoJ0xhYmVsJyl9XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICAgICAgZmllbGRLZXk9XCJkZXNjcmlwdGlvblwiXHJcbiAgICAgICAgICAgICAgbGFiZWw9e3QoJ0Rlc2NyaXB0aW9uJyl9XHJcbiAgICAgICAgICAgICAgY29udHJvbD17XHJcbiAgICAgICAgICAgICAgICA8VGV4dENvbnRyb2xcclxuICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwiZGVzY3JpcHRpb25cIlxyXG4gICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnRGVzY3JpcHRpb24nKX1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICB7YWxsb3dFZGl0RGF0YVR5cGUgJiYgKFxyXG4gICAgICAgICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgICAgICAgZmllbGRLZXk9XCJ0eXBlXCJcclxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdEYXRhIHR5cGUnKX1cclxuICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xyXG4gICAgICAgICAgICAgICAgICA8U2VsZWN0XHJcbiAgICAgICAgICAgICAgICAgICAgYXJpYUxhYmVsPXt0KCdEYXRhIHR5cGUnKX1cclxuICAgICAgICAgICAgICAgICAgICBvcHRpb25zPXtEQVRBX1RZUEVTfVxyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU9XCJ0eXBlXCJcclxuICAgICAgICAgICAgICAgICAgICBhbGxvd05ld09wdGlvbnNcclxuICAgICAgICAgICAgICAgICAgICBhbGxvd0NsZWFyXHJcbiAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICAgICAgZmllbGRLZXk9XCJweXRob25fZGF0ZV9mb3JtYXRcIlxyXG4gICAgICAgICAgICAgIGxhYmVsPXt0KCdEYXRldGltZSBmb3JtYXQnKX1cclxuICAgICAgICAgICAgICBkZXNjcmlwdGlvbj17XHJcbiAgICAgICAgICAgICAgICAvKiBOb3RlIHRoZSBmcmFnbWVudGVkIHRyYW5zbGF0aW9ucyBtYXkgbm90IHdvcmsuICovXHJcbiAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICB7dCgnVGhlIHBhdHRlcm4gb2YgdGltZXN0YW1wIGZvcm1hdC4gRm9yIHN0cmluZ3MgdXNlICcpfVxyXG4gICAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMi9saWJyYXJ5L2RhdGV0aW1lLmh0bWwjc3RyZnRpbWUtc3RycHRpbWUtYmVoYXZpb3JcIj5cclxuICAgICAgICAgICAgICAgICAgICB7dCgnUHl0aG9uIGRhdGV0aW1lIHN0cmluZyBwYXR0ZXJuJyl9XHJcbiAgICAgICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgICAgICAge3QoJyBleHByZXNzaW9uIHdoaWNoIG5lZWRzIHRvIGFkaGVyZSB0byB0aGUgJyl9XHJcbiAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9JU09fODYwMVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIHt0KCdJU08gODYwMScpfVxyXG4gICAgICAgICAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICAgICAgICAgIHt0KGAgc3RhbmRhcmQgdG8gZW5zdXJlIHRoYXQgdGhlIGxleGljb2dyYXBoaWNhbCBvcmRlcmluZ1xyXG4gICAgICAgICAgICAgICAgICAgICAgY29pbmNpZGVzIHdpdGggdGhlIGNocm9ub2xvZ2ljYWwgb3JkZXJpbmcuIElmIHRoZVxyXG4gICAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wIGZvcm1hdCBkb2VzIG5vdCBhZGhlcmUgdG8gdGhlIElTTyA4NjAxIHN0YW5kYXJkXHJcbiAgICAgICAgICAgICAgICAgICAgICB5b3Ugd2lsbCBuZWVkIHRvIGRlZmluZSBhbiBleHByZXNzaW9uIGFuZCB0eXBlIGZvclxyXG4gICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtaW5nIHRoZSBzdHJpbmcgaW50byBhIGRhdGUgb3IgdGltZXN0YW1wLiBOb3RlXHJcbiAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50bHkgdGltZSB6b25lcyBhcmUgbm90IHN1cHBvcnRlZC4gSWYgdGltZSBpcyBzdG9yZWRcclxuICAgICAgICAgICAgICAgICAgICAgIGluIGVwb2NoIGZvcm1hdCwgcHV0IFxcYGVwb2NoX3NcXGAgb3IgXFxgZXBvY2hfbXNcXGAuIElmIG5vIHBhdHRlcm5cclxuICAgICAgICAgICAgICAgICAgICAgIGlzIHNwZWNpZmllZCB3ZSBmYWxsIGJhY2sgdG8gdXNpbmcgdGhlIG9wdGlvbmFsIGRlZmF1bHRzIG9uIGEgcGVyXHJcbiAgICAgICAgICAgICAgICAgICAgICBkYXRhYmFzZS9jb2x1bW4gbmFtZSBsZXZlbCB2aWEgdGhlIGV4dHJhIHBhcmFtZXRlci5gKX1cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgIDxUZXh0Q29udHJvbFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sSWQ9XCJweXRob25fZGF0ZV9mb3JtYXRcIlxyXG4gICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIiVZLyVtLyVkXCJcclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICBmaWVsZEtleT1cImNlcnRpZmllZF9ieVwiXHJcbiAgICAgICAgICAgICAgbGFiZWw9e3QoJ0NlcnRpZmllZCBCeScpfVxyXG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KCdQZXJzb24gb3IgZ3JvdXAgdGhhdCBoYXMgY2VydGlmaWVkIHRoaXMgbWV0cmljJyl9XHJcbiAgICAgICAgICAgICAgY29udHJvbD17XHJcbiAgICAgICAgICAgICAgICA8VGV4dENvbnRyb2xcclxuICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwiY2VydGlmaWVkXCJcclxuICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e3QoJ0NlcnRpZmllZCBieScpfVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgICAgIGZpZWxkS2V5PVwiY2VydGlmaWNhdGlvbl9kZXRhaWxzXCJcclxuICAgICAgICAgICAgICBsYWJlbD17dCgnQ2VydGlmaWNhdGlvbiBkZXRhaWxzJyl9XHJcbiAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoJ0RldGFpbHMgb2YgdGhlIGNlcnRpZmljYXRpb24nKX1cclxuICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgIDxUZXh0Q29udHJvbFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sSWQ9XCJjZXJ0aWZpY2F0aW9uRGV0YWlsc1wiXHJcbiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXt0KCdDZXJ0aWZpY2F0aW9uIGRldGFpbHMnKX1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgPC9GaWVsZHNldD5cclxuICAgICAgICA8L0Zvcm1Db250YWluZXI+XHJcbiAgICAgIH1cclxuICAgICAgY29sdW1uTGFiZWxzPXt7XHJcbiAgICAgICAgY29sdW1uX25hbWU6IHQoJ0NvbHVtbicpLFxyXG4gICAgICAgIHR5cGU6IHQoJ0RhdGEgdHlwZScpLFxyXG4gICAgICAgIGdyb3VwYnk6IHQoJ0lzIGRpbWVuc2lvbicpLFxyXG4gICAgICAgIGlzX2R0dG06IHQoJ0lzIHRlbXBvcmFsJyksXHJcbiAgICAgICAgbWFpbl9kdHRtX2NvbDogdCgnRGVmYXVsdCBkYXRldGltZScpLFxyXG4gICAgICAgIGZpbHRlcmFibGU6IHQoJ0lzIGZpbHRlcmFibGUnKSxcclxuICAgICAgfX1cclxuICAgICAgb25DaGFuZ2U9e29uQ29sdW1uc0NoYW5nZX1cclxuICAgICAgaXRlbVJlbmRlcmVycz17e1xyXG4gICAgICAgIGNvbHVtbl9uYW1lOiAodiwgb25JdGVtQ2hhbmdlLCBfLCByZWNvcmQpID0+XHJcbiAgICAgICAgICBlZGl0YWJsZUNvbHVtbk5hbWUgPyAoXHJcbiAgICAgICAgICAgIDxTdHlsZWRMYWJlbFdyYXBwZXI+XHJcbiAgICAgICAgICAgICAge3JlY29yZC5pc19jZXJ0aWZpZWQgJiYgKFxyXG4gICAgICAgICAgICAgICAgPENlcnRpZmllZEJhZGdlXHJcbiAgICAgICAgICAgICAgICAgIGNlcnRpZmllZEJ5PXtyZWNvcmQuY2VydGlmaWVkX2J5fVxyXG4gICAgICAgICAgICAgICAgICBkZXRhaWxzPXtyZWNvcmQuY2VydGlmaWNhdGlvbl9kZXRhaWxzfVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgIDxUZXh0Q29udHJvbCB2YWx1ZT17dn0gb25DaGFuZ2U9e29uSXRlbUNoYW5nZX0gLz5cclxuICAgICAgICAgICAgPC9TdHlsZWRMYWJlbFdyYXBwZXI+XHJcbiAgICAgICAgICApIDogKFxyXG4gICAgICAgICAgICA8U3R5bGVkTGFiZWxXcmFwcGVyPlxyXG4gICAgICAgICAgICAgIHtyZWNvcmQuaXNfY2VydGlmaWVkICYmIChcclxuICAgICAgICAgICAgICAgIDxDZXJ0aWZpZWRCYWRnZVxyXG4gICAgICAgICAgICAgICAgICBjZXJ0aWZpZWRCeT17cmVjb3JkLmNlcnRpZmllZF9ieX1cclxuICAgICAgICAgICAgICAgICAgZGV0YWlscz17cmVjb3JkLmNlcnRpZmljYXRpb25fZGV0YWlsc31cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgICB7dn1cclxuICAgICAgICAgICAgPC9TdHlsZWRMYWJlbFdyYXBwZXI+XHJcbiAgICAgICAgICApLFxyXG4gICAgICAgIG1haW5fZHR0bV9jb2w6ICh2YWx1ZSwgX29uSXRlbUNoYW5nZSwgX2xhYmVsLCByZWNvcmQpID0+IHtcclxuICAgICAgICAgIGNvbnN0IGNoZWNrZWQgPSBkYXRhc291cmNlLm1haW5fZHR0bV9jb2wgPT09IHJlY29yZC5jb2x1bW5fbmFtZTtcclxuICAgICAgICAgIGNvbnN0IGRpc2FibGVkID0gIWNvbHVtbnMuZmluZChcclxuICAgICAgICAgICAgY29sdW1uID0+IGNvbHVtbi5jb2x1bW5fbmFtZSA9PT0gcmVjb3JkLmNvbHVtbl9uYW1lLFxyXG4gICAgICAgICAgKS5pc19kdHRtO1xyXG4gICAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPFJhZGlvXHJcbiAgICAgICAgICAgICAgZGF0YS10ZXN0PXtgcmFkaW8tZGVmYXVsdC1kdHRtLSR7cmVjb3JkLmNvbHVtbl9uYW1lfWB9XHJcbiAgICAgICAgICAgICAgY2hlY2tlZD17Y2hlY2tlZH1cclxuICAgICAgICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XHJcbiAgICAgICAgICAgICAgb25DaGFuZ2U9eygpID0+XHJcbiAgICAgICAgICAgICAgICBvbkRhdGFzb3VyY2VDaGFuZ2Uoe1xyXG4gICAgICAgICAgICAgICAgICAuLi5kYXRhc291cmNlLFxyXG4gICAgICAgICAgICAgICAgICBtYWluX2R0dG1fY29sOiByZWNvcmQuY29sdW1uX25hbWUsXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICB0eXBlOiBkID0+IChkID8gPExhYmVsPntkfTwvTGFiZWw+IDogbnVsbCksXHJcbiAgICAgICAgaXNfZHR0bTogY2hlY2tib3hHZW5lcmF0b3IsXHJcbiAgICAgICAgZmlsdGVyYWJsZTogY2hlY2tib3hHZW5lcmF0b3IsXHJcbiAgICAgICAgZ3JvdXBieTogY2hlY2tib3hHZW5lcmF0b3IsXHJcbiAgICAgIH19XHJcbiAgICAvPlxyXG4gICk7XHJcbn1cclxuQ29sdW1uQ29sbGVjdGlvblRhYmxlLnByb3BUeXBlcyA9IHtcclxuICBjb2x1bW5zOiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcclxuICBkYXRhc291cmNlOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXHJcbiAgb25Db2x1bW5zQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxyXG4gIG9uRGF0YXNvdXJjZUNoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcclxuICBlZGl0YWJsZUNvbHVtbk5hbWU6IFByb3BUeXBlcy5ib29sLFxyXG4gIHNob3dFeHByZXNzaW9uOiBQcm9wVHlwZXMuYm9vbCxcclxuICBhbGxvd0FkZEl0ZW06IFByb3BUeXBlcy5ib29sLFxyXG4gIGFsbG93RWRpdERhdGFUeXBlOiBQcm9wVHlwZXMuYm9vbCxcclxuICBpdGVtR2VuZXJhdG9yOiBQcm9wVHlwZXMuZnVuYyxcclxufTtcclxuQ29sdW1uQ29sbGVjdGlvblRhYmxlLmRlZmF1bHRQcm9wcyA9IHtcclxuICBlZGl0YWJsZUNvbHVtbk5hbWU6IGZhbHNlLFxyXG4gIHNob3dFeHByZXNzaW9uOiBmYWxzZSxcclxuICBhbGxvd0FkZEl0ZW06IGZhbHNlLFxyXG4gIGFsbG93RWRpdERhdGFUeXBlOiBmYWxzZSxcclxuICBpdGVtR2VuZXJhdG9yOiAoKSA9PiAoe1xyXG4gICAgY29sdW1uX25hbWU6ICc8bmV3IGNvbHVtbj4nLFxyXG4gICAgZmlsdGVyYWJsZTogdHJ1ZSxcclxuICAgIGdyb3VwYnk6IHRydWUsXHJcbiAgfSksXHJcbn07XHJcblxyXG5mdW5jdGlvbiBTdGFja2VkRmllbGQoeyBsYWJlbCwgZm9ybUVsZW1lbnQgfSkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2PlxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIDxzdHJvbmc+e2xhYmVsfTwvc3Ryb25nPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdj57Zm9ybUVsZW1lbnR9PC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59XHJcblxyXG5TdGFja2VkRmllbGQucHJvcFR5cGVzID0ge1xyXG4gIGxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIGZvcm1FbGVtZW50OiBQcm9wVHlwZXMubm9kZSxcclxufTtcclxuXHJcbmZ1bmN0aW9uIEZvcm1Db250YWluZXIoeyBjaGlsZHJlbiB9KSB7XHJcbiAgcmV0dXJuIDxDYXJkIHBhZGRlZD57Y2hpbGRyZW59PC9DYXJkPjtcclxufVxyXG5cclxuRm9ybUNvbnRhaW5lci5wcm9wVHlwZXMgPSB7XHJcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxyXG59O1xyXG5cclxuY29uc3QgcHJvcFR5cGVzID0ge1xyXG4gIGRhdGFzb3VyY2U6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcclxuICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgYWRkU3VjY2Vzc1RvYXN0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxyXG4gIGFkZERhbmdlclRvYXN0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxyXG59O1xyXG5cclxuY29uc3QgZGVmYXVsdFByb3BzID0ge1xyXG4gIG9uQ2hhbmdlOiAoKSA9PiB7fSxcclxufTtcclxuXHJcbmZ1bmN0aW9uIE93bmVyc1NlbGVjdG9yKHsgZGF0YXNvdXJjZSwgb25DaGFuZ2UgfSkge1xyXG4gIGNvbnN0IGxvYWRPcHRpb25zID0gdXNlQ2FsbGJhY2soKHNlYXJjaCA9ICcnLCBwYWdlLCBwYWdlU2l6ZSkgPT4ge1xyXG4gICAgY29uc3QgcXVlcnkgPSByaXNvbi5lbmNvZGUoeyBmaWx0ZXI6IHNlYXJjaCwgcGFnZSwgcGFnZV9zaXplOiBwYWdlU2l6ZSB9KTtcclxuICAgIHJldHVybiBTdXBlcnNldENsaWVudC5nZXQoe1xyXG4gICAgICBlbmRwb2ludDogYC9hcGkvdjEvZGF0YXNldC9yZWxhdGVkL293bmVycz9xPSR7cXVlcnl9YCxcclxuICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4gKHtcclxuICAgICAgZGF0YTogcmVzcG9uc2UuanNvbi5yZXN1bHQubWFwKGl0ZW0gPT4gKHtcclxuICAgICAgICB2YWx1ZTogaXRlbS52YWx1ZSxcclxuICAgICAgICBsYWJlbDogaXRlbS50ZXh0LFxyXG4gICAgICB9KSksXHJcbiAgICAgIHRvdGFsQ291bnQ6IHJlc3BvbnNlLmpzb24uY291bnQsXHJcbiAgICB9KSk7XHJcbiAgfSwgW10pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFNlbGVjdFxyXG4gICAgICBhcmlhTGFiZWw9e3QoJ1NlbGVjdCBvd25lcnMnKX1cclxuICAgICAgbW9kZT1cIm11bHRpcGxlXCJcclxuICAgICAgbmFtZT1cIm93bmVyc1wiXHJcbiAgICAgIHZhbHVlPXtkYXRhc291cmNlLm93bmVyc31cclxuICAgICAgb3B0aW9ucz17bG9hZE9wdGlvbnN9XHJcbiAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cclxuICAgICAgaGVhZGVyPXs8Rm9ybUxhYmVsPnt0KCdPd25lcnMnKX08L0Zvcm1MYWJlbD59XHJcbiAgICAgIGFsbG93Q2xlYXJcclxuICAgIC8+XHJcbiAgKTtcclxufVxyXG5cclxuY2xhc3MgRGF0YXNvdXJjZUVkaXRvciBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQge1xyXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICBzdXBlcihwcm9wcyk7XHJcbiAgICB0aGlzLnN0YXRlID0ge1xyXG4gICAgICBkYXRhc291cmNlOiB7XHJcbiAgICAgICAgLi4ucHJvcHMuZGF0YXNvdXJjZSxcclxuICAgICAgICBvd25lcnM6IHByb3BzLmRhdGFzb3VyY2Uub3duZXJzLm1hcChvd25lciA9PiAoe1xyXG4gICAgICAgICAgdmFsdWU6IG93bmVyLnZhbHVlIHx8IG93bmVyLmlkLFxyXG4gICAgICAgICAgbGFiZWw6IG93bmVyLmxhYmVsIHx8IGAke293bmVyLmZpcnN0X25hbWV9ICR7b3duZXIubGFzdF9uYW1lfWAsXHJcbiAgICAgICAgfSkpLFxyXG4gICAgICAgIG1ldHJpY3M6IHByb3BzLmRhdGFzb3VyY2UubWV0cmljcz8ubWFwKG1ldHJpYyA9PiB7XHJcbiAgICAgICAgICBjb25zdCB7XHJcbiAgICAgICAgICAgIGNlcnRpZmllZF9ieTogY2VydGlmaWVkQnlNZXRyaWMsXHJcbiAgICAgICAgICAgIGNlcnRpZmljYXRpb25fZGV0YWlsczogY2VydGlmaWNhdGlvbkRldGFpbHMsXHJcbiAgICAgICAgICB9ID0gbWV0cmljO1xyXG4gICAgICAgICAgY29uc3Qge1xyXG4gICAgICAgICAgICBjZXJ0aWZpY2F0aW9uOiB7IGRldGFpbHMsIGNlcnRpZmllZF9ieTogY2VydGlmaWVkQnkgfSA9IHt9LFxyXG4gICAgICAgICAgICB3YXJuaW5nX21hcmtkb3duOiB3YXJuaW5nTWFya2Rvd24sXHJcbiAgICAgICAgICB9ID0gSlNPTi5wYXJzZShtZXRyaWMuZXh0cmEgfHwgJ3t9JykgfHwge307XHJcbiAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAuLi5tZXRyaWMsXHJcbiAgICAgICAgICAgIGNlcnRpZmljYXRpb25fZGV0YWlsczogY2VydGlmaWNhdGlvbkRldGFpbHMgfHwgZGV0YWlscyxcclxuICAgICAgICAgICAgd2FybmluZ19tYXJrZG93bjogd2FybmluZ01hcmtkb3duIHx8ICcnLFxyXG4gICAgICAgICAgICBjZXJ0aWZpZWRfYnk6IGNlcnRpZmllZEJ5IHx8IGNlcnRpZmllZEJ5TWV0cmljLFxyXG4gICAgICAgICAgfTtcclxuICAgICAgICB9KSxcclxuICAgICAgfSxcclxuICAgICAgZXJyb3JzOiBbXSxcclxuICAgICAgaXNEcnVpZDpcclxuICAgICAgICBwcm9wcy5kYXRhc291cmNlLnR5cGUgPT09ICdkcnVpZCcgfHxcclxuICAgICAgICBwcm9wcy5kYXRhc291cmNlLmRhdGFzb3VyY2VfdHlwZSA9PT0gJ2RydWlkJyxcclxuICAgICAgaXNTcWxhOlxyXG4gICAgICAgIHByb3BzLmRhdGFzb3VyY2UuZGF0YXNvdXJjZV90eXBlID09PSAndGFibGUnIHx8XHJcbiAgICAgICAgcHJvcHMuZGF0YXNvdXJjZS50eXBlID09PSAndGFibGUnLFxyXG4gICAgICBpc0VkaXRNb2RlOiBmYWxzZSxcclxuICAgICAgZGF0YWJhc2VDb2x1bW5zOiBwcm9wcy5kYXRhc291cmNlLmNvbHVtbnMuZmlsdGVyKGNvbCA9PiAhY29sLmV4cHJlc3Npb24pLFxyXG4gICAgICBjYWxjdWxhdGVkQ29sdW1uczogcHJvcHMuZGF0YXNvdXJjZS5jb2x1bW5zLmZpbHRlcihcclxuICAgICAgICBjb2wgPT4gISFjb2wuZXhwcmVzc2lvbixcclxuICAgICAgKSxcclxuICAgICAgbWV0YWRhdGFMb2FkaW5nOiBmYWxzZSxcclxuICAgICAgYWN0aXZlVGFiS2V5OiAwLFxyXG4gICAgICBkYXRhc291cmNlVHlwZTogcHJvcHMuZGF0YXNvdXJjZS5zcWxcclxuICAgICAgICA/IERBVEFTT1VSQ0VfVFlQRVMudmlydHVhbC5rZXlcclxuICAgICAgICA6IERBVEFTT1VSQ0VfVFlQRVMucGh5c2ljYWwua2V5LFxyXG4gICAgfTtcclxuXHJcbiAgICB0aGlzLm9uQ2hhbmdlID0gdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5vbkNoYW5nZUVkaXRNb2RlID0gdGhpcy5vbkNoYW5nZUVkaXRNb2RlLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLm9uRGF0YXNvdXJjZVByb3BDaGFuZ2UgPSB0aGlzLm9uRGF0YXNvdXJjZVByb3BDaGFuZ2UuYmluZCh0aGlzKTtcclxuICAgIHRoaXMub25EYXRhc291cmNlQ2hhbmdlID0gdGhpcy5vbkRhdGFzb3VyY2VDaGFuZ2UuYmluZCh0aGlzKTtcclxuICAgIHRoaXMudGFibGVDaGFuZ2VBbmRTeW5jTWV0YWRhdGEgPVxyXG4gICAgICB0aGlzLnRhYmxlQ2hhbmdlQW5kU3luY01ldGFkYXRhLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLnN5bmNNZXRhZGF0YSA9IHRoaXMuc3luY01ldGFkYXRhLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLnNldENvbHVtbnMgPSB0aGlzLnNldENvbHVtbnMuYmluZCh0aGlzKTtcclxuICAgIHRoaXMudmFsaWRhdGVBbmRDaGFuZ2UgPSB0aGlzLnZhbGlkYXRlQW5kQ2hhbmdlLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmhhbmRsZVRhYlNlbGVjdCA9IHRoaXMuaGFuZGxlVGFiU2VsZWN0LmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmFsbG93RWRpdFNvdXJjZSA9ICFpc0ZlYXR1cmVFbmFibGVkKFxyXG4gICAgICBGZWF0dXJlRmxhZy5ESVNBQkxFX0RBVEFTRVRfU09VUkNFX0VESVQsXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgb25DaGFuZ2UoKSB7XHJcbiAgICAvLyBFbXB0eWluZyBTUUwgaWYgXCJQaHlzaWNhbFwiIHJhZGlvIGJ1dHRvbiBpcyBzZWxlY3RlZFxyXG4gICAgLy8gQ3VycmVudGx5IHRoZSBsb2dpYyB0byBrbm93IHdoZXRoZXIgdGhlIHNvdXJjZSBpc1xyXG4gICAgLy8gcGh5c2ljYWwgb3IgdmlydHVhbCBpcyBiYXNlZCBvbiB3aGV0aGVyIFNRTCBpcyBlbXB0eSBvciBub3QuXHJcbiAgICBjb25zdCB7IGRhdGFzb3VyY2VUeXBlLCBkYXRhc291cmNlIH0gPSB0aGlzLnN0YXRlO1xyXG4gICAgY29uc3Qgc3FsID1cclxuICAgICAgZGF0YXNvdXJjZVR5cGUgPT09IERBVEFTT1VSQ0VfVFlQRVMucGh5c2ljYWwua2V5ID8gJycgOiBkYXRhc291cmNlLnNxbDtcclxuICAgIGNvbnN0IG5ld0RhdGFzb3VyY2UgPSB7XHJcbiAgICAgIC4uLnRoaXMuc3RhdGUuZGF0YXNvdXJjZSxcclxuICAgICAgc3FsLFxyXG4gICAgICBjb2x1bW5zOiBbLi4udGhpcy5zdGF0ZS5kYXRhYmFzZUNvbHVtbnMsIC4uLnRoaXMuc3RhdGUuY2FsY3VsYXRlZENvbHVtbnNdLFxyXG4gICAgfTtcclxuICAgIHRoaXMucHJvcHMub25DaGFuZ2UobmV3RGF0YXNvdXJjZSwgdGhpcy5zdGF0ZS5lcnJvcnMpO1xyXG4gIH1cclxuXHJcbiAgb25DaGFuZ2VFZGl0TW9kZSgpIHtcclxuICAgIHRoaXMuc2V0U3RhdGUocHJldlN0YXRlID0+ICh7IGlzRWRpdE1vZGU6ICFwcmV2U3RhdGUuaXNFZGl0TW9kZSB9KSk7XHJcbiAgfVxyXG5cclxuICBvbkRhdGFzb3VyY2VDaGFuZ2UoZGF0YXNvdXJjZSwgY2FsbGJhY2sgPSB0aGlzLnZhbGlkYXRlQW5kQ2hhbmdlKSB7XHJcbiAgICB0aGlzLnNldFN0YXRlKHsgZGF0YXNvdXJjZSB9LCBjYWxsYmFjayk7XHJcbiAgfVxyXG5cclxuICBvbkRhdGFzb3VyY2VQcm9wQ2hhbmdlKGF0dHIsIHZhbHVlKSB7XHJcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkgcmV0dXJuOyAvLyBpZiB2YWx1ZSBpcyB1bmRlZmluZWQgZG8gbm90IHVwZGF0ZSBzdGF0ZVxyXG4gICAgY29uc3QgZGF0YXNvdXJjZSA9IHsgLi4udGhpcy5zdGF0ZS5kYXRhc291cmNlLCBbYXR0cl06IHZhbHVlIH07XHJcbiAgICB0aGlzLnNldFN0YXRlKFxyXG4gICAgICBwcmV2U3RhdGUgPT4gKHtcclxuICAgICAgICBkYXRhc291cmNlOiB7IC4uLnByZXZTdGF0ZS5kYXRhc291cmNlLCBbYXR0cl06IHZhbHVlIH0sXHJcbiAgICAgIH0pLFxyXG4gICAgICBhdHRyID09PSAndGFibGVfbmFtZSdcclxuICAgICAgICA/IHRoaXMub25EYXRhc291cmNlQ2hhbmdlKGRhdGFzb3VyY2UsIHRoaXMudGFibGVDaGFuZ2VBbmRTeW5jTWV0YWRhdGEpXHJcbiAgICAgICAgOiB0aGlzLm9uRGF0YXNvdXJjZUNoYW5nZShkYXRhc291cmNlLCB0aGlzLnZhbGlkYXRlQW5kQ2hhbmdlKSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBvbkRhdGFzb3VyY2VUeXBlQ2hhbmdlKGRhdGFzb3VyY2VUeXBlKSB7XHJcbiAgICB0aGlzLnNldFN0YXRlKHsgZGF0YXNvdXJjZVR5cGUgfSk7XHJcbiAgfVxyXG5cclxuICBzZXRDb2x1bW5zKG9iaikge1xyXG4gICAgLy8gdXBkYXRlIGNhbGN1bGF0ZWRDb2x1bW5zIG9yIGRhdGFiYXNlQ29sdW1uc1xyXG4gICAgdGhpcy5zZXRTdGF0ZShvYmosIHRoaXMudmFsaWRhdGVBbmRDaGFuZ2UpO1xyXG4gIH1cclxuXHJcbiAgdmFsaWRhdGVBbmRDaGFuZ2UoKSB7XHJcbiAgICB0aGlzLnZhbGlkYXRlKHRoaXMub25DaGFuZ2UpO1xyXG4gIH1cclxuXHJcbiAgdGFibGVDaGFuZ2VBbmRTeW5jTWV0YWRhdGEoKSB7XHJcbiAgICB0aGlzLnZhbGlkYXRlKCgpID0+IHtcclxuICAgICAgdGhpcy5zeW5jTWV0YWRhdGEoKTtcclxuICAgICAgdGhpcy5vbkNoYW5nZSgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGVDb2x1bW5zKGNvbHMpIHtcclxuICAgIGNvbnN0IHsgZGF0YWJhc2VDb2x1bW5zIH0gPSB0aGlzLnN0YXRlO1xyXG4gICAgY29uc3QgZGF0YWJhc2VDb2x1bW5OYW1lcyA9IGNvbHMubWFwKGNvbCA9PiBjb2wubmFtZSk7XHJcbiAgICBjb25zdCBjdXJyZW50Q29scyA9IGRhdGFiYXNlQ29sdW1ucy5yZWR1Y2UoXHJcbiAgICAgIChhZ2csIGNvbCkgPT4gKHtcclxuICAgICAgICAuLi5hZ2csXHJcbiAgICAgICAgW2NvbC5jb2x1bW5fbmFtZV06IGNvbCxcclxuICAgICAgfSksXHJcbiAgICAgIHt9LFxyXG4gICAgKTtcclxuICAgIGNvbnN0IGZpbmFsQ29sdW1ucyA9IFtdO1xyXG4gICAgY29uc3QgcmVzdWx0cyA9IHtcclxuICAgICAgYWRkZWQ6IFtdLFxyXG4gICAgICBtb2RpZmllZDogW10sXHJcbiAgICAgIHJlbW92ZWQ6IGRhdGFiYXNlQ29sdW1uc1xyXG4gICAgICAgIC5tYXAoY29sID0+IGNvbC5jb2x1bW5fbmFtZSlcclxuICAgICAgICAuZmlsdGVyKGNvbCA9PiAhZGF0YWJhc2VDb2x1bW5OYW1lcy5pbmNsdWRlcyhjb2wpKSxcclxuICAgIH07XHJcbiAgICBjb2xzLmZvckVhY2goY29sID0+IHtcclxuICAgICAgY29uc3QgY3VycmVudENvbCA9IGN1cnJlbnRDb2xzW2NvbC5uYW1lXTtcclxuICAgICAgaWYgKCFjdXJyZW50Q29sKSB7XHJcbiAgICAgICAgLy8gbmV3IGNvbHVtblxyXG4gICAgICAgIGZpbmFsQ29sdW1ucy5wdXNoKHtcclxuICAgICAgICAgIGlkOiBzaG9ydGlkLmdlbmVyYXRlKCksXHJcbiAgICAgICAgICBjb2x1bW5fbmFtZTogY29sLm5hbWUsXHJcbiAgICAgICAgICB0eXBlOiBjb2wudHlwZSxcclxuICAgICAgICAgIGdyb3VwYnk6IHRydWUsXHJcbiAgICAgICAgICBmaWx0ZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgaXNfZHR0bTogY29sLmlzX2R0dG0sXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmVzdWx0cy5hZGRlZC5wdXNoKGNvbC5uYW1lKTtcclxuICAgICAgfSBlbHNlIGlmIChcclxuICAgICAgICBjdXJyZW50Q29sLnR5cGUgIT09IGNvbC50eXBlIHx8XHJcbiAgICAgICAgKCFjdXJyZW50Q29sLmlzX2R0dG0gJiYgY29sLmlzX2R0dG0pXHJcbiAgICAgICkge1xyXG4gICAgICAgIC8vIG1vZGlmaWVkIGNvbHVtblxyXG4gICAgICAgIGZpbmFsQ29sdW1ucy5wdXNoKHtcclxuICAgICAgICAgIC4uLmN1cnJlbnRDb2wsXHJcbiAgICAgICAgICB0eXBlOiBjb2wudHlwZSxcclxuICAgICAgICAgIGlzX2R0dG06IGN1cnJlbnRDb2wuaXNfZHR0bSB8fCBjb2wuaXNfZHR0bSxcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXN1bHRzLm1vZGlmaWVkLnB1c2goY29sLm5hbWUpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vIHVuY2hhbmdlZFxyXG4gICAgICAgIGZpbmFsQ29sdW1ucy5wdXNoKGN1cnJlbnRDb2wpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIGlmIChcclxuICAgICAgcmVzdWx0cy5hZGRlZC5sZW5ndGggfHxcclxuICAgICAgcmVzdWx0cy5tb2RpZmllZC5sZW5ndGggfHxcclxuICAgICAgcmVzdWx0cy5yZW1vdmVkLmxlbmd0aFxyXG4gICAgKSB7XHJcbiAgICAgIHRoaXMuc2V0Q29sdW1ucyh7IGRhdGFiYXNlQ29sdW1uczogZmluYWxDb2x1bW5zIH0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlc3VsdHM7XHJcbiAgfVxyXG5cclxuICBzeW5jTWV0YWRhdGEoKSB7XHJcbiAgICBjb25zdCB7IGRhdGFzb3VyY2UgfSA9IHRoaXMuc3RhdGU7XHJcbiAgICBjb25zdCBwYXJhbXMgPSB7XHJcbiAgICAgIGRhdGFzb3VyY2VfdHlwZTogZGF0YXNvdXJjZS50eXBlIHx8IGRhdGFzb3VyY2UuZGF0YXNvdXJjZV90eXBlLFxyXG4gICAgICBkYXRhYmFzZV9uYW1lOlxyXG4gICAgICAgIGRhdGFzb3VyY2UuZGF0YWJhc2UuZGF0YWJhc2VfbmFtZSB8fCBkYXRhc291cmNlLmRhdGFiYXNlLm5hbWUsXHJcbiAgICAgIHNjaGVtYV9uYW1lOiBkYXRhc291cmNlLnNjaGVtYSxcclxuICAgICAgdGFibGVfbmFtZTogZGF0YXNvdXJjZS50YWJsZV9uYW1lLFxyXG4gICAgfTtcclxuICAgIE9iamVjdC5lbnRyaWVzKHBhcmFtcykuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XHJcbiAgICAgIC8vIHJpc29uIGNhbid0IGVuY29kZSB0aGUgdW5kZWZpbmVkIHZhbHVlXHJcbiAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgcGFyYW1zW2tleV0gPSBudWxsO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIGNvbnN0IGVuZHBvaW50ID0gYC9kYXRhc291cmNlL2V4dGVybmFsX21ldGFkYXRhX2J5X25hbWUvP3E9JHtyaXNvbi5lbmNvZGUoXHJcbiAgICAgIHBhcmFtcyxcclxuICAgICl9YDtcclxuICAgIHRoaXMuc2V0U3RhdGUoeyBtZXRhZGF0YUxvYWRpbmc6IHRydWUgfSk7XHJcblxyXG4gICAgU3VwZXJzZXRDbGllbnQuZ2V0KHsgZW5kcG9pbnQgfSlcclxuICAgICAgLnRoZW4oKHsganNvbiB9KSA9PiB7XHJcbiAgICAgICAgY29uc3QgcmVzdWx0cyA9IHRoaXMudXBkYXRlQ29sdW1ucyhqc29uKTtcclxuICAgICAgICBpZiAocmVzdWx0cy5tb2RpZmllZC5sZW5ndGgpIHtcclxuICAgICAgICAgIHRoaXMucHJvcHMuYWRkU3VjY2Vzc1RvYXN0KFxyXG4gICAgICAgICAgICB0KCdNb2RpZmllZCBjb2x1bW5zOiAlcycsIHJlc3VsdHMubW9kaWZpZWQuam9pbignLCAnKSksXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocmVzdWx0cy5yZW1vdmVkLmxlbmd0aCkge1xyXG4gICAgICAgICAgdGhpcy5wcm9wcy5hZGRTdWNjZXNzVG9hc3QoXHJcbiAgICAgICAgICAgIHQoJ1JlbW92ZWQgY29sdW1uczogJXMnLCByZXN1bHRzLnJlbW92ZWQuam9pbignLCAnKSksXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocmVzdWx0cy5hZGRlZC5sZW5ndGgpIHtcclxuICAgICAgICAgIHRoaXMucHJvcHMuYWRkU3VjY2Vzc1RvYXN0KFxyXG4gICAgICAgICAgICB0KCdOZXcgY29sdW1ucyBhZGRlZDogJXMnLCByZXN1bHRzLmFkZGVkLmpvaW4oJywgJykpLFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5wcm9wcy5hZGRTdWNjZXNzVG9hc3QodCgnTWV0YWRhdGEgaGFzIGJlZW4gc3luY2VkJykpO1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBtZXRhZGF0YUxvYWRpbmc6IGZhbHNlIH0pO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2gocmVzcG9uc2UgPT5cclxuICAgICAgICBnZXRDbGllbnRFcnJvck9iamVjdChyZXNwb25zZSkudGhlbigoeyBlcnJvciwgc3RhdHVzVGV4dCB9KSA9PiB7XHJcbiAgICAgICAgICB0aGlzLnByb3BzLmFkZERhbmdlclRvYXN0KFxyXG4gICAgICAgICAgICBlcnJvciB8fCBzdGF0dXNUZXh0IHx8IHQoJ0FuIGVycm9yIGhhcyBvY2N1cnJlZCcpLFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBtZXRhZGF0YUxvYWRpbmc6IGZhbHNlIH0pO1xyXG4gICAgICAgIH0pLFxyXG4gICAgICApO1xyXG4gIH1cclxuXHJcbiAgZmluZER1cGxpY2F0ZXMoYXJyLCBhY2Nlc3Nvcikge1xyXG4gICAgY29uc3Qgc2VlbiA9IHt9O1xyXG4gICAgY29uc3QgZHVwcyA9IFtdO1xyXG4gICAgYXJyLmZvckVhY2gob2JqID0+IHtcclxuICAgICAgY29uc3QgaXRlbSA9IGFjY2Vzc29yKG9iaik7XHJcbiAgICAgIGlmIChpdGVtIGluIHNlZW4pIHtcclxuICAgICAgICBkdXBzLnB1c2goaXRlbSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgc2VlbltpdGVtXSA9IG51bGw7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGR1cHM7XHJcbiAgfVxyXG5cclxuICB2YWxpZGF0ZShjYWxsYmFjaykge1xyXG4gICAgbGV0IGVycm9ycyA9IFtdO1xyXG4gICAgbGV0IGR1cHM7XHJcbiAgICBjb25zdCB7IGRhdGFzb3VyY2UgfSA9IHRoaXMuc3RhdGU7XHJcblxyXG4gICAgLy8gTG9va2luZyBmb3IgZHVwbGljYXRlIGNvbHVtbl9uYW1lXHJcbiAgICBkdXBzID0gdGhpcy5maW5kRHVwbGljYXRlcyhkYXRhc291cmNlLmNvbHVtbnMsIG9iaiA9PiBvYmouY29sdW1uX25hbWUpO1xyXG4gICAgZXJyb3JzID0gZXJyb3JzLmNvbmNhdChcclxuICAgICAgZHVwcy5tYXAobmFtZSA9PiB0KCdDb2x1bW4gbmFtZSBbJXNdIGlzIGR1cGxpY2F0ZWQnLCBuYW1lKSksXHJcbiAgICApO1xyXG5cclxuICAgIC8vIExvb2tpbmcgZm9yIGR1cGxpY2F0ZSBtZXRyaWNfbmFtZVxyXG4gICAgZHVwcyA9IHRoaXMuZmluZER1cGxpY2F0ZXMoZGF0YXNvdXJjZS5tZXRyaWNzLCBvYmogPT4gb2JqLm1ldHJpY19uYW1lKTtcclxuICAgIGVycm9ycyA9IGVycm9ycy5jb25jYXQoXHJcbiAgICAgIGR1cHMubWFwKG5hbWUgPT4gdCgnTWV0cmljIG5hbWUgWyVzXSBpcyBkdXBsaWNhdGVkJywgbmFtZSkpLFxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBNYWtpbmcgc3VyZSBjYWxjdWxhdGVkQ29sdW1ucyBoYXZlIGFuIGV4cHJlc3Npb24gZGVmaW5lZFxyXG4gICAgY29uc3Qgbm9GaWx0ZXJDYWxjQ29scyA9IHRoaXMuc3RhdGUuY2FsY3VsYXRlZENvbHVtbnMuZmlsdGVyKFxyXG4gICAgICBjb2wgPT4gIWNvbC5leHByZXNzaW9uICYmICFjb2wuanNvbixcclxuICAgICk7XHJcbiAgICBlcnJvcnMgPSBlcnJvcnMuY29uY2F0KFxyXG4gICAgICBub0ZpbHRlckNhbGNDb2xzLm1hcChjb2wgPT5cclxuICAgICAgICB0KCdDYWxjdWxhdGVkIGNvbHVtbiBbJXNdIHJlcXVpcmVzIGFuIGV4cHJlc3Npb24nLCBjb2wuY29sdW1uX25hbWUpLFxyXG4gICAgICApLFxyXG4gICAgKTtcclxuXHJcbiAgICB0aGlzLnNldFN0YXRlKHsgZXJyb3JzIH0sIGNhbGxiYWNrKTtcclxuICB9XHJcblxyXG4gIGhhbmRsZVRhYlNlbGVjdChhY3RpdmVUYWJLZXkpIHtcclxuICAgIHRoaXMuc2V0U3RhdGUoeyBhY3RpdmVUYWJLZXkgfSk7XHJcbiAgfVxyXG5cclxuICBzb3J0TWV0cmljcyhtZXRyaWNzKSB7XHJcbiAgICByZXR1cm4gbWV0cmljcy5zb3J0KCh7IGlkOiBhIH0sIHsgaWQ6IGIgfSkgPT4gYiAtIGEpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyU2V0dGluZ3NGaWVsZHNldCgpIHtcclxuICAgIGNvbnN0IHsgZGF0YXNvdXJjZSB9ID0gdGhpcy5zdGF0ZTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxGaWVsZHNldFxyXG4gICAgICAgIHRpdGxlPXt0KCdCYXNpYycpfVxyXG4gICAgICAgIGl0ZW09e2RhdGFzb3VyY2V9XHJcbiAgICAgICAgb25DaGFuZ2U9e3RoaXMub25EYXRhc291cmNlQ2hhbmdlfVxyXG4gICAgICA+XHJcbiAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICBmaWVsZEtleT1cImRlc2NyaXB0aW9uXCJcclxuICAgICAgICAgIGxhYmVsPXt0KCdEZXNjcmlwdGlvbicpfVxyXG4gICAgICAgICAgY29udHJvbD17XHJcbiAgICAgICAgICAgIDxUZXh0QXJlYUNvbnRyb2wgbGFuZ3VhZ2U9XCJtYXJrZG93blwiIG9mZmVyRWRpdEluTW9kYWw9e2ZhbHNlfSAvPlxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIC8+XHJcbiAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICBmaWVsZEtleT1cImRlZmF1bHRfZW5kcG9pbnRcIlxyXG4gICAgICAgICAgbGFiZWw9e3QoJ0RlZmF1bHQgVVJMJyl9XHJcbiAgICAgICAgICBkZXNjcmlwdGlvbj17dChcclxuICAgICAgICAgICAgJ0RlZmF1bHQgVVJMIHRvIHJlZGlyZWN0IHRvIHdoZW4gYWNjZXNzaW5nIGZyb20gdGhlIGRhdGFzZXQgbGlzdCBwYWdlJyxcclxuICAgICAgICAgICl9XHJcbiAgICAgICAgICBjb250cm9sPXs8VGV4dENvbnRyb2wgY29udHJvbElkPVwiZGVmYXVsdF9lbmRwb2ludFwiIC8+fVxyXG4gICAgICAgIC8+XHJcbiAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICBpbmxpbmVcclxuICAgICAgICAgIGZpZWxkS2V5PVwiZmlsdGVyX3NlbGVjdF9lbmFibGVkXCJcclxuICAgICAgICAgIGxhYmVsPXt0KCdBdXRvY29tcGxldGUgZmlsdGVycycpfVxyXG4gICAgICAgICAgZGVzY3JpcHRpb249e3QoJ1doZXRoZXIgdG8gcG9wdWxhdGUgYXV0b2NvbXBsZXRlIGZpbHRlcnMgb3B0aW9ucycpfVxyXG4gICAgICAgICAgY29udHJvbD17PENoZWNrYm94Q29udHJvbCAvPn1cclxuICAgICAgICAvPlxyXG4gICAgICAgIHt0aGlzLnN0YXRlLmlzU3FsYSAmJiAoXHJcbiAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgZmllbGRLZXk9XCJmZXRjaF92YWx1ZXNfcHJlZGljYXRlXCJcclxuICAgICAgICAgICAgbGFiZWw9e3QoJ0F1dG9jb21wbGV0ZSBxdWVyeSBwcmVkaWNhdGUnKX1cclxuICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoXHJcbiAgICAgICAgICAgICAgJ1doZW4gdXNpbmcgXCJBdXRvY29tcGxldGUgZmlsdGVyc1wiLCB0aGlzIGNhbiBiZSB1c2VkIHRvIGltcHJvdmUgcGVyZm9ybWFuY2UgJyArXHJcbiAgICAgICAgICAgICAgICAnb2YgdGhlIHF1ZXJ5IGZldGNoaW5nIHRoZSB2YWx1ZXMuIFVzZSB0aGlzIG9wdGlvbiB0byBhcHBseSBhICcgK1xyXG4gICAgICAgICAgICAgICAgJ3ByZWRpY2F0ZSAoV0hFUkUgY2xhdXNlKSB0byB0aGUgcXVlcnkgc2VsZWN0aW5nIHRoZSBkaXN0aW5jdCAnICtcclxuICAgICAgICAgICAgICAgICd2YWx1ZXMgZnJvbSB0aGUgdGFibGUuIFR5cGljYWxseSB0aGUgaW50ZW50IHdvdWxkIGJlIHRvIGxpbWl0IHRoZSBzY2FuICcgK1xyXG4gICAgICAgICAgICAgICAgJ2J5IGFwcGx5aW5nIGEgcmVsYXRpdmUgdGltZSBmaWx0ZXIgb24gYSBwYXJ0aXRpb25lZCBvciBpbmRleGVkIHRpbWUtcmVsYXRlZCBmaWVsZC4nLFxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICA8VGV4dEFyZWFDb250cm9sXHJcbiAgICAgICAgICAgICAgICBsYW5ndWFnZT1cInNxbFwiXHJcbiAgICAgICAgICAgICAgICBjb250cm9sSWQ9XCJmZXRjaF92YWx1ZXNfcHJlZGljYXRlXCJcclxuICAgICAgICAgICAgICAgIG1pbkxpbmVzPXs1fVxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgKX1cclxuICAgICAgICB7dGhpcy5zdGF0ZS5pc1NxbGEgJiYgKFxyXG4gICAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICAgIGZpZWxkS2V5PVwiZXh0cmFcIlxyXG4gICAgICAgICAgICBsYWJlbD17dCgnRXh0cmEnKX1cclxuICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoXHJcbiAgICAgICAgICAgICAgJ0V4dHJhIGRhdGEgdG8gc3BlY2lmeSB0YWJsZSBtZXRhZGF0YS4gQ3VycmVudGx5IHN1cHBvcnRzICcgK1xyXG4gICAgICAgICAgICAgICAgJ21ldGFkYXRhIG9mIHRoZSBmb3JtYXQ6IGB7IFwiY2VydGlmaWNhdGlvblwiOiB7IFwiY2VydGlmaWVkX2J5XCI6ICcgK1xyXG4gICAgICAgICAgICAgICAgJ1wiRGF0YSBQbGF0Zm9ybSBUZWFtXCIsIFwiZGV0YWlsc1wiOiBcIlRoaXMgdGFibGUgaXMgdGhlIHNvdXJjZSBvZiB0cnV0aC5cIiAnICtcclxuICAgICAgICAgICAgICAgICd9LCBcIndhcm5pbmdfbWFya2Rvd25cIjogXCJUaGlzIGlzIGEgd2FybmluZy5cIiB9YC4nLFxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICA8VGV4dEFyZWFDb250cm9sXHJcbiAgICAgICAgICAgICAgICBjb250cm9sSWQ9XCJleHRyYVwiXHJcbiAgICAgICAgICAgICAgICBsYW5ndWFnZT1cImpzb25cIlxyXG4gICAgICAgICAgICAgICAgb2ZmZXJFZGl0SW5Nb2RhbD17ZmFsc2V9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICApfVxyXG4gICAgICAgIDxPd25lcnNTZWxlY3RvclxyXG4gICAgICAgICAgZGF0YXNvdXJjZT17ZGF0YXNvdXJjZX1cclxuICAgICAgICAgIG9uQ2hhbmdlPXtuZXdPd25lcnMgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLm9uRGF0YXNvdXJjZUNoYW5nZSh7IC4uLmRhdGFzb3VyY2UsIG93bmVyczogbmV3T3duZXJzIH0pO1xyXG4gICAgICAgICAgfX1cclxuICAgICAgICAvPlxyXG4gICAgICA8L0ZpZWxkc2V0PlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHJlbmRlckFkdmFuY2VkRmllbGRzZXQoKSB7XHJcbiAgICBjb25zdCB7IGRhdGFzb3VyY2UgfSA9IHRoaXMuc3RhdGU7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8RmllbGRzZXRcclxuICAgICAgICB0aXRsZT17dCgnQWR2YW5jZWQnKX1cclxuICAgICAgICBpdGVtPXtkYXRhc291cmNlfVxyXG4gICAgICAgIG9uQ2hhbmdlPXt0aGlzLm9uRGF0YXNvdXJjZUNoYW5nZX1cclxuICAgICAgPlxyXG4gICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgZmllbGRLZXk9XCJjYWNoZV90aW1lb3V0XCJcclxuICAgICAgICAgIGxhYmVsPXt0KCdDYWNoZSB0aW1lb3V0Jyl9XHJcbiAgICAgICAgICBkZXNjcmlwdGlvbj17dChcclxuICAgICAgICAgICAgJ1RoZSBkdXJhdGlvbiBvZiB0aW1lIGluIHNlY29uZHMgYmVmb3JlIHRoZSBjYWNoZSBpcyBpbnZhbGlkYXRlZCcsXHJcbiAgICAgICAgICApfVxyXG4gICAgICAgICAgY29udHJvbD17PFRleHRDb250cm9sIGNvbnRyb2xJZD1cImNhY2hlX3RpbWVvdXRcIiAvPn1cclxuICAgICAgICAvPlxyXG4gICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgZmllbGRLZXk9XCJvZmZzZXRcIlxyXG4gICAgICAgICAgbGFiZWw9e3QoJ0hvdXJzIG9mZnNldCcpfVxyXG4gICAgICAgICAgY29udHJvbD17PFRleHRDb250cm9sIGNvbnRyb2xJZD1cIm9mZnNldFwiIC8+fVxyXG4gICAgICAgICAgZGVzY3JpcHRpb249e3QoXHJcbiAgICAgICAgICAgICdUaGUgbnVtYmVyIG9mIGhvdXJzLCBuZWdhdGl2ZSBvciBwb3NpdGl2ZSwgdG8gc2hpZnQgdGhlIHRpbWUgY29sdW1uLiBUaGlzIGNhbiBiZSB1c2VkIHRvIG1vdmUgVVRDIHRpbWUgdG8gbG9jYWwgdGltZS4nLFxyXG4gICAgICAgICAgKX1cclxuICAgICAgICAvPlxyXG4gICAgICAgIHt0aGlzLnN0YXRlLmlzU3FsYSAmJiAoXHJcbiAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgZmllbGRLZXk9XCJ0ZW1wbGF0ZV9wYXJhbXNcIlxyXG4gICAgICAgICAgICBsYWJlbD17dCgnVGVtcGxhdGUgcGFyYW1ldGVycycpfVxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbj17dChcclxuICAgICAgICAgICAgICAnQSBzZXQgb2YgcGFyYW1ldGVycyB0aGF0IGJlY29tZSBhdmFpbGFibGUgaW4gdGhlIHF1ZXJ5IHVzaW5nIEppbmphIHRlbXBsYXRpbmcgc3ludGF4JyxcclxuICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgY29udHJvbD17PFRleHRDb250cm9sIGNvbnRyb2xJZD1cInRlbXBsYXRlX3BhcmFtc1wiIC8+fVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICApfVxyXG4gICAgICA8L0ZpZWxkc2V0PlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHJlbmRlclNwYXRpYWxUYWIoKSB7XHJcbiAgICBjb25zdCB7IGRhdGFzb3VyY2UgfSA9IHRoaXMuc3RhdGU7XHJcbiAgICBjb25zdCB7IHNwYXRpYWxzLCBhbGxfY29sczogYWxsQ29scyB9ID0gZGF0YXNvdXJjZTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxUYWJzLlRhYlBhbmVcclxuICAgICAgICB0YWI9ezxDb2xsZWN0aW9uVGFiVGl0bGUgY29sbGVjdGlvbj17c3BhdGlhbHN9IHRpdGxlPXt0KCdTcGF0aWFsJyl9IC8+fVxyXG4gICAgICAgIGtleT17NH1cclxuICAgICAgPlxyXG4gICAgICAgIDxDb2xsZWN0aW9uVGFibGVcclxuICAgICAgICAgIHRhYmxlQ29sdW1ucz17WyduYW1lJywgJ2NvbmZpZyddfVxyXG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMub25EYXRhc291cmNlUHJvcENoYW5nZS5iaW5kKHRoaXMsICdzcGF0aWFscycpfVxyXG4gICAgICAgICAgaXRlbUdlbmVyYXRvcj17KCkgPT4gKHtcclxuICAgICAgICAgICAgbmFtZTogJzxuZXcgc3BhdGlhbD4nLFxyXG4gICAgICAgICAgICB0eXBlOiAnPG5vIHR5cGU+JyxcclxuICAgICAgICAgICAgY29uZmlnOiBudWxsLFxyXG4gICAgICAgICAgfSl9XHJcbiAgICAgICAgICBjb2xsZWN0aW9uPXtzcGF0aWFsc31cclxuICAgICAgICAgIGFsbG93RGVsZXRlc1xyXG4gICAgICAgICAgaXRlbVJlbmRlcmVycz17e1xyXG4gICAgICAgICAgICBuYW1lOiAoZCwgb25DaGFuZ2UpID0+IChcclxuICAgICAgICAgICAgICA8RWRpdGFibGVUaXRsZSBjYW5FZGl0IHRpdGxlPXtkfSBvblNhdmVUaXRsZT17b25DaGFuZ2V9IC8+XHJcbiAgICAgICAgICAgICksXHJcbiAgICAgICAgICAgIGNvbmZpZzogKHYsIG9uQ2hhbmdlKSA9PiAoXHJcbiAgICAgICAgICAgICAgPFNwYXRpYWxDb250cm9sIHZhbHVlPXt2fSBvbkNoYW5nZT17b25DaGFuZ2V9IGNob2ljZXM9e2FsbENvbHN9IC8+XHJcbiAgICAgICAgICAgICksXHJcbiAgICAgICAgICB9fVxyXG4gICAgICAgIC8+XHJcbiAgICAgIDwvVGFicy5UYWJQYW5lPlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHJlbmRlclNvdXJjZUZpZWxkc2V0KHRoZW1lKSB7XHJcbiAgICBjb25zdCB7IGRhdGFzb3VyY2UgfSA9IHRoaXMuc3RhdGU7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIHt0aGlzLmFsbG93RWRpdFNvdXJjZSAmJiAoXHJcbiAgICAgICAgICA8RWRpdExvY2tDb250YWluZXI+XHJcbiAgICAgICAgICAgIDxzcGFuIHJvbGU9XCJidXR0b25cIiB0YWJJbmRleD17MH0gb25DbGljaz17dGhpcy5vbkNoYW5nZUVkaXRNb2RlfT5cclxuICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5pc0VkaXRNb2RlID8gKFxyXG4gICAgICAgICAgICAgICAgPEljb25zLkxvY2tVbmxvY2tlZCBpY29uQ29sb3I9e3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUuYmFzZX0gLz5cclxuICAgICAgICAgICAgICApIDogKFxyXG4gICAgICAgICAgICAgICAgPEljb25zLkxvY2tMb2NrZWQgaWNvbkNvbG9yPXt0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmJhc2V9IC8+XHJcbiAgICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICB7IXRoaXMuc3RhdGUuaXNFZGl0TW9kZSAmJiAoXHJcbiAgICAgICAgICAgICAgPGRpdj57dCgnQ2xpY2sgdGhlIGxvY2sgdG8gbWFrZSBjaGFuZ2VzLicpfTwvZGl2PlxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICB7dGhpcy5zdGF0ZS5pc0VkaXRNb2RlICYmIChcclxuICAgICAgICAgICAgICA8ZGl2Pnt0KCdDbGljayB0aGUgbG9jayB0byBwcmV2ZW50IGZ1cnRoZXIgY2hhbmdlcy4nKX08L2Rpdj5cclxuICAgICAgICAgICAgKX1cclxuICAgICAgICAgIDwvRWRpdExvY2tDb250YWluZXI+XHJcbiAgICAgICAgKX1cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm0tbC0xMCBtLXQtMjAgbS1iLTEwXCI+XHJcbiAgICAgICAgICB7REFUQVNPVVJDRV9UWVBFU19BUlIubWFwKHR5cGUgPT4gKFxyXG4gICAgICAgICAgICA8UmFkaW9cclxuICAgICAgICAgICAgICBrZXk9e3R5cGUua2V5fVxyXG4gICAgICAgICAgICAgIHZhbHVlPXt0eXBlLmtleX1cclxuICAgICAgICAgICAgICBpbmxpbmVcclxuICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5vbkRhdGFzb3VyY2VUeXBlQ2hhbmdlLmJpbmQodGhpcywgdHlwZS5rZXkpfVxyXG4gICAgICAgICAgICAgIGNoZWNrZWQ9e3RoaXMuc3RhdGUuZGF0YXNvdXJjZVR5cGUgPT09IHR5cGUua2V5fVxyXG4gICAgICAgICAgICAgIGRpc2FibGVkPXshdGhpcy5zdGF0ZS5pc0VkaXRNb2RlfVxyXG4gICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAge3R5cGUubGFiZWx9XHJcbiAgICAgICAgICAgIDwvUmFkaW8+XHJcbiAgICAgICAgICApKX1cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8aHIgLz5cclxuICAgICAgICA8RmllbGRzZXQgaXRlbT17ZGF0YXNvdXJjZX0gb25DaGFuZ2U9e3RoaXMub25EYXRhc291cmNlQ2hhbmdlfSBjb21wYWN0PlxyXG4gICAgICAgICAge3RoaXMuc3RhdGUuZGF0YXNvdXJjZVR5cGUgPT09IERBVEFTT1VSQ0VfVFlQRVMudmlydHVhbC5rZXkgJiYgKFxyXG4gICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgIHt0aGlzLnN0YXRlLmlzU3FsYSAmJiAoXHJcbiAgICAgICAgICAgICAgICA8PlxyXG4gICAgICAgICAgICAgICAgICA8Q29sIHhzPXsyNH0gbWQ9ezEyfT5cclxuICAgICAgICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgICAgICAgIGZpZWxkS2V5PVwiZGF0YWJhc2VTZWxlY3RvclwiXHJcbiAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17dCgndmlydHVhbCcpfVxyXG4gICAgICAgICAgICAgICAgICAgICAgY29udHJvbD17XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY3NzPXt7IG1hcmdpblRvcDogOCB9fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8RGF0YWJhc2VTZWxlY3RvclxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGI9e2RhdGFzb3VyY2U/LmRhdGFiYXNlfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NoZW1hPXtkYXRhc291cmNlLnNjaGVtYX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uU2NoZW1hQ2hhbmdlPXtzY2hlbWEgPT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5pc0VkaXRNb2RlICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub25EYXRhc291cmNlUHJvcENoYW5nZSgnc2NoZW1hJywgc2NoZW1hKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25EYkNoYW5nZT17ZGF0YWJhc2UgPT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5pc0VkaXRNb2RlICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub25EYXRhc291cmNlUHJvcENoYW5nZSgnZGF0YWJhc2UnLCBkYXRhYmFzZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1Nb2RlPXtmYWxzZX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUVycm9yPXt0aGlzLnByb3BzLmFkZERhbmdlclRvYXN0fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyF0aGlzLnN0YXRlLmlzRWRpdE1vZGV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNzcz17eyB3aWR0aDogJ2NhbGMoMTAwJSAtIDM0cHgpJywgbWFyZ2luVG9wOiAtMTYgfX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgICAgICAgICAgZmllbGRLZXk9XCJ0YWJsZV9uYW1lXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e3QoJ0RhdGFzZXQgbmFtZScpfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dENvbnRyb2xcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xJZD1cInRhYmxlX25hbWVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RhYmxlID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkRhdGFzb3VyY2VQcm9wQ2hhbmdlKCd0YWJsZV9uYW1lJywgdGFibGUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXt0KCdEYXRhc2V0IG5hbWUnKX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXshdGhpcy5zdGF0ZS5pc0VkaXRNb2RlfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgIDwvQ29sPlxyXG4gICAgICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgICAgICBmaWVsZEtleT1cInNxbFwiXHJcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e3QoJ1NRTCcpfVxyXG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KFxyXG4gICAgICAgICAgICAgICAgICAgICAgJ1doZW4gc3BlY2lmeWluZyBTUUwsIHRoZSBkYXRhc291cmNlIGFjdHMgYXMgYSB2aWV3LiAnICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ1N1cGVyc2V0IHdpbGwgdXNlIHRoaXMgc3RhdGVtZW50IGFzIGEgc3VicXVlcnkgd2hpbGUgZ3JvdXBpbmcgYW5kIGZpbHRlcmluZyAnICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ29uIHRoZSBnZW5lcmF0ZWQgcGFyZW50IHF1ZXJpZXMuJyxcclxuICAgICAgICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xyXG4gICAgICAgICAgICAgICAgICAgICAgPFRleHRBcmVhQ29udHJvbFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZT1cInNxbFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9mZmVyRWRpdEluTW9kYWw9e2ZhbHNlfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtaW5MaW5lcz17MjB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heExpbmVzPXsyMH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyF0aGlzLnN0YXRlLmlzRWRpdE1vZGV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgIDwvPlxyXG4gICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAge3RoaXMuc3RhdGUuaXNEcnVpZCAmJiAoXHJcbiAgICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgICAgZmllbGRLZXk9XCJqc29uXCJcclxuICAgICAgICAgICAgICAgICAgbGFiZWw9e3QoJ0pTT04nKX1cclxuICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e1xyXG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICB7dCgnVGhlIEpTT04gbWV0cmljIG9yIHBvc3QgYWdncmVnYXRpb24gZGVmaW5pdGlvbi4nKX1cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgICA8VGV4dEFyZWFDb250cm9sIGxhbmd1YWdlPVwianNvblwiIG9mZmVyRWRpdEluTW9kYWw9e2ZhbHNlfSAvPlxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgKX1cclxuICAgICAgICAgIHt0aGlzLnN0YXRlLmRhdGFzb3VyY2VUeXBlID09PSBEQVRBU09VUkNFX1RZUEVTLnBoeXNpY2FsLmtleSAmJiAoXHJcbiAgICAgICAgICAgIDxDb2wgeHM9ezI0fSBtZD17MTJ9PlxyXG4gICAgICAgICAgICAgIHt0aGlzLnN0YXRlLmlzU3FsYSAmJiAoXHJcbiAgICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgICAgZmllbGRLZXk9XCJ0YWJsZVNlbGVjdG9yXCJcclxuICAgICAgICAgICAgICAgICAgbGFiZWw9e3QoJ1BoeXNpY2FsJyl9XHJcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY3NzPXt7IG1hcmdpblRvcDogOCB9fT5cclxuICAgICAgICAgICAgICAgICAgICAgIDxUYWJsZVNlbGVjdG9yXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZT17ZmFsc2V9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFiYXNlPXt7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uZGF0YXNvdXJjZS5kYXRhYmFzZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhYmFzZV9uYW1lOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YXNvdXJjZS5kYXRhYmFzZT8uZGF0YWJhc2VfbmFtZSB8fFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YXNvdXJjZS5kYXRhYmFzZT8ubmFtZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgZGJJZD17ZGF0YXNvdXJjZS5kYXRhYmFzZT8uaWR9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUVycm9yPXt0aGlzLnByb3BzLmFkZERhbmdlclRvYXN0fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWE9e2RhdGFzb3VyY2Uuc2NoZW1hfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzcWxMYWJNb2RlPXtmYWxzZX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgdGFibGVWYWx1ZT17ZGF0YXNvdXJjZS50YWJsZV9uYW1lfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvblNjaGVtYUNoYW5nZT17XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5pc0VkaXRNb2RlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHNjaGVtYSA9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub25EYXRhc291cmNlUHJvcENoYW5nZSgnc2NoZW1hJywgc2NoZW1hKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkRiQ2hhbmdlPXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLmlzRWRpdE1vZGVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gZGF0YWJhc2UgPT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9uRGF0YXNvdXJjZVByb3BDaGFuZ2UoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGF0YWJhc2UnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YWJhc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvblRhYmxlU2VsZWN0Q2hhbmdlPXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLmlzRWRpdE1vZGVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gdGFibGUgPT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9uRGF0YXNvdXJjZVByb3BDaGFuZ2UoJ3RhYmxlX25hbWUnLCB0YWJsZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyF0aGlzLnN0YXRlLmlzRWRpdE1vZGV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KFxyXG4gICAgICAgICAgICAgICAgICAgICdUaGUgcG9pbnRlciB0byBhIHBoeXNpY2FsIHRhYmxlIChvciB2aWV3KS4gS2VlcCBpbiBtaW5kIHRoYXQgdGhlIGNoYXJ0IGlzICcgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgJ2Fzc29jaWF0ZWQgdG8gdGhpcyBTdXBlcnNldCBsb2dpY2FsIHRhYmxlLCBhbmQgdGhpcyBsb2dpY2FsIHRhYmxlIHBvaW50cyAnICtcclxuICAgICAgICAgICAgICAgICAgICAgICd0aGUgcGh5c2ljYWwgdGFibGUgcmVmZXJlbmNlZCBoZXJlLicsXHJcbiAgICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIDwvQ29sPlxyXG4gICAgICAgICAgKX1cclxuICAgICAgICA8L0ZpZWxkc2V0PlxyXG4gICAgICA8L2Rpdj5cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICByZW5kZXJFcnJvcnMoKSB7XHJcbiAgICBpZiAodGhpcy5zdGF0ZS5lcnJvcnMubGVuZ3RoID4gMCkge1xyXG4gICAgICByZXR1cm4gKFxyXG4gICAgICAgIDxBbGVydFxyXG4gICAgICAgICAgY3NzPXt0aGVtZSA9PiAoeyBtYXJnaW5Cb3R0b206IHRoZW1lLmdyaWRVbml0ICogNCB9KX1cclxuICAgICAgICAgIHR5cGU9XCJlcnJvclwiXHJcbiAgICAgICAgICBtZXNzYWdlPXtcclxuICAgICAgICAgICAgPD5cclxuICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5lcnJvcnMubWFwKGVyciA9PiAoXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGtleT17ZXJyfT57ZXJyfTwvZGl2PlxyXG4gICAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgICA8Lz5cclxuICAgICAgICAgIH1cclxuICAgICAgICAvPlxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG5cclxuICByZW5kZXJNZXRyaWNDb2xsZWN0aW9uKCkge1xyXG4gICAgY29uc3QgeyBkYXRhc291cmNlIH0gPSB0aGlzLnN0YXRlO1xyXG4gICAgY29uc3QgeyBtZXRyaWNzIH0gPSBkYXRhc291cmNlO1xyXG4gICAgY29uc3Qgc29ydGVkTWV0cmljcyA9IG1ldHJpY3M/Lmxlbmd0aCA/IHRoaXMuc29ydE1ldHJpY3MobWV0cmljcykgOiBbXTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxDb2xsZWN0aW9uVGFibGVcclxuICAgICAgICB0YWJsZUNvbHVtbnM9e1snbWV0cmljX25hbWUnLCAndmVyYm9zZV9uYW1lJywgJ2V4cHJlc3Npb24nXX1cclxuICAgICAgICBzb3J0Q29sdW1ucz17WydtZXRyaWNfbmFtZScsICd2ZXJib3NlX25hbWUnLCAnZXhwcmVzc2lvbiddfVxyXG4gICAgICAgIGNvbHVtbkxhYmVscz17e1xyXG4gICAgICAgICAgbWV0cmljX25hbWU6IHQoJ01ldHJpYycpLFxyXG4gICAgICAgICAgdmVyYm9zZV9uYW1lOiB0KCdMYWJlbCcpLFxyXG4gICAgICAgICAgZXhwcmVzc2lvbjogdCgnU1FMIGV4cHJlc3Npb24nKSxcclxuICAgICAgICB9fVxyXG4gICAgICAgIGV4cGFuZEZpZWxkc2V0PXtcclxuICAgICAgICAgIDxGb3JtQ29udGFpbmVyPlxyXG4gICAgICAgICAgICA8RmllbGRzZXQgY29tcGFjdD5cclxuICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgIGZpZWxkS2V5PVwiZGVzY3JpcHRpb25cIlxyXG4gICAgICAgICAgICAgICAgbGFiZWw9e3QoJ0Rlc2NyaXB0aW9uJyl9XHJcbiAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgPFRleHRDb250cm9sXHJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwiZGVzY3JpcHRpb25cIlxyXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXt0KCdEZXNjcmlwdGlvbicpfVxyXG4gICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICAgICAgICBmaWVsZEtleT1cImQzZm9ybWF0XCJcclxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdEMyBmb3JtYXQnKX1cclxuICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xyXG4gICAgICAgICAgICAgICAgICA8VGV4dENvbnRyb2wgY29udHJvbElkPVwiZDNmb3JtYXRcIiBwbGFjZWhvbGRlcj1cIiV5LyVtLyVkXCIgLz5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgICAgICAgbGFiZWw9e3QoJ0NlcnRpZmllZCBieScpfVxyXG4gICAgICAgICAgICAgICAgZmllbGRLZXk9XCJjZXJ0aWZpZWRfYnlcIlxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoXHJcbiAgICAgICAgICAgICAgICAgICdQZXJzb24gb3IgZ3JvdXAgdGhhdCBoYXMgY2VydGlmaWVkIHRoaXMgbWV0cmljJyxcclxuICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgPFRleHRDb250cm9sXHJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwiY2VydGlmaWVkX2J5XCJcclxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnQ2VydGlmaWVkIGJ5Jyl9XHJcbiAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdDZXJ0aWZpY2F0aW9uIGRldGFpbHMnKX1cclxuICAgICAgICAgICAgICAgIGZpZWxkS2V5PVwiY2VydGlmaWNhdGlvbl9kZXRhaWxzXCJcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KCdEZXRhaWxzIG9mIHRoZSBjZXJ0aWZpY2F0aW9uJyl9XHJcbiAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgPFRleHRDb250cm9sXHJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwiY2VydGlmaWNhdGlvbl9kZXRhaWxzXCJcclxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnQ2VydGlmaWNhdGlvbiBkZXRhaWxzJyl9XHJcbiAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdXYXJuaW5nJyl9XHJcbiAgICAgICAgICAgICAgICBmaWVsZEtleT1cIndhcm5pbmdfbWFya2Rvd25cIlxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoJ09wdGlvbmFsIHdhcm5pbmcgYWJvdXQgdXNlIG9mIHRoaXMgbWV0cmljJyl9XHJcbiAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgPFRleHRBcmVhQ29udHJvbFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xJZD1cIndhcm5pbmdfbWFya2Rvd25cIlxyXG4gICAgICAgICAgICAgICAgICAgIGxhbmd1YWdlPVwibWFya2Rvd25cIlxyXG4gICAgICAgICAgICAgICAgICAgIG9mZmVyRWRpdEluTW9kYWw9e2ZhbHNlfVxyXG4gICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDwvRmllbGRzZXQ+XHJcbiAgICAgICAgICA8L0Zvcm1Db250YWluZXI+XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbGxlY3Rpb249e3NvcnRlZE1ldHJpY3N9XHJcbiAgICAgICAgYWxsb3dBZGRJdGVtXHJcbiAgICAgICAgb25DaGFuZ2U9e3RoaXMub25EYXRhc291cmNlUHJvcENoYW5nZS5iaW5kKHRoaXMsICdtZXRyaWNzJyl9XHJcbiAgICAgICAgaXRlbUdlbmVyYXRvcj17KCkgPT4gKHtcclxuICAgICAgICAgIG1ldHJpY19uYW1lOiAnPG5ldyBtZXRyaWM+JyxcclxuICAgICAgICAgIHZlcmJvc2VfbmFtZTogJycsXHJcbiAgICAgICAgICBleHByZXNzaW9uOiAnJyxcclxuICAgICAgICB9KX1cclxuICAgICAgICBpdGVtUmVuZGVyZXJzPXt7XHJcbiAgICAgICAgICBtZXRyaWNfbmFtZTogKHYsIG9uQ2hhbmdlLCBfLCByZWNvcmQpID0+IChcclxuICAgICAgICAgICAgPEZsZXhSb3dDb250YWluZXI+XHJcbiAgICAgICAgICAgICAge3JlY29yZC5pc19jZXJ0aWZpZWQgJiYgKFxyXG4gICAgICAgICAgICAgICAgPENlcnRpZmllZEJhZGdlXHJcbiAgICAgICAgICAgICAgICAgIGNlcnRpZmllZEJ5PXtyZWNvcmQuY2VydGlmaWVkX2J5fVxyXG4gICAgICAgICAgICAgICAgICBkZXRhaWxzPXtyZWNvcmQuY2VydGlmaWNhdGlvbl9kZXRhaWxzfVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgIHtyZWNvcmQud2FybmluZ19tYXJrZG93biAmJiAoXHJcbiAgICAgICAgICAgICAgICA8V2FybmluZ0ljb25XaXRoVG9vbHRpcFxyXG4gICAgICAgICAgICAgICAgICB3YXJuaW5nTWFya2Rvd249e3JlY29yZC53YXJuaW5nX21hcmtkb3dufVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgIDxFZGl0YWJsZVRpdGxlIGNhbkVkaXQgdGl0bGU9e3Z9IG9uU2F2ZVRpdGxlPXtvbkNoYW5nZX0gLz5cclxuICAgICAgICAgICAgPC9GbGV4Um93Q29udGFpbmVyPlxyXG4gICAgICAgICAgKSxcclxuICAgICAgICAgIHZlcmJvc2VfbmFtZTogKHYsIG9uQ2hhbmdlKSA9PiAoXHJcbiAgICAgICAgICAgIDxUZXh0Q29udHJvbCBjYW5FZGl0IHZhbHVlPXt2fSBvbkNoYW5nZT17b25DaGFuZ2V9IC8+XHJcbiAgICAgICAgICApLFxyXG4gICAgICAgICAgZXhwcmVzc2lvbjogKHYsIG9uQ2hhbmdlKSA9PiAoXHJcbiAgICAgICAgICAgIDxUZXh0QXJlYUNvbnRyb2xcclxuICAgICAgICAgICAgICBjYW5FZGl0XHJcbiAgICAgICAgICAgICAgaW5pdGlhbFZhbHVlPXt2fVxyXG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cclxuICAgICAgICAgICAgICBleHRyYUNsYXNzZXM9e1snZGF0YXNvdXJjZS1zcWwtZXhwcmVzc2lvbiddfVxyXG4gICAgICAgICAgICAgIGxhbmd1YWdlPVwic3FsXCJcclxuICAgICAgICAgICAgICBvZmZlckVkaXRJbk1vZGFsPXtmYWxzZX1cclxuICAgICAgICAgICAgICBtaW5MaW5lcz17NX1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICksXHJcbiAgICAgICAgICBkZXNjcmlwdGlvbjogKHYsIG9uQ2hhbmdlLCBsYWJlbCkgPT4gKFxyXG4gICAgICAgICAgICA8U3RhY2tlZEZpZWxkXHJcbiAgICAgICAgICAgICAgbGFiZWw9e2xhYmVsfVxyXG4gICAgICAgICAgICAgIGZvcm1FbGVtZW50PXs8VGV4dENvbnRyb2wgdmFsdWU9e3Z9IG9uQ2hhbmdlPXtvbkNoYW5nZX0gLz59XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICApLFxyXG4gICAgICAgICAgZDNmb3JtYXQ6ICh2LCBvbkNoYW5nZSwgbGFiZWwpID0+IChcclxuICAgICAgICAgICAgPFN0YWNrZWRGaWVsZFxyXG4gICAgICAgICAgICAgIGxhYmVsPXtsYWJlbH1cclxuICAgICAgICAgICAgICBmb3JtRWxlbWVudD17PFRleHRDb250cm9sIHZhbHVlPXt2fSBvbkNoYW5nZT17b25DaGFuZ2V9IC8+fVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgKSxcclxuICAgICAgICB9fVxyXG4gICAgICAgIGFsbG93RGVsZXRlc1xyXG4gICAgICAgIHN0aWNreUhlYWRlclxyXG4gICAgICAvPlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHJlbmRlcigpIHtcclxuICAgIGNvbnN0IHsgZGF0YXNvdXJjZSwgYWN0aXZlVGFiS2V5IH0gPSB0aGlzLnN0YXRlO1xyXG4gICAgY29uc3QgeyBtZXRyaWNzIH0gPSBkYXRhc291cmNlO1xyXG4gICAgY29uc3Qgc29ydGVkTWV0cmljcyA9IG1ldHJpY3M/Lmxlbmd0aCA/IHRoaXMuc29ydE1ldHJpY3MobWV0cmljcykgOiBbXTtcclxuICAgIGNvbnN0IHsgdGhlbWUgfSA9IHRoaXMucHJvcHM7XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgPERhdGFzb3VyY2VDb250YWluZXI+XHJcbiAgICAgICAge3RoaXMucmVuZGVyRXJyb3JzKCl9XHJcbiAgICAgICAgPEFsZXJ0XHJcbiAgICAgICAgICBjc3M9e3RoZW1lID0+ICh7IG1hcmdpbkJvdHRvbTogdGhlbWUuZ3JpZFVuaXQgKiA0IH0pfVxyXG4gICAgICAgICAgdHlwZT1cIndhcm5pbmdcIlxyXG4gICAgICAgICAgbWVzc2FnZT17XHJcbiAgICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgICAgeycgJ31cclxuICAgICAgICAgICAgICA8c3Ryb25nPnt0KCdCZSBjYXJlZnVsLicpfSA8L3N0cm9uZz5cclxuICAgICAgICAgICAgICB7dChcclxuICAgICAgICAgICAgICAgICdDaGFuZ2luZyB0aGVzZSBzZXR0aW5ncyB3aWxsIGFmZmVjdCBhbGwgY2hhcnRzIHVzaW5nIHRoaXMgZGF0YXNldCwgaW5jbHVkaW5nIGNoYXJ0cyBvd25lZCBieSBvdGhlciBwZW9wbGUuJyxcclxuICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICA8Lz5cclxuICAgICAgICAgIH1cclxuICAgICAgICAvPlxyXG4gICAgICAgIDxTdHlsZWRUYWJsZVRhYnNcclxuICAgICAgICAgIGZ1bGxXaWR0aD17ZmFsc2V9XHJcbiAgICAgICAgICBpZD1cInRhYmxlLXRhYnNcIlxyXG4gICAgICAgICAgZGF0YS10ZXN0PVwiZWRpdC1kYXRhc2V0LXRhYnNcIlxyXG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlVGFiU2VsZWN0fVxyXG4gICAgICAgICAgZGVmYXVsdEFjdGl2ZUtleT17YWN0aXZlVGFiS2V5fVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxUYWJzLlRhYlBhbmUga2V5PXswfSB0YWI9e3QoJ1NvdXJjZScpfT5cclxuICAgICAgICAgICAge3RoaXMucmVuZGVyU291cmNlRmllbGRzZXQodGhlbWUpfVxyXG4gICAgICAgICAgPC9UYWJzLlRhYlBhbmU+XHJcbiAgICAgICAgICA8VGFicy5UYWJQYW5lXHJcbiAgICAgICAgICAgIHRhYj17XHJcbiAgICAgICAgICAgICAgPENvbGxlY3Rpb25UYWJUaXRsZVxyXG4gICAgICAgICAgICAgICAgY29sbGVjdGlvbj17c29ydGVkTWV0cmljc31cclxuICAgICAgICAgICAgICAgIHRpdGxlPXt0KCdNZXRyaWNzJyl9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBrZXk9ezF9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIHt0aGlzLnJlbmRlck1ldHJpY0NvbGxlY3Rpb24oKX1cclxuICAgICAgICAgIDwvVGFicy5UYWJQYW5lPlxyXG4gICAgICAgICAgPFRhYnMuVGFiUGFuZVxyXG4gICAgICAgICAgICB0YWI9e1xyXG4gICAgICAgICAgICAgIDxDb2xsZWN0aW9uVGFiVGl0bGVcclxuICAgICAgICAgICAgICAgIGNvbGxlY3Rpb249e3RoaXMuc3RhdGUuZGF0YWJhc2VDb2x1bW5zfVxyXG4gICAgICAgICAgICAgICAgdGl0bGU9e3QoJ0NvbHVtbnMnKX1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGtleT17Mn1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPFN0eWxlZENvbHVtbnNUYWJXcmFwcGVyPlxyXG4gICAgICAgICAgICAgIDxDb2x1bW5CdXR0b25XcmFwcGVyPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibS10LTEwIG0tci0xMFwiPlxyXG4gICAgICAgICAgICAgICAgICA8QnV0dG9uXHJcbiAgICAgICAgICAgICAgICAgICAgYnV0dG9uU2l6ZT1cInNtYWxsXCJcclxuICAgICAgICAgICAgICAgICAgICBidXR0b25TdHlsZT1cInRlcnRpYXJ5XCJcclxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLnN5bmNNZXRhZGF0YX1cclxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJzeW5jLWZyb20tc291cmNlXCJcclxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17dGhpcy5zdGF0ZS5pc0VkaXRNb2RlfVxyXG4gICAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtZGF0YWJhc2VcIiAvPnsnICd9XHJcbiAgICAgICAgICAgICAgICAgICAge3QoJ1N5bmMgY29sdW1ucyBmcm9tIHNvdXJjZScpfVxyXG4gICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgICA8L0NvbHVtbkJ1dHRvbldyYXBwZXI+XHJcbiAgICAgICAgICAgICAgPENvbHVtbkNvbGxlY3Rpb25UYWJsZVxyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY29sdW1ucy10YWJsZVwiXHJcbiAgICAgICAgICAgICAgICBjb2x1bW5zPXt0aGlzLnN0YXRlLmRhdGFiYXNlQ29sdW1uc31cclxuICAgICAgICAgICAgICAgIGRhdGFzb3VyY2U9e2RhdGFzb3VyY2V9XHJcbiAgICAgICAgICAgICAgICBvbkNvbHVtbnNDaGFuZ2U9e2RhdGFiYXNlQ29sdW1ucyA9PlxyXG4gICAgICAgICAgICAgICAgICB0aGlzLnNldENvbHVtbnMoeyBkYXRhYmFzZUNvbHVtbnMgfSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIG9uRGF0YXNvdXJjZUNoYW5nZT17dGhpcy5vbkRhdGFzb3VyY2VDaGFuZ2V9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5tZXRhZGF0YUxvYWRpbmcgJiYgPExvYWRpbmcgLz59XHJcbiAgICAgICAgICAgIDwvU3R5bGVkQ29sdW1uc1RhYldyYXBwZXI+XHJcbiAgICAgICAgICA8L1RhYnMuVGFiUGFuZT5cclxuICAgICAgICAgIDxUYWJzLlRhYlBhbmVcclxuICAgICAgICAgICAgdGFiPXtcclxuICAgICAgICAgICAgICA8Q29sbGVjdGlvblRhYlRpdGxlXHJcbiAgICAgICAgICAgICAgICBjb2xsZWN0aW9uPXt0aGlzLnN0YXRlLmNhbGN1bGF0ZWRDb2x1bW5zfVxyXG4gICAgICAgICAgICAgICAgdGl0bGU9e3QoJ0NhbGN1bGF0ZWQgY29sdW1ucycpfVxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAga2V5PXszfVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8U3R5bGVkQ29sdW1uc1RhYldyYXBwZXI+XHJcbiAgICAgICAgICAgICAgPENvbHVtbkNvbGxlY3Rpb25UYWJsZVxyXG4gICAgICAgICAgICAgICAgY29sdW1ucz17dGhpcy5zdGF0ZS5jYWxjdWxhdGVkQ29sdW1uc31cclxuICAgICAgICAgICAgICAgIG9uQ29sdW1uc0NoYW5nZT17Y2FsY3VsYXRlZENvbHVtbnMgPT5cclxuICAgICAgICAgICAgICAgICAgdGhpcy5zZXRDb2x1bW5zKHsgY2FsY3VsYXRlZENvbHVtbnMgfSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIG9uRGF0YXNvdXJjZUNoYW5nZT17dGhpcy5vbkRhdGFzb3VyY2VDaGFuZ2V9XHJcbiAgICAgICAgICAgICAgICBkYXRhc291cmNlPXtkYXRhc291cmNlfVxyXG4gICAgICAgICAgICAgICAgZWRpdGFibGVDb2x1bW5OYW1lXHJcbiAgICAgICAgICAgICAgICBzaG93RXhwcmVzc2lvblxyXG4gICAgICAgICAgICAgICAgYWxsb3dBZGRJdGVtXHJcbiAgICAgICAgICAgICAgICBhbGxvd0VkaXREYXRhVHlwZVxyXG4gICAgICAgICAgICAgICAgaXRlbUdlbmVyYXRvcj17KCkgPT4gKHtcclxuICAgICAgICAgICAgICAgICAgY29sdW1uX25hbWU6ICc8bmV3IGNvbHVtbj4nLFxyXG4gICAgICAgICAgICAgICAgICBmaWx0ZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICBncm91cGJ5OiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAnPGVudGVyIFNRTCBleHByZXNzaW9uIGhlcmU+JyxcclxuICAgICAgICAgICAgICAgICAgX19leHBhbmRlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIH0pfVxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDwvU3R5bGVkQ29sdW1uc1RhYldyYXBwZXI+XHJcbiAgICAgICAgICA8L1RhYnMuVGFiUGFuZT5cclxuICAgICAgICAgIDxUYWJzLlRhYlBhbmUga2V5PXs0fSB0YWI9e3QoJ1NldHRpbmdzJyl9PlxyXG4gICAgICAgICAgICA8Um93IGd1dHRlcj17MTZ9PlxyXG4gICAgICAgICAgICAgIDxDb2wgeHM9ezI0fSBtZD17MTJ9PlxyXG4gICAgICAgICAgICAgICAgPEZvcm1Db250YWluZXI+e3RoaXMucmVuZGVyU2V0dGluZ3NGaWVsZHNldCgpfTwvRm9ybUNvbnRhaW5lcj5cclxuICAgICAgICAgICAgICA8L0NvbD5cclxuICAgICAgICAgICAgICA8Q29sIHhzPXsyNH0gbWQ9ezEyfT5cclxuICAgICAgICAgICAgICAgIDxGb3JtQ29udGFpbmVyPnt0aGlzLnJlbmRlckFkdmFuY2VkRmllbGRzZXQoKX08L0Zvcm1Db250YWluZXI+XHJcbiAgICAgICAgICAgICAgPC9Db2w+XHJcbiAgICAgICAgICAgIDwvUm93PlxyXG4gICAgICAgICAgPC9UYWJzLlRhYlBhbmU+XHJcbiAgICAgICAgPC9TdHlsZWRUYWJsZVRhYnM+XHJcbiAgICAgIDwvRGF0YXNvdXJjZUNvbnRhaW5lcj5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5EYXRhc291cmNlRWRpdG9yLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcclxuRGF0YXNvdXJjZUVkaXRvci5wcm9wVHlwZXMgPSBwcm9wVHlwZXM7XHJcblxyXG5jb25zdCBEYXRhU291cmNlQ29tcG9uZW50ID0gd2l0aFRoZW1lKERhdGFzb3VyY2VFZGl0b3IpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgd2l0aFRvYXN0cyhEYXRhU291cmNlQ29tcG9uZW50KTtcclxuIl19 */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\nclass DatasourceEditor extends react__WEBPACK_IMPORTED_MODULE_1__.PureComponent {\n  constructor(props) {var _props$datasource$met;\n    super(props);\n    this.state = {\n      datasource: {\n        ...props.datasource,\n        owners: props.datasource.owners.map((owner) => ({\n          value: owner.value || owner.id,\n          label: owner.label || `${owner.first_name} ${owner.last_name}` })),\n\n        metrics: (_props$datasource$met = props.datasource.metrics) == null ? void 0 : _props$datasource$met.map((metric) => {\n          const {\n            certified_by: certifiedByMetric,\n            certification_details: certificationDetails } =\n          metric;\n          const {\n            certification: { details, certified_by: certifiedBy } = {},\n            warning_markdown: warningMarkdown } =\n          JSON.parse(metric.extra || '{}') || {};\n          return {\n            ...metric,\n            certification_details: certificationDetails || details,\n            warning_markdown: warningMarkdown || '',\n            certified_by: certifiedBy || certifiedByMetric };\n\n        }) },\n\n      errors: [],\n      isDruid:\n      props.datasource.type === 'druid' ||\n      props.datasource.datasource_type === 'druid',\n      isSqla:\n      props.datasource.datasource_type === 'table' ||\n      props.datasource.type === 'table',\n      isEditMode: false,\n      databaseColumns: props.datasource.columns.filter((col) => !col.expression),\n      calculatedColumns: props.datasource.columns.filter(\n      (col) => !!col.expression),\n\n      metadataLoading: false,\n      activeTabKey: 0,\n      datasourceType: props.datasource.sql ?\n      DATASOURCE_TYPES.virtual.key :\n      DATASOURCE_TYPES.physical.key };\n\n\n    this.onChange = this.onChange.bind(this);\n    this.onChangeEditMode = this.onChangeEditMode.bind(this);\n    this.onDatasourcePropChange = this.onDatasourcePropChange.bind(this);\n    this.onDatasourceChange = this.onDatasourceChange.bind(this);\n    this.tableChangeAndSyncMetadata =\n    this.tableChangeAndSyncMetadata.bind(this);\n    this.syncMetadata = this.syncMetadata.bind(this);\n    this.setColumns = this.setColumns.bind(this);\n    this.validateAndChange = this.validateAndChange.bind(this);\n    this.handleTabSelect = this.handleTabSelect.bind(this);\n    this.allowEditSource = !(0,src_featureFlags__WEBPACK_IMPORTED_MODULE_25__.isFeatureEnabled)(\n    src_featureFlags__WEBPACK_IMPORTED_MODULE_25__.FeatureFlag.DISABLE_DATASET_SOURCE_EDIT);\n\n  }\n\n  onChange() {\n    // Emptying SQL if \"Physical\" radio button is selected\n    // Currently the logic to know whether the source is\n    // physical or virtual is based on whether SQL is empty or not.\n    const { datasourceType, datasource } = this.state;\n    const sql =\n    datasourceType === DATASOURCE_TYPES.physical.key ? '' : datasource.sql;\n    const newDatasource = {\n      ...this.state.datasource,\n      sql,\n      columns: [...this.state.databaseColumns, ...this.state.calculatedColumns] };\n\n    this.props.onChange(newDatasource, this.state.errors);\n  }\n\n  onChangeEditMode() {\n    this.setState((prevState) => ({ isEditMode: !prevState.isEditMode }));\n  }\n\n  onDatasourceChange(datasource, callback = this.validateAndChange) {\n    this.setState({ datasource }, callback);\n  }\n\n  onDatasourcePropChange(attr, value) {\n    if (value === undefined) return; // if value is undefined do not update state\n    const datasource = { ...this.state.datasource, [attr]: value };\n    this.setState(\n    (prevState) => ({\n      datasource: { ...prevState.datasource, [attr]: value } }),\n\n    attr === 'table_name' ?\n    this.onDatasourceChange(datasource, this.tableChangeAndSyncMetadata) :\n    this.onDatasourceChange(datasource, this.validateAndChange));\n\n  }\n\n  onDatasourceTypeChange(datasourceType) {\n    this.setState({ datasourceType });\n  }\n\n  setColumns(obj) {\n    // update calculatedColumns or databaseColumns\n    this.setState(obj, this.validateAndChange);\n  }\n\n  validateAndChange() {\n    this.validate(this.onChange);\n  }\n\n  tableChangeAndSyncMetadata() {\n    this.validate(() => {\n      this.syncMetadata();\n      this.onChange();\n    });\n  }\n\n  updateColumns(cols) {\n    const { databaseColumns } = this.state;\n    const databaseColumnNames = cols.map((col) => col.name);\n    const currentCols = databaseColumns.reduce(\n    (agg, col) => ({\n      ...agg,\n      [col.column_name]: col }),\n\n    {});\n\n    const finalColumns = [];\n    const results = {\n      added: [],\n      modified: [],\n      removed: databaseColumns.\n      map((col) => col.column_name).\n      filter((col) => !databaseColumnNames.includes(col)) };\n\n    cols.forEach((col) => {\n      const currentCol = currentCols[col.name];\n      if (!currentCol) {\n        // new column\n        finalColumns.push({\n          id: shortid__WEBPACK_IMPORTED_MODULE_7___default().generate(),\n          column_name: col.name,\n          type: col.type,\n          groupby: true,\n          filterable: true,\n          is_dttm: col.is_dttm });\n\n        results.added.push(col.name);\n      } else if (\n      currentCol.type !== col.type ||\n      !currentCol.is_dttm && col.is_dttm)\n      {\n        // modified column\n        finalColumns.push({\n          ...currentCol,\n          type: col.type,\n          is_dttm: currentCol.is_dttm || col.is_dttm });\n\n        results.modified.push(col.name);\n      } else {\n        // unchanged\n        finalColumns.push(currentCol);\n      }\n    });\n    if (\n    results.added.length ||\n    results.modified.length ||\n    results.removed.length)\n    {\n      this.setColumns({ databaseColumns: finalColumns });\n    }\n    return results;\n  }\n\n  syncMetadata() {\n    const { datasource } = this.state;\n    const params = {\n      datasource_type: datasource.type || datasource.datasource_type,\n      database_name:\n      datasource.database.database_name || datasource.database.name,\n      schema_name: datasource.schema,\n      table_name: datasource.table_name };\n\n    Object.entries(params).forEach(([key, value]) => {\n      // rison can't encode the undefined value\n      if (value === undefined) {\n        params[key] = null;\n      }\n    });\n    const endpoint = `/datasource/external_metadata_by_name/?q=${rison__WEBPACK_IMPORTED_MODULE_0___default().encode(\n    params)\n    }`;\n    this.setState({ metadataLoading: true });\n\n    _superset_ui_core__WEBPACK_IMPORTED_MODULE_33__[\"default\"].get({ endpoint }).\n    then(({ json }) => {\n      const results = this.updateColumns(json);\n      if (results.modified.length) {\n        this.props.addSuccessToast(\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Modified columns: %s', results.modified.join(', ')));\n\n      }\n      if (results.removed.length) {\n        this.props.addSuccessToast(\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Removed columns: %s', results.removed.join(', ')));\n\n      }\n      if (results.added.length) {\n        this.props.addSuccessToast(\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('New columns added: %s', results.added.join(', ')));\n\n      }\n      this.props.addSuccessToast((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Metadata has been synced'));\n      this.setState({ metadataLoading: false });\n    }).\n    catch((response) =>\n    (0,src_utils_getClientErrorObject__WEBPACK_IMPORTED_MODULE_19__.getClientErrorObject)(response).then(({ error, statusText }) => {\n      this.props.addDangerToast(\n      error || statusText || (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('An error has occurred'));\n\n      this.setState({ metadataLoading: false });\n    }));\n\n  }\n\n  findDuplicates(arr, accessor) {\n    const seen = {};\n    const dups = [];\n    arr.forEach((obj) => {\n      const item = accessor(obj);\n      if (item in seen) {\n        dups.push(item);\n      } else {\n        seen[item] = null;\n      }\n    });\n    return dups;\n  }\n\n  validate(callback) {\n    let errors = [];\n    let dups;\n    const { datasource } = this.state;\n\n    // Looking for duplicate column_name\n    dups = this.findDuplicates(datasource.columns, (obj) => obj.column_name);\n    errors = errors.concat(\n    dups.map((name) => (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Column name [%s] is duplicated', name)));\n\n\n    // Looking for duplicate metric_name\n    dups = this.findDuplicates(datasource.metrics, (obj) => obj.metric_name);\n    errors = errors.concat(\n    dups.map((name) => (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Metric name [%s] is duplicated', name)));\n\n\n    // Making sure calculatedColumns have an expression defined\n    const noFilterCalcCols = this.state.calculatedColumns.filter(\n    (col) => !col.expression && !col.json);\n\n    errors = errors.concat(\n    noFilterCalcCols.map((col) =>\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Calculated column [%s] requires an expression', col.column_name)));\n\n\n\n    this.setState({ errors }, callback);\n  }\n\n  handleTabSelect(activeTabKey) {\n    this.setState({ activeTabKey });\n  }\n\n  sortMetrics(metrics) {\n    return metrics.sort(({ id: a }, { id: b }) => b - a);\n  }\n\n  renderSettingsFieldset() {\n    const { datasource } = this.state;\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Fieldset__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Basic'),\n        item: datasource,\n        onChange: this.onDatasourceChange },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"description\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Description'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], { language: \"markdown\", offerEditInModal: false }) }),\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"default_endpoint\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Default URL'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)(\n        'Default URL to redirect to when accessing from the dataset list page'),\n\n        control: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], { controlId: \"default_endpoint\" }) }),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        inline: true,\n        fieldKey: \"filter_select_enabled\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Autocomplete filters'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Whether to populate autocomplete filters options'),\n        control: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], null) }),\n\n      this.state.isSqla &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"fetch_values_predicate\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Autocomplete query predicate'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)(\n        'When using \"Autocomplete filters\", this can be used to improve performance ' +\n        'of the query fetching the values. Use this option to apply a ' +\n        'predicate (WHERE clause) to the query selecting the distinct ' +\n        'values from the table. Typically the intent would be to limit the scan ' +\n        'by applying a relative time filter on a partitioned or indexed time-related field.'),\n\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n          language: \"sql\",\n          controlId: \"fetch_values_predicate\",\n          minLines: 5 }) }),\n\n\n\n\n      this.state.isSqla &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"extra\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Extra'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)(\n        'Extra data to specify table metadata. Currently supports ' +\n        'metadata of the format: `{ \"certification\": { \"certified_by\": ' +\n        '\"Data Platform Team\", \"details\": \"This table is the source of truth.\" ' +\n        '}, \"warning_markdown\": \"This is a warning.\" }`.'),\n\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n          controlId: \"extra\",\n          language: \"json\",\n          offerEditInModal: false }) }),\n\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(OwnersSelector, {\n        datasource: datasource,\n        onChange: (newOwners) => {\n          this.onDatasourceChange({ ...datasource, owners: newOwners });\n        } })));\n\n\n\n  }\n\n  renderAdvancedFieldset() {\n    const { datasource } = this.state;\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Fieldset__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Advanced'),\n        item: datasource,\n        onChange: this.onDatasourceChange },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"cache_timeout\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Cache timeout'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)(\n        'The duration of time in seconds before the cache is invalidated'),\n\n        control: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], { controlId: \"cache_timeout\" }) }),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"offset\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Hours offset'),\n        control: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], { controlId: \"offset\" }),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)(\n        'The number of hours, negative or positive, to shift the time column. This can be used to move UTC time to local time.') }),\n\n\n      this.state.isSqla &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"template_params\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Template parameters'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)(\n        'A set of parameters that become available in the query using Jinja templating syntax'),\n\n        control: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], { controlId: \"template_params\" }) })));\n\n\n\n\n  }\n\n  renderSpatialTab() {\n    const { datasource } = this.state;\n    const { spatials, all_cols: allCols } = datasource;\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_11__[\"default\"].TabPane, {\n        tab: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(CollectionTabTitle, { collection: spatials, title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Spatial') }),\n        key: 4 },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_CollectionTable__WEBPACK_IMPORTED_MODULE_27__[\"default\"], {\n        tableColumns: ['name', 'config'],\n        onChange: this.onDatasourcePropChange.bind(this, 'spatials'),\n        itemGenerator: () => ({\n          name: '<new spatial>',\n          type: '<no type>',\n          config: null }),\n\n        collection: spatials,\n        allowDeletes: true,\n        itemRenderers: {\n          name: (d, onChange) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_EditableTitle__WEBPACK_IMPORTED_MODULE_18__[\"default\"], { canEdit: true, title: d, onSaveTitle: onChange }),\n\n          config: (v, onChange) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_SpatialControl__WEBPACK_IMPORTED_MODULE_23__[\"default\"], { value: v, onChange: onChange, choices: allCols }) } })));\n\n\n\n\n\n  }\n\n  renderSourceFieldset(theme) {var _datasource$database, _datasource$database2, _datasource$database3;\n    const { datasource } = this.state;\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"div\", null,\n      this.allowEditSource &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(EditLockContainer, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"span\", { role: \"button\", tabIndex: 0, onClick: this.onChangeEditMode },\n      this.state.isEditMode ?\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_26__[\"default\"].LockUnlocked, { iconColor: theme.colors.grayscale.base }) :\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_26__[\"default\"].LockLocked, { iconColor: theme.colors.grayscale.base })),\n\n\n      !this.state.isEditMode &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"div\", null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Click the lock to make changes.')),\n\n      this.state.isEditMode &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"div\", null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Click the lock to prevent further changes.'))),\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"div\", { className: \"m-l-10 m-t-20 m-b-10\" },\n      DATASOURCE_TYPES_ARR.map((type) =>\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Radio__WEBPACK_IMPORTED_MODULE_3__.Radio, {\n        key: type.key,\n        value: type.key,\n        inline: true,\n        onChange: this.onDatasourceTypeChange.bind(this, type.key),\n        checked: this.state.datasourceType === type.key,\n        disabled: !this.state.isEditMode },\n\n      type.label))),\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"hr\", null),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Fieldset__WEBPACK_IMPORTED_MODULE_28__[\"default\"], { item: datasource, onChange: this.onDatasourceChange, compact: true },\n      this.state.datasourceType === DATASOURCE_TYPES.virtual.key &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"div\", null,\n      this.state.isSqla &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_8__.Col, { xs: 24, md: 12 },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"databaseSelector\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('virtual'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"div\", { css: _ref2 },\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_DatabaseSelector__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n          db: datasource == null ? void 0 : datasource.database,\n          schema: datasource.schema,\n          onSchemaChange: (schema) =>\n          this.state.isEditMode &&\n          this.onDatasourcePropChange('schema', schema),\n\n          onDbChange: (database) =>\n          this.state.isEditMode &&\n          this.onDatasourcePropChange('database', database),\n\n          formMode: false,\n          handleError: this.props.addDangerToast,\n          readOnly: !this.state.isEditMode })) }),\n\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"div\", { css: /*#__PURE__*/(0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.css)({ width: 'calc(100% - 34px)', marginTop: -16 },  false ? 0 : \";label:DatasourceEditor;\",  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"table_name\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Dataset name'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n          controlId: \"table_name\",\n          onChange: (table) => {\n            this.onDatasourcePropChange('table_name', table);\n          },\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Dataset name'),\n          disabled: !this.state.isEditMode }) }))),\n\n\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"sql\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('SQL'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)(\n        'When specifying SQL, the datasource acts as a view. ' +\n        'Superset will use this statement as a subquery while grouping and filtering ' +\n        'on the generated parent queries.'),\n\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n          language: \"sql\",\n          offerEditInModal: false,\n          minLines: 20,\n          maxLines: 20,\n          readOnly: !this.state.isEditMode }) })),\n\n\n\n\n\n      this.state.isDruid &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"json\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('JSON'),\n        description:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"div\", null,\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('The JSON metric or post aggregation definition.')),\n\n\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], { language: \"json\", offerEditInModal: false }) })),\n\n\n\n\n\n      this.state.datasourceType === DATASOURCE_TYPES.physical.key &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_8__.Col, { xs: 24, md: 12 },\n      this.state.isSqla &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        fieldKey: \"tableSelector\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Physical'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"div\", { css: _ref3 },\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_TableSelector__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n          clearable: false,\n          database: {\n            ...datasource.database,\n            database_name:\n            ((_datasource$database = datasource.database) == null ? void 0 : _datasource$database.database_name) || ((_datasource$database2 =\n            datasource.database) == null ? void 0 : _datasource$database2.name) },\n\n          dbId: (_datasource$database3 = datasource.database) == null ? void 0 : _datasource$database3.id,\n          handleError: this.props.addDangerToast,\n          schema: datasource.schema,\n          sqlLabMode: false,\n          tableValue: datasource.table_name,\n          onSchemaChange:\n          this.state.isEditMode ?\n          (schema) =>\n          this.onDatasourcePropChange('schema', schema) :\n          undefined,\n\n          onDbChange:\n          this.state.isEditMode ?\n          (database) =>\n          this.onDatasourcePropChange(\n          'database',\n          database) :\n\n          undefined,\n\n          onTableSelectChange:\n          this.state.isEditMode ?\n          (table) =>\n          this.onDatasourcePropChange('table_name', table) :\n          undefined,\n\n          readOnly: !this.state.isEditMode })),\n\n\n\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)(\n        'The pointer to a physical table (or view). Keep in mind that the chart is ' +\n        'associated to this Superset logical table, and this logical table points ' +\n        'the physical table referenced here.') })))));\n\n\n\n\n\n\n\n\n  }\n\n  renderErrors() {\n    if (this.state.errors.length > 0) {\n      return (\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Alert__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n          css: (theme) => ({ marginBottom: theme.gridUnit * 4 }),\n          type: \"error\",\n          message:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null,\n          this.state.errors.map((err) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"div\", { key: err }, err))) }));\n\n\n\n\n\n    }\n    return null;\n  }\n\n  renderMetricCollection() {\n    const { datasource } = this.state;\n    const { metrics } = datasource;\n    const sortedMetrics = metrics != null && metrics.length ? this.sortMetrics(metrics) : [];\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_CollectionTable__WEBPACK_IMPORTED_MODULE_27__[\"default\"], {\n        tableColumns: ['metric_name', 'verbose_name', 'expression'],\n        sortColumns: ['metric_name', 'verbose_name', 'expression'],\n        columnLabels: {\n          metric_name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Metric'),\n          verbose_name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Label'),\n          expression: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('SQL expression') },\n\n        expandFieldset:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(FormContainer, null,\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Fieldset__WEBPACK_IMPORTED_MODULE_28__[\"default\"], { compact: true },\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n          fieldKey: \"description\",\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Description'),\n          control:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n            controlId: \"description\",\n            placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Description') }) }),\n\n\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n          fieldKey: \"d3format\",\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('D3 format'),\n          control:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], { controlId: \"d3format\", placeholder: \"%y/%m/%d\" }) }),\n\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Certified by'),\n          fieldKey: \"certified_by\",\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)(\n          'Person or group that has certified this metric'),\n\n          control:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n            controlId: \"certified_by\",\n            placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Certified by') }) }),\n\n\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Certification details'),\n          fieldKey: \"certification_details\",\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Details of the certification'),\n          control:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n            controlId: \"certification_details\",\n            placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Certification details') }) }),\n\n\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Warning'),\n          fieldKey: \"warning_markdown\",\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Optional warning about use of this metric'),\n          control:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n            controlId: \"warning_markdown\",\n            language: \"markdown\",\n            offerEditInModal: false }) }))),\n\n\n\n\n\n\n        collection: sortedMetrics,\n        allowAddItem: true,\n        onChange: this.onDatasourcePropChange.bind(this, 'metrics'),\n        itemGenerator: () => ({\n          metric_name: '<new metric>',\n          verbose_name: '',\n          expression: '' }),\n\n        itemRenderers: {\n          metric_name: (v, onChange, _, record) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(FlexRowContainer, null,\n          record.is_certified &&\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n            certifiedBy: record.certified_by,\n            details: record.certification_details }),\n\n\n          record.warning_markdown &&\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_WarningIconWithTooltip__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n            warningMarkdown: record.warning_markdown }),\n\n\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_EditableTitle__WEBPACK_IMPORTED_MODULE_18__[\"default\"], { canEdit: true, title: v, onSaveTitle: onChange })),\n\n\n          verbose_name: (v, onChange) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], { canEdit: true, value: v, onChange: onChange }),\n\n          expression: (v, onChange) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n            canEdit: true,\n            initialValue: v,\n            onChange: onChange,\n            extraClasses: ['datasource-sql-expression'],\n            language: \"sql\",\n            offerEditInModal: false,\n            minLines: 5 }),\n\n\n          description: (v, onChange, label) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(StackedField, {\n            label: label,\n            formElement: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], { value: v, onChange: onChange }) }),\n\n\n          d3format: (v, onChange, label) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(StackedField, {\n            label: label,\n            formElement: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], { value: v, onChange: onChange }) }) },\n\n\n\n        allowDeletes: true,\n        stickyHeader: true }));\n\n\n  }\n\n  render() {\n    const { datasource, activeTabKey } = this.state;\n    const { metrics } = datasource;\n    const sortedMetrics = metrics != null && metrics.length ? this.sortMetrics(metrics) : [];\n    const { theme } = this.props;\n\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(DatasourceContainer, null,\n      this.renderErrors(),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Alert__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n        css: (theme) => ({ marginBottom: theme.gridUnit * 4 }),\n        type: \"warning\",\n        message:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null,\n        ' ',\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"strong\", null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Be careful.'), \" \"),\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)(\n        'Changing these settings will affect all charts using this dataset, including charts owned by other people.')) }),\n\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(StyledTableTabs, {\n        fullWidth: false,\n        id: \"table-tabs\",\n        \"data-test\": \"edit-dataset-tabs\",\n        onChange: this.handleTabSelect,\n        defaultActiveKey: activeTabKey },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_11__[\"default\"].TabPane, { key: 0, tab: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Source') },\n      this.renderSourceFieldset(theme)),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_11__[\"default\"].TabPane, {\n        tab:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(CollectionTabTitle, {\n          collection: sortedMetrics,\n          title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Metrics') }),\n\n\n        key: 1 },\n\n      this.renderMetricCollection()),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_11__[\"default\"].TabPane, {\n        tab:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(CollectionTabTitle, {\n          collection: this.state.databaseColumns,\n          title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Columns') }),\n\n\n        key: 2 },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(StyledColumnsTabWrapper, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(ColumnButtonWrapper, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"span\", { className: \"m-t-10 m-r-10\" },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Button__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n        buttonSize: \"small\",\n        buttonStyle: \"tertiary\",\n        onClick: this.syncMetadata,\n        className: \"sync-from-source\",\n        disabled: this.state.isEditMode },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(\"i\", { className: \"fa fa-database\" }), ' ',\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Sync columns from source')))),\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(ColumnCollectionTable, {\n        className: \"columns-table\",\n        columns: this.state.databaseColumns,\n        datasource: datasource,\n        onColumnsChange: (databaseColumns) =>\n        this.setColumns({ databaseColumns }),\n\n        onDatasourceChange: this.onDatasourceChange }),\n\n      this.state.metadataLoading && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Loading__WEBPACK_IMPORTED_MODULE_16__[\"default\"], null))),\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_11__[\"default\"].TabPane, {\n        tab:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(CollectionTabTitle, {\n          collection: this.state.calculatedColumns,\n          title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Calculated columns') }),\n\n\n        key: 3 },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(StyledColumnsTabWrapper, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(ColumnCollectionTable, {\n        columns: this.state.calculatedColumns,\n        onColumnsChange: (calculatedColumns) =>\n        this.setColumns({ calculatedColumns }),\n\n        onDatasourceChange: this.onDatasourceChange,\n        datasource: datasource,\n        editableColumnName: true,\n        showExpression: true,\n        allowAddItem: true,\n        allowEditDataType: true,\n        itemGenerator: () => ({\n          column_name: '<new column>',\n          filterable: true,\n          groupby: true,\n          expression: '<enter SQL expression here>',\n          __expanded: true }) }))),\n\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_11__[\"default\"].TabPane, { key: 4, tab: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_32__.t)('Settings') },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_8__.Row, { gutter: 16 },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_8__.Col, { xs: 24, md: 12 },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(FormContainer, null, this.renderSettingsFieldset())),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_8__.Col, { xs: 24, md: 12 },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_31__.jsx)(FormContainer, null, this.renderAdvancedFieldset())))))));\n\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nDatasourceEditor.defaultProps = defaultProps;\nDatasourceEditor.propTypes = propTypes;\n\nconst DataSourceComponent = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_34__.b)(DatasourceEditor);const _default =\n\n(0,src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_24__[\"default\"])(DataSourceComponent);/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatasourceContainer, \"DatasourceContainer\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(FlexRowContainer, \"FlexRowContainer\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(StyledTableTabs, \"StyledTableTabs\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(StyledBadge, \"StyledBadge\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(EditLockContainer, \"EditLockContainer\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(ColumnButtonWrapper, \"ColumnButtonWrapper\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(StyledLabelWrapper, \"StyledLabelWrapper\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(StyledColumnsTabWrapper, \"StyledColumnsTabWrapper\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(checkboxGenerator, \"checkboxGenerator\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(DATA_TYPES, \"DATA_TYPES\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(DATASOURCE_TYPES_ARR, \"DATASOURCE_TYPES_ARR\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(DATASOURCE_TYPES, \"DATASOURCE_TYPES\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(CollectionTabTitle, \"CollectionTabTitle\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(ColumnCollectionTable, \"ColumnCollectionTable\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(StackedField, \"StackedField\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(FormContainer, \"FormContainer\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(OwnersSelector, \"OwnersSelector\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(DatasourceEditor, \"DatasourceEditor\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(DataSourceComponent, \"DataSourceComponent\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");reactHotLoader.register(_default, \"default\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\DatasourceEditor.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/Datasource/DatasourceEditor.jsx\n");

/***/ }),

/***/ "./src/components/Datasource/utils.js":
/*!********************************************!*\
  !*** ./src/components/Datasource/utils.js ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"recurseReactClone\": () => (/* binding */ recurseReactClone)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\nfunction recurseReactClone(children, type, propExtender) {\n  /**\r\n   * Clones a React component's children, and injects new props\r\n   * where the type specified is matched.\r\n   */\n  return react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, (child) => {\n    let newChild = child;\n    if (child && child.type.name === type.name) {\n      newChild = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, propExtender(child));\n    }\n    if (newChild && newChild.props.children) {\n      newChild = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(newChild, {\n        children: recurseReactClone(\n        newChild.props.children,\n        type,\n        propExtender) });\n\n\n    }\n    return newChild;\n  });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(recurseReactClone, \"recurseReactClone\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\utils.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9EYXRhc291cmNlL3V0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9zcmMvY29tcG9uZW50cy9EYXRhc291cmNlL3V0aWxzLmpzPzAyZmUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcclxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXHJcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXHJcbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcclxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxyXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcclxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXHJcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXHJcbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXHJcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxyXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXHJcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByZWN1cnNlUmVhY3RDbG9uZShjaGlsZHJlbiwgdHlwZSwgcHJvcEV4dGVuZGVyKSB7XHJcbiAgLyoqXHJcbiAgICogQ2xvbmVzIGEgUmVhY3QgY29tcG9uZW50J3MgY2hpbGRyZW4sIGFuZCBpbmplY3RzIG5ldyBwcm9wc1xyXG4gICAqIHdoZXJlIHRoZSB0eXBlIHNwZWNpZmllZCBpcyBtYXRjaGVkLlxyXG4gICAqL1xyXG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5tYXAoY2hpbGRyZW4sIGNoaWxkID0+IHtcclxuICAgIGxldCBuZXdDaGlsZCA9IGNoaWxkO1xyXG4gICAgaWYgKGNoaWxkICYmIGNoaWxkLnR5cGUubmFtZSA9PT0gdHlwZS5uYW1lKSB7XHJcbiAgICAgIG5ld0NoaWxkID0gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkLCBwcm9wRXh0ZW5kZXIoY2hpbGQpKTtcclxuICAgIH1cclxuICAgIGlmIChuZXdDaGlsZCAmJiBuZXdDaGlsZC5wcm9wcy5jaGlsZHJlbikge1xyXG4gICAgICBuZXdDaGlsZCA9IFJlYWN0LmNsb25lRWxlbWVudChuZXdDaGlsZCwge1xyXG4gICAgICAgIGNoaWxkcmVuOiByZWN1cnNlUmVhY3RDbG9uZShcclxuICAgICAgICAgIG5ld0NoaWxkLnByb3BzLmNoaWxkcmVuLFxyXG4gICAgICAgICAgdHlwZSxcclxuICAgICAgICAgIHByb3BFeHRlbmRlcixcclxuICAgICAgICApLFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIHJldHVybiBuZXdDaGlsZDtcclxuICB9KTtcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Datasource/utils.js\n");

/***/ }),

/***/ "./src/components/Badge/index.tsx":
/*!****************************************!*\
  !*** ./src/components/Badge/index.tsx ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! antd */ \"./node_modules/antd/es/badge/index.js\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\n\nconst Badge = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_1__.styled)((\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n{ textColor, ...props }) => (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__.jsx)(antd__WEBPACK_IMPORTED_MODULE_3__[\"default\"], props))`\n  & > sup {\n    padding: 0 ${({ theme }) => theme.gridUnit * 2}px;\n    background: ${({ theme, color }) => color || theme.colors.primary.base};\n    color: ${({ theme, textColor }) => textColor || theme.colors.grayscale.light5};\n  }\n`;const _default =\nBadge;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Badge, \"Badge\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Badge\\\\index.tsx\");reactHotLoader.register(_default, \"default\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Badge\\\\index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9CYWRnZS9pbmRleC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkE7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUVBO0FBQ0E7O0FBSUE7QUFDQTtBQUNBOztBQUdBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3NyYy9jb21wb25lbnRzL0JhZGdlL2luZGV4LnRzeD9jMzhiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXHJcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxyXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxyXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXHJcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcclxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXHJcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxyXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxyXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxyXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcclxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xyXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHN0eWxlZCB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcclxuaW1wb3J0IHsgQmFkZ2UgYXMgQW50ZEJhZGdlIH0gZnJvbSAnYW50ZCc7XHJcbmltcG9ydCB7IEJhZGdlUHJvcHMgYXMgQW50ZEJhZGdlUHJvcHMgfSBmcm9tICdhbnRkL2xpYi9iYWRnZSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEJhZGdlUHJvcHMgZXh0ZW5kcyBBbnRkQmFkZ2VQcm9wcyB7XHJcbiAgdGV4dENvbG9yPzogc3RyaW5nO1xyXG59XHJcblxyXG5jb25zdCBCYWRnZSA9IHN0eWxlZChcclxuICAoXHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXHJcbiAgICB7IHRleHRDb2xvciwgLi4ucHJvcHMgfTogQmFkZ2VQcm9wcyxcclxuICApID0+IDxBbnRkQmFkZ2Ugey4uLnByb3BzfSAvPixcclxuKWBcclxuICAmID4gc3VwIHtcclxuICAgIHBhZGRpbmc6IDAgJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5ncmlkVW5pdCAqIDJ9cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAkeyh7IHRoZW1lLCBjb2xvciB9KSA9PiBjb2xvciB8fCB0aGVtZS5jb2xvcnMucHJpbWFyeS5iYXNlfTtcclxuICAgIGNvbG9yOiAkeyh7IHRoZW1lLCB0ZXh0Q29sb3IgfSkgPT5cclxuICAgICAgdGV4dENvbG9yIHx8IHRoZW1lLmNvbG9ycy5ncmF5c2NhbGUubGlnaHQ1fTtcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBCYWRnZTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/Badge/index.tsx\n");

/***/ }),

/***/ "./src/components/Card/index.tsx":
/*!***************************************!*\
  !*** ./src/components/Card/index.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime-corejs3/helpers/extends */ \"./node_modules/@babel/runtime-corejs3/helpers/extends.js\");\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var antd_lib_card__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! antd/lib/card */ \"./node_modules/antd/lib/card/index.js\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\nconst Card = ({ padded, ...props }) => (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__.jsx)(antd_lib_card__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({}, props, { css: (theme) => ({\n    backgroundColor: theme.colors.grayscale.light4,\n    borderRadius: theme.borderRadius,\n    '.ant-card-body': {\n      padding: padded ? theme.gridUnit * 4 : theme.gridUnit } }) }));const _default =\n\n\nCard;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Card, \"Card\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Card\\\\index.tsx\");reactHotLoader.register(_default, \"default\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Card\\\\index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9DYXJkL2luZGV4LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkE7QUFDQTtBQUVBO0FBTUE7QUFJQTtBQUNBO0FBQ0E7QUFDQTs7O0FBTUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3NyYy9jb21wb25lbnRzL0NhcmQvaW5kZXgudHN4PzhlNzMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcclxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXHJcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXHJcbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcclxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxyXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcclxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXHJcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXHJcbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXHJcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxyXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXHJcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgU3VwZXJzZXRUaGVtZSB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcclxuaW1wb3J0IEFudGRDYXJkLCB7IENhcmRQcm9wcyBhcyBBbnRkQ2FyZFByb3BzIH0gZnJvbSAnYW50ZC9saWIvY2FyZCc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENhcmRQcm9wcyBleHRlbmRzIEFudGRDYXJkUHJvcHMge1xyXG4gIHBhZGRlZD86IGJvb2xlYW47XHJcbn1cclxuXHJcbmNvbnN0IENhcmQgPSAoeyBwYWRkZWQsIC4uLnByb3BzIH06IENhcmRQcm9wcykgPT4gKFxyXG4gIDxBbnRkQ2FyZFxyXG4gICAgey4uLnByb3BzfVxyXG4gICAgY3NzPXsodGhlbWU6IFN1cGVyc2V0VGhlbWUpID0+ICh7XHJcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUuY29sb3JzLmdyYXlzY2FsZS5saWdodDQsXHJcbiAgICAgIGJvcmRlclJhZGl1czogdGhlbWUuYm9yZGVyUmFkaXVzLFxyXG4gICAgICAnLmFudC1jYXJkLWJvZHknOiB7XHJcbiAgICAgICAgcGFkZGluZzogcGFkZGVkID8gdGhlbWUuZ3JpZFVuaXQgKiA0IDogdGhlbWUuZ3JpZFVuaXQsXHJcbiAgICAgIH0sXHJcbiAgICB9KX1cclxuICAvPlxyXG4pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2FyZDtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/Card/index.tsx\n");

/***/ }),

/***/ "./src/components/CertifiedBadge/index.tsx":
/*!*************************************************!*\
  !*** ./src/components/CertifiedBadge/index.tsx ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var src_components_Icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components/Icons */ \"./src/components/Icons/index.tsx\");\n/* harmony import */ var src_components_Tooltip__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/Tooltip */ \"./src/components/Tooltip/index.tsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\n\n\nfunction CertifiedBadge({ certifiedBy, details, size = 'l' }) {\n  const theme = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.useTheme)();\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(src_components_Tooltip__WEBPACK_IMPORTED_MODULE_2__.Tooltip, { id: \"certified-details-tooltip\", title: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n    certifiedBy && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"strong\", null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_5__.t)('Certified by %s', certifiedBy))),\n\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", null, details)) },\n\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Certified, { iconColor: theme.colors.primary.base, iconSize: size }));\n\n}__signature__(CertifiedBadge, \"useTheme{theme}\", () => [_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.useTheme]);const _default =\nCertifiedBadge;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CertifiedBadge, \"CertifiedBadge\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\CertifiedBadge\\\\index.tsx\");reactHotLoader.register(_default, \"default\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\CertifiedBadge\\\\index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9DZXJ0aWZpZWRCYWRnZS9pbmRleC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUUE7QUFLQTtBQUVBO0FBS0E7QUFFQTs7QUFHQTs7QUFJQTs7QUFHQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9zcmMvY29tcG9uZW50cy9DZXJ0aWZpZWRCYWRnZS9pbmRleC50c3g/YWU1NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxyXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcclxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cclxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxyXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXHJcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxyXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcclxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcclxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXHJcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcclxuICogdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB0LCB1c2VUaGVtZSB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcclxuaW1wb3J0IEljb25zLCB7IEljb25UeXBlIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMvSWNvbnMnO1xyXG5pbXBvcnQgeyBUb29sdGlwIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMvVG9vbHRpcCc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENlcnRpZmllZEJhZGdlUHJvcHMge1xyXG4gIGNlcnRpZmllZEJ5Pzogc3RyaW5nO1xyXG4gIGRldGFpbHM/OiBzdHJpbmc7XHJcbiAgc2l6ZT86IEljb25UeXBlWydpY29uU2l6ZSddO1xyXG59XHJcblxyXG5mdW5jdGlvbiBDZXJ0aWZpZWRCYWRnZSh7XHJcbiAgY2VydGlmaWVkQnksXHJcbiAgZGV0YWlscyxcclxuICBzaXplID0gJ2wnLFxyXG59OiBDZXJ0aWZpZWRCYWRnZVByb3BzKSB7XHJcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFRvb2x0aXBcclxuICAgICAgaWQ9XCJjZXJ0aWZpZWQtZGV0YWlscy10b29sdGlwXCJcclxuICAgICAgdGl0bGU9e1xyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICB7Y2VydGlmaWVkQnkgJiYgKFxyXG4gICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgIDxzdHJvbmc+e3QoJ0NlcnRpZmllZCBieSAlcycsIGNlcnRpZmllZEJ5KX08L3N0cm9uZz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICApfVxyXG4gICAgICAgICAgPGRpdj57ZGV0YWlsc308L2Rpdj5cclxuICAgICAgICA8Lz5cclxuICAgICAgfVxyXG4gICAgPlxyXG4gICAgICA8SWNvbnMuQ2VydGlmaWVkIGljb25Db2xvcj17dGhlbWUuY29sb3JzLnByaW1hcnkuYmFzZX0gaWNvblNpemU9e3NpemV9IC8+XHJcbiAgICA8L1Rvb2x0aXA+XHJcbiAgKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2VydGlmaWVkQmFkZ2U7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/CertifiedBadge/index.tsx\n");

/***/ }),

/***/ "./src/components/DatabaseSelector/index.tsx":
/*!***************************************************!*\
  !*** ./src/components/DatabaseSelector/index.tsx ***!
  \***************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DatabaseSelector)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/connection/SupersetClient.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rison */ \"./node_modules/rison/js/rison.js\");\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(rison__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var src_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components */ \"./src/components/index.ts\");\n/* harmony import */ var src_components_Label__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/Label */ \"./src/components/Label/index.tsx\");\n/* harmony import */ var src_components_Form__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/Form */ \"./src/components/Form/index.tsx\");\n/* harmony import */ var src_components_RefreshLabel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/RefreshLabel */ \"./src/components/RefreshLabel/index.tsx\");\n/* harmony import */ var src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/components/MessageToasts/withToasts */ \"./src/components/MessageToasts/withToasts.tsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\n\n\n\n\n\n\nconst DatabaseSelectorWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_7__.styled.div`\n  ${({ theme }) => `\n    .refresh {\n      display: flex;\n      align-items: center;\n      width: 30px;\n      margin-left: ${theme.gridUnit}px;\n      margin-top: ${theme.gridUnit * 5}px;\n    }\n\n    .section {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n    }\n\n    .select {\n      width: calc(100% - 30px - ${theme.gridUnit}px);\n      flex: 1;\n    }\n\n    & > div {\n      margin-bottom: ${theme.gridUnit * 4}px;\n    }\n  `}\n`;\nconst LabelStyle = _superset_ui_core__WEBPACK_IMPORTED_MODULE_7__.styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: ${({ theme }) => theme.gridUnit - 2}px;\n\n  .backend {\n    overflow: visible;\n  }\n\n  .name {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\nconst SelectLabel = ({ backend, databaseName }) => (0,_emotion_react__WEBPACK_IMPORTED_MODULE_8__.jsx)(LabelStyle, null,\n(0,_emotion_react__WEBPACK_IMPORTED_MODULE_8__.jsx)(src_components_Label__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { className: \"backend\" }, backend),\n(0,_emotion_react__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", { className: \"name\", title: databaseName },\ndatabaseName));\n\n\nfunction DatabaseSelector({ db, formMode = false, emptyState, getDbList, handleError, isDatabaseSelectEnabled = true, onDbChange, onEmptyResults, onSchemaChange, onSchemasLoad, readOnly = false, schema, sqlLabMode = false }) {\n  const [loadingSchemas, setLoadingSchemas] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [schemaOptions, setSchemaOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [currentDb, setCurrentDb] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(db ?\n  {\n    label: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_8__.jsx)(SelectLabel, { backend: db.backend, databaseName: db.database_name }),\n    value: db.id,\n    ...db } :\n\n  undefined);\n  const [currentSchema, setCurrentSchema] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(schema ? { label: schema, value: schema } : undefined);\n  const [refresh, setRefresh] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const { addSuccessToast } = (0,src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_6__.useToasts)();\n  const loadDatabases = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => async (search, page, pageSize) => {\n    const queryParams = rison__WEBPACK_IMPORTED_MODULE_1___default().encode({\n      order_columns: 'database_name',\n      order_direction: 'asc',\n      page,\n      page_size: pageSize,\n      ...(formMode || !sqlLabMode ?\n      { filters: [{ col: 'database_name', opr: 'ct', value: search }] } :\n      {\n        filters: [\n        { col: 'database_name', opr: 'ct', value: search },\n        {\n          col: 'expose_in_sqllab',\n          opr: 'eq',\n          value: true }] }) });\n\n\n\n\n    const endpoint = `/api/v1/database/?q=${queryParams}`;\n    return _superset_ui_core__WEBPACK_IMPORTED_MODULE_9__[\"default\"].get({ endpoint }).then(({ json }) => {\n      const { result } = json;\n      if (getDbList) {\n        getDbList(result);\n      }\n      if (result.length === 0) {\n        if (onEmptyResults)\n        onEmptyResults(search);\n      }\n      const options = result.map((row) => ({\n        label: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_8__.jsx)(SelectLabel, { backend: row.backend, databaseName: row.database_name }),\n        value: row.id,\n        id: row.id,\n        database_name: row.database_name,\n        backend: row.backend,\n        allow_multi_schema_metadata_fetch: row.allow_multi_schema_metadata_fetch }));\n\n      return {\n        data: options,\n        totalCount: options.length };\n\n    });\n  }, [formMode, getDbList, sqlLabMode]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (currentDb) {\n      setLoadingSchemas(true);\n      const queryParams = rison__WEBPACK_IMPORTED_MODULE_1___default().encode({ force: refresh > 0 });\n      const endpoint = `/api/v1/database/${currentDb.value}/schemas/?q=${queryParams}`;\n      // TODO: Would be nice to add pagination in a follow-up. Needs endpoint changes.\n      _superset_ui_core__WEBPACK_IMPORTED_MODULE_9__[\"default\"].get({ endpoint }).\n      then(({ json }) => {\n        const options = json.result.map((s) => ({\n          value: s,\n          label: s,\n          title: s }));\n\n        if (onSchemasLoad) {\n          onSchemasLoad(options);\n        }\n        setSchemaOptions(options);\n        setLoadingSchemas(false);\n        if (refresh > 0)\n        addSuccessToast('List refreshed');\n      }).\n      catch(() => {\n        setLoadingSchemas(false);\n        handleError((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__.t)('There was an error loading the schemas'));\n      });\n    }\n  }, [currentDb, onSchemasLoad, refresh]);\n  function changeDataBase(value, database) {\n    setCurrentDb(database);\n    setCurrentSchema(undefined);\n    if (onDbChange) {\n      onDbChange(database);\n    }\n    if (onSchemaChange) {\n      onSchemaChange(undefined);\n    }\n  }\n  function changeSchema(schema) {\n    setCurrentSchema(schema);\n    if (onSchemaChange) {\n      onSchemaChange(schema.value);\n    }\n  }\n  function renderSelectRow(select, refreshBtn) {\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"div\", { className: \"section\" },\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", { className: \"select\" }, select),\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"span\", { className: \"refresh\" }, refreshBtn));\n\n  }\n  function renderDatabaseSelect() {\n    return renderSelectRow((0,_emotion_react__WEBPACK_IMPORTED_MODULE_8__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_2__.Select, { ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__.t)('Select database or type database name'), optionFilterProps: ['database_name', 'value'], \"data-test\": \"select-database\", header: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_8__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_4__.FormLabel, null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__.t)('Database')), lazyLoading: false, notFoundContent: emptyState, onChange: changeDataBase, value: currentDb, placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__.t)('Select database or type database name'), disabled: !isDatabaseSelectEnabled || readOnly, options: loadDatabases }), null);\n  }\n  function renderSchemaSelect() {\n    const refreshIcon = !formMode && !readOnly && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_8__.jsx)(src_components_RefreshLabel__WEBPACK_IMPORTED_MODULE_5__[\"default\"], { onClick: () => setRefresh(refresh + 1), tooltipContent: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__.t)('Force refresh schema list') });\n    return renderSelectRow((0,_emotion_react__WEBPACK_IMPORTED_MODULE_8__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_2__.Select, { ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__.t)('Select schema or type schema name'), disabled: !currentDb || readOnly, header: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_8__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_4__.FormLabel, null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__.t)('Schema')), labelInValue: true, lazyLoading: false, loading: loadingSchemas, name: \"select-schema\", placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__.t)('Select schema or type schema name'), onChange: (item) => changeSchema(item), options: schemaOptions, showSearch: true, value: currentSchema }), refreshIcon);\n  }\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_8__.jsx)(DatabaseSelectorWrapper, { \"data-test\": \"DatabaseSelector\" },\n  renderDatabaseSelect(),\n  renderSchemaSelect());\n\n}__signature__(DatabaseSelector, \"useState{[loadingSchemas, setLoadingSchemas](false)}\\nuseState{[schemaOptions, setSchemaOptions]([])}\\nuseState{[currentDb, setCurrentDb](db\\r\\n        ? {\\r\\n            label: (<SelectLabel backend={db.backend} databaseName={db.database_name}/>),\\r\\n            value: db.id,\\r\\n            ...db,\\r\\n        }\\r\\n        : undefined)}\\nuseState{[currentSchema, setCurrentSchema](schema ? { label: schema, value: schema } : undefined)}\\nuseState{[refresh, setRefresh](0)}\\nuseToasts{{ addSuccessToast }}\\nuseMemo{loadDatabases}\\nuseEffect{}\", () => [src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_6__.useToasts]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatabaseSelectorWrapper, \"DatabaseSelectorWrapper\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\DatabaseSelector\\\\index.tsx\");reactHotLoader.register(LabelStyle, \"LabelStyle\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\DatabaseSelector\\\\index.tsx\");reactHotLoader.register(SelectLabel, \"SelectLabel\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\DatabaseSelector\\\\index.tsx\");reactHotLoader.register(DatabaseSelector, \"DatabaseSelector\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\DatabaseSelector\\\\index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/DatabaseSelector/index.tsx\n");

/***/ }),

/***/ "./src/components/Datasource/CollectionTable.tsx":
/*!*******************************************************!*\
  !*** ./src/components/Datasource/CollectionTable.tsx ***!
  \*******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CRUDCollection)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! shortid */ \"./node_modules/shortid/index.js\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(shortid__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var src_components_Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/Button */ \"./src/components/Button/index.tsx\");\n/* harmony import */ var src_components_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/Icons */ \"./src/components/Icons/index.tsx\");\n/* harmony import */ var _Fieldset__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Fieldset */ \"./src/components/Datasource/Fieldset.tsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ \"./src/components/Datasource/utils.js\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\n\n\n\n\n\nvar SortOrder;\n(function (SortOrder) {\n  SortOrder[SortOrder[\"asc\"] = 1] = \"asc\";\n  SortOrder[SortOrder[\"desc\"] = 2] = \"desc\";\n  SortOrder[SortOrder[\"unsort\"] = 0] = \"unsort\";\n})(SortOrder || (SortOrder = {}));\nfunction createCollectionArray(collection) {\n  return Object.keys(collection).map((k) => collection[k]);\n}\nfunction createKeyedCollection(arr) {\n  const collectionArray = arr.map((o) => ({\n    ...o,\n    id: o.id || shortid__WEBPACK_IMPORTED_MODULE_1___default().generate() }));\n\n  const collection = {};\n  collectionArray.forEach((o) => {\n    collection[o.id] = o;\n  });\n  return {\n    collection,\n    collectionArray };\n\n}\nconst CrudTableWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_6__.styled.div`\n  ${({ stickyHeader }) => stickyHeader &&\n`\n      height: 350px;\n      overflow-y: auto;\n      overflow-x: auto;\n\n      .table {\n        min-width: 800px;\n      }\n      thead th {\n        background: #fff;\n        position: sticky;\n        top: 0;\n        z-index: 9;\n        min\n      }\n    `}\n  ${({ theme }) => `\n    th span {\n      vertical-align: ${theme.gridUnit * -2}px;\n    }\n    .text-right {\n      text-align: right;\n    }\n    .empty-collection {\n      padding: ${theme.gridUnit * 2 + 2}px;\n    }\n    .tiny-cell {\n      width: ${theme.gridUnit + 1}px;\n    }\n    i.fa-caret-down,\n    i.fa-caret-up {\n      width: ${theme.gridUnit + 1}px;\n    }\n    td.expanded {\n      border-top: 0;\n      padding: 0;\n    }\n  `}\n`;\nconst CrudButtonWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_6__.styled.div`\n  text-align: right;\n  ${({ theme }) => `margin-bottom: ${theme.gridUnit * 2}px`}\n`;\nclass CRUDCollection extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n  constructor(props) {\n    super(props);\n    const { collection, collectionArray } = createKeyedCollection(props.collection);\n    this.state = {\n      expandedColumns: {},\n      collection,\n      collectionArray,\n      sortColumn: '',\n      sort: 0 };\n\n    this.renderItem = this.renderItem.bind(this);\n    this.onAddItem = this.onAddItem.bind(this);\n    this.renderExpandableSection = this.renderExpandableSection.bind(this);\n    this.getLabel = this.getLabel.bind(this);\n    this.onFieldsetChange = this.onFieldsetChange.bind(this);\n    this.renderTableBody = this.renderTableBody.bind(this);\n    this.changeCollection = this.changeCollection.bind(this);\n    this.sortColumn = this.sortColumn.bind(this);\n    this.renderSortIcon = this.renderSortIcon.bind(this);\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.collection !== this.props.collection) {\n      const { collection, collectionArray } = createKeyedCollection(nextProps.collection);\n      this.setState({\n        collection,\n        collectionArray });\n\n    }\n  }\n  onCellChange(id, col, val) {\n    this.changeCollection({\n      ...this.state.collection,\n      [id]: {\n        ...this.state.collection[id],\n        [col]: val } });\n\n\n  }\n  onAddItem() {\n    if (this.props.itemGenerator) {\n      let newItem = this.props.itemGenerator();\n      if (!newItem.id) {\n        newItem = { ...newItem, id: shortid__WEBPACK_IMPORTED_MODULE_1___default().generate() };\n      }\n      this.changeCollection(this.state.collection, newItem);\n    }\n  }\n  onFieldsetChange(item) {\n    this.changeCollection({\n      ...this.state.collection,\n      [item.id]: item });\n\n  }\n  getLabel(col) {\n    const { columnLabels } = this.props;\n    let label = columnLabels && columnLabels[col] ? columnLabels[col] : col;\n    if (label.startsWith('__')) {\n      // special label-free columns (ie: caret for expand, delete cross)\n      label = '';\n    }\n    return label;\n  }\n  changeCollection(collection, newItem) {\n    this.setState({ collection });\n    if (this.props.onChange) {\n      const collectionArray = this.state.collectionArray.\n      map((c) => collection[c.id])\n      // filter out removed items\n      .filter((c) => c !== undefined);\n      if (newItem) {\n        collectionArray.unshift(newItem);\n      }\n      this.props.onChange(collectionArray);\n    }\n  }\n  deleteItem(id) {\n    const newColl = { ...this.state.collection };\n    delete newColl[id];\n    this.changeCollection(newColl);\n  }\n  effectiveTableColumns() {\n    const { tableColumns, allowDeletes, expandFieldset } = this.props;\n    const cols = allowDeletes ?\n    tableColumns.concat(['__actions']) :\n    tableColumns;\n    return expandFieldset ? ['__expand'].concat(cols) : cols;\n  }\n  toggleExpand(id) {\n    this.onCellChange(id, '__expanded', false);\n    this.setState((prevState) => ({\n      expandedColumns: {\n        ...prevState.expandedColumns,\n        [id]: !prevState.expandedColumns[id] } }));\n\n\n  }\n  sortColumn(col, sort = SortOrder.unsort) {\n    const { sortColumns } = this.props;\n    // default sort logic sorting string, boolean and number\n    const compareSort = (m, n) => {\n      if (typeof m === 'string') {\n        return (m || ' ').localeCompare(n);\n      }\n      return m - n;\n    };\n    return () => {\n      if (sortColumns != null && sortColumns.includes(col)) {\n        // display in unsorted order if no sort specified\n        if (sort === SortOrder.unsort) {\n          const { collection } = createKeyedCollection(this.props.collection);\n          const collectionArray = createCollectionArray(collection);\n          this.setState({\n            collectionArray,\n            sortColumn: '',\n            sort });\n\n          return;\n        }\n        // newly ordered collection\n        const sorted = [...this.state.collectionArray].sort((a, b) => compareSort(a[col], b[col]));\n        const newCollection = sort === SortOrder.asc ? sorted : sorted.reverse();\n        this.setState((prevState) => ({\n          ...prevState,\n          collectionArray: newCollection,\n          sortColumn: col,\n          sort }));\n\n      }\n    };\n  }\n  renderSortIcon(col) {\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.asc) {\n      return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_3__[\"default\"].SortAsc, { onClick: this.sortColumn(col, 2) });\n    }\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.desc) {\n      return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_3__[\"default\"].SortDesc, { onClick: this.sortColumn(col, 0) });\n    }\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Sort, { onClick: this.sortColumn(col, 1) });\n  }\n  renderHeaderRow() {\n    const cols = this.effectiveTableColumns();\n    const { allowDeletes, expandFieldset, extraButtons, sortColumns } = this.props;\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"thead\", null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"tr\", null,\n    expandFieldset && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"th\", { \"aria-label\": \"Expand\", className: \"tiny-cell\" }),\n    cols.map((col) => (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"th\", { key: col },\n    this.getLabel(col),\n    (sortColumns == null ? void 0 : sortColumns.includes(col)) && this.renderSortIcon(col))),\n\n    extraButtons,\n    allowDeletes && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"th\", { key: \"delete-item\", \"aria-label\": \"Delete\", className: \"tiny-cell\" })));\n\n\n  }\n  renderExpandableSection(item) {\n    const propsGenerator = () => ({ item, onChange: this.onFieldsetChange });\n    return (0,_utils__WEBPACK_IMPORTED_MODULE_5__.recurseReactClone)(this.props.expandFieldset, _Fieldset__WEBPACK_IMPORTED_MODULE_4__[\"default\"], propsGenerator);\n  }\n  renderCell(record, col) {\n    const renderer = this.props.itemRenderers && this.props.itemRenderers[col];\n    const val = record[col];\n    const onChange = this.onCellChange.bind(this, record.id, col);\n    return renderer ? renderer(val, onChange, this.getLabel(col), record) : val;\n  }\n  renderItem(record) {\n    const { allowAddItem, allowDeletes, expandFieldset, tableColumns } = this.props;\n    /* eslint-disable no-underscore-dangle */\n    const isExpanded = !!this.state.expandedColumns[record.id] || record.__expanded;\n    let tds = [];\n    if (expandFieldset) {\n      tds.push((0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"td\", { key: \"__expand\", className: \"expand\" },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"i\", { role: \"button\", \"aria-label\": \"Toggle expand\", tabIndex: 0, className: `fa fa-caret-${isExpanded ? 'down' : 'right'} text-primary pointer`, onClick: this.toggleExpand.bind(this, record.id) })));\n\n    }\n    tds = tds.concat(tableColumns.map((col) => (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"td\", { key: col }, this.renderCell(record, col))));\n    if (allowAddItem) {\n      tds.push((0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"td\", { key: \"add\" }));\n    }\n    if (allowDeletes) {\n      tds.push((0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"td\", { key: \"__actions\", \"data-test\": \"crud-delete-option\", className: \"text-primary\" },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Trash, { \"aria-label\": \"Delete item\", className: \"pointer\", \"data-test\": \"crud-delete-icon\", role: \"button\", tabIndex: 0, onClick: this.deleteItem.bind(this, record.id) })));\n\n    }\n    const trs = [\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"tr\", { 'data-test': 'table-row', className: \"row\", key: record.id },\n    tds)];\n\n\n    if (isExpanded) {\n      trs.push((0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"tr\", { className: \"exp\", key: `exp__${record.id}` },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"td\", { colSpan: this.effectiveTableColumns().length, className: \"expanded\" },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"div\", null, this.renderExpandableSection(record)))));\n\n\n    }\n    return trs;\n  }\n  renderEmptyCell() {\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"tr\", null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"td\", { className: \"empty-collection\" }, this.props.emptyMessage));\n\n  }\n  renderTableBody() {\n    const data = this.state.collectionArray;\n    const content = data.length ?\n    data.map((d) => this.renderItem(d)) :\n    this.renderEmptyCell();\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"tbody\", { \"data-test\": \"table-content-rows\" }, content);\n  }\n  render() {\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(CrudButtonWrapper, null,\n    this.props.allowAddItem && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"span\", { className: \"m-t-10 m-r-10\" },\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(src_components_Button__WEBPACK_IMPORTED_MODULE_2__[\"default\"], { buttonSize: \"small\", buttonStyle: \"tertiary\", onClick: this.onAddItem, \"data-test\": \"add-item-button\" },\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"i\", { \"data-test\": \"crud-add-table-item\", className: \"fa fa-plus\" }), ' ',\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_8__.t)('Add item')))),\n\n\n\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(CrudTableWrapper, { className: \"CRUD\", stickyHeader: this.props.stickyHeader },\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"table\", { \"data-test\": \"crud-table\", className: \"table\" },\n    this.renderHeaderRow(),\n    this.renderTableBody())));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SortOrder, \"SortOrder\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\CollectionTable.tsx\");reactHotLoader.register(createCollectionArray, \"createCollectionArray\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\CollectionTable.tsx\");reactHotLoader.register(createKeyedCollection, \"createKeyedCollection\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\CollectionTable.tsx\");reactHotLoader.register(CrudTableWrapper, \"CrudTableWrapper\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\CollectionTable.tsx\");reactHotLoader.register(CrudButtonWrapper, \"CrudButtonWrapper\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\CollectionTable.tsx\");reactHotLoader.register(CRUDCollection, \"CRUDCollection\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\CollectionTable.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/Datasource/CollectionTable.tsx\n");

/***/ }),

/***/ "./src/components/Datasource/Field.tsx":
/*!*********************************************!*\
  !*** ./src/components/Datasource/Field.tsx ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Field)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* harmony import */ var src_components_Tooltip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components/Tooltip */ \"./src/components/Tooltip/index.tsx\");\n/* harmony import */ var src_components_Form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/Form */ \"./src/components/Form/index.tsx\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\n\n\nconst formItemInlineCss = _superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.css`\n  .ant-form-item-control-input-content {\n    display: flex;\n    flex-direction: row;\n  }\n`;\nfunction Field({ fieldKey, value, label, description = null, control, onChange = () => {}, compact = false, inline }) {\n  const onControlChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((newValue) => {\n    onChange(fieldKey, newValue);\n  }, [onChange, fieldKey]);\n  const hookedControl = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(control, {\n    value,\n    onChange: onControlChange });\n\n  return (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_2__.FormItem, { label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_2__.FormLabel, { className: \"m-r-5\" },\n    label || fieldKey,\n    compact && description && (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.jsx)(src_components_Tooltip__WEBPACK_IMPORTED_MODULE_1__.Tooltip, { id: \"field-descr\", placement: \"right\", title: description },\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"i\", { className: \"fa fa-info-circle m-l-5\" }))),\n\n    css: inline && formItemInlineCss },\n  hookedControl,\n  !compact && description && (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"div\", { css: (theme) => ({\n      color: theme.colors.grayscale.base,\n      [inline ? 'marginLeft' : 'marginTop']: theme.gridUnit }) },\n\n  description));\n\n\n}__signature__(Field, \"useCallback{onControlChange}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(formItemInlineCss, \"formItemInlineCss\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\Field.tsx\");reactHotLoader.register(Field, \"Field\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\Field.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9EYXRhc291cmNlL0ZpZWxkLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7O0FBS0E7QUFhQTtBQVVBO0FBRUE7QUFDQTtBQUlBO0FBQ0E7QUFDQTs7QUFFQTtBQUlBO0FBQ0E7QUFFQTs7QUFLQTtBQUVBO0FBQ0E7QUFHQTtBQUNBOztBQUdBOzs7QUFLQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vc3JjL2NvbXBvbmVudHMvRGF0YXNvdXJjZS9GaWVsZC50c3g/YjA1OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxyXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcclxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cclxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxyXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXHJcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxyXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcclxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcclxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXHJcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcclxuICogdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IGNzcywgU3VwZXJzZXRUaGVtZSB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcclxuaW1wb3J0IHsgVG9vbHRpcCB9IGZyb20gJ3NyYy9jb21wb25lbnRzL1Rvb2x0aXAnO1xyXG5pbXBvcnQgeyBGb3JtSXRlbSwgRm9ybUxhYmVsIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMvRm9ybSc7XHJcblxyXG5jb25zdCBmb3JtSXRlbUlubGluZUNzcyA9IGNzc2BcclxuICAuYW50LWZvcm0taXRlbS1jb250cm9sLWlucHV0LWNvbnRlbnQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgfVxyXG5gO1xyXG5cclxuaW50ZXJmYWNlIEZpZWxkUHJvcHM8Vj4ge1xyXG4gIGZpZWxkS2V5OiBzdHJpbmc7XHJcbiAgdmFsdWU/OiBWO1xyXG4gIGxhYmVsOiBzdHJpbmc7XHJcbiAgZGVzY3JpcHRpb24/OiBSZWFjdC5SZWFjdE5vZGU7XHJcbiAgY29udHJvbDogUmVhY3QuUmVhY3RFbGVtZW50O1xyXG4gIG9uQ2hhbmdlOiAoZmllbGRLZXk6IHN0cmluZywgbmV3VmFsdWU6IFYpID0+IHZvaWQ7XHJcbiAgY29tcGFjdDogYm9vbGVhbjtcclxuICBpbmxpbmU6IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEZpZWxkPFY+KHtcclxuICBmaWVsZEtleSxcclxuICB2YWx1ZSxcclxuICBsYWJlbCxcclxuICBkZXNjcmlwdGlvbiA9IG51bGwsXHJcbiAgY29udHJvbCxcclxuICBvbkNoYW5nZSA9ICgpID0+IHt9LFxyXG4gIGNvbXBhY3QgPSBmYWxzZSxcclxuICBpbmxpbmUsXHJcbn06IEZpZWxkUHJvcHM8Vj4pIHtcclxuICBjb25zdCBvbkNvbnRyb2xDaGFuZ2UgPSB1c2VDYWxsYmFjayhcclxuICAgIG5ld1ZhbHVlID0+IHtcclxuICAgICAgb25DaGFuZ2UoZmllbGRLZXksIG5ld1ZhbHVlKTtcclxuICAgIH0sXHJcbiAgICBbb25DaGFuZ2UsIGZpZWxkS2V5XSxcclxuICApO1xyXG5cclxuICBjb25zdCBob29rZWRDb250cm9sID0gUmVhY3QuY2xvbmVFbGVtZW50KGNvbnRyb2wsIHtcclxuICAgIHZhbHVlLFxyXG4gICAgb25DaGFuZ2U6IG9uQ29udHJvbENoYW5nZSxcclxuICB9KTtcclxuICByZXR1cm4gKFxyXG4gICAgPEZvcm1JdGVtXHJcbiAgICAgIGxhYmVsPXtcclxuICAgICAgICA8Rm9ybUxhYmVsIGNsYXNzTmFtZT1cIm0tci01XCI+XHJcbiAgICAgICAgICB7bGFiZWwgfHwgZmllbGRLZXl9XHJcbiAgICAgICAgICB7Y29tcGFjdCAmJiBkZXNjcmlwdGlvbiAmJiAoXHJcbiAgICAgICAgICAgIDxUb29sdGlwIGlkPVwiZmllbGQtZGVzY3JcIiBwbGFjZW1lbnQ9XCJyaWdodFwiIHRpdGxlPXtkZXNjcmlwdGlvbn0+XHJcbiAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtaW5mby1jaXJjbGUgbS1sLTVcIiAvPlxyXG4gICAgICAgICAgICA8L1Rvb2x0aXA+XHJcbiAgICAgICAgICApfVxyXG4gICAgICAgIDwvRm9ybUxhYmVsPlxyXG4gICAgICB9XHJcbiAgICAgIGNzcz17aW5saW5lICYmIGZvcm1JdGVtSW5saW5lQ3NzfVxyXG4gICAgPlxyXG4gICAgICB7aG9va2VkQ29udHJvbH1cclxuICAgICAgeyFjb21wYWN0ICYmIGRlc2NyaXB0aW9uICYmIChcclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9eyh0aGVtZTogU3VwZXJzZXRUaGVtZSkgPT4gKHtcclxuICAgICAgICAgICAgY29sb3I6IHRoZW1lLmNvbG9ycy5ncmF5c2NhbGUuYmFzZSxcclxuICAgICAgICAgICAgW2lubGluZSA/ICdtYXJnaW5MZWZ0JyA6ICdtYXJnaW5Ub3AnXTogdGhlbWUuZ3JpZFVuaXQsXHJcbiAgICAgICAgICB9KX1cclxuICAgICAgICA+XHJcbiAgICAgICAgICB7ZGVzY3JpcHRpb259XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICl9XHJcbiAgICA8L0Zvcm1JdGVtPlxyXG4gICk7XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/Datasource/Field.tsx\n");

/***/ }),

/***/ "./src/components/Datasource/Fieldset.tsx":
/*!************************************************!*\
  !*** ./src/components/Datasource/Fieldset.tsx ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Fieldset)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var src_components_Form__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components/Form */ \"./src/components/Form/index.tsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./src/components/Datasource/utils.js\");\n/* harmony import */ var _Field__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Field */ \"./src/components/Datasource/Field.tsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\n\n\nclass Fieldset extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n\n\n\n\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n  onChange(fieldKey, val) {\n    return this.props.onChange({\n      ...this.props.item,\n      [fieldKey]: val });\n\n  }\n  render() {\n    const { title } = this.props;\n    const propExtender = (field) => ({\n      onChange: this.onChange,\n      value: this.props.item[field.props.fieldKey],\n      compact: this.props.compact });\n\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_1__.Form, { className: \"CRUD\", layout: \"vertical\" },\n    title && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"legend\", null, title),\n    (0,_utils__WEBPACK_IMPORTED_MODULE_2__.recurseReactClone)(this.props.children, _Field__WEBPACK_IMPORTED_MODULE_3__[\"default\"], propExtender));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}Fieldset.defaultProps = { compact: false, title: null };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Fieldset, \"Fieldset\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\Datasource\\\\Fieldset.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9EYXRhc291cmNlL0ZpZWxkc2V0LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQVlBOzs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQTtBQUNBOztBQUdBO0FBL0JBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3NyYy9jb21wb25lbnRzL0RhdGFzb3VyY2UvRmllbGRzZXQudHN4PzkwYjQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcclxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXHJcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXHJcbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcclxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxyXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcclxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXHJcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXHJcbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXHJcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxyXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXHJcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgRm9ybSB9IGZyb20gJ3NyYy9jb21wb25lbnRzL0Zvcm0nO1xyXG5cclxuaW1wb3J0IHsgcmVjdXJzZVJlYWN0Q2xvbmUgfSBmcm9tICcuL3V0aWxzJztcclxuaW1wb3J0IEZpZWxkIGZyb20gJy4vRmllbGQnO1xyXG5cclxuaW50ZXJmYWNlIEZpZWxkc2V0UHJvcHMge1xyXG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XHJcbiAgb25DaGFuZ2U6IEZ1bmN0aW9uO1xyXG4gIGl0ZW06IFJlY29yZDxzdHJpbmcsIGFueT47XHJcbiAgdGl0bGU6IFJlYWN0LlJlYWN0Tm9kZTtcclxuICBjb21wYWN0OiBib29sZWFuO1xyXG59XHJcblxyXG50eXBlIGZpZWxkS2V5VHlwZSA9IHN0cmluZyB8IG51bWJlcjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZpZWxkc2V0IGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudDxGaWVsZHNldFByb3BzPiB7XHJcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcclxuICAgIGNvbXBhY3Q6IGZhbHNlLFxyXG4gICAgdGl0bGU6IG51bGwsXHJcbiAgfTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJvcHM6IEZpZWxkc2V0UHJvcHMpIHtcclxuICAgIHN1cGVyKHByb3BzKTtcclxuICAgIHRoaXMub25DaGFuZ2UgPSB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcyk7XHJcbiAgfVxyXG5cclxuICBvbkNoYW5nZShmaWVsZEtleTogZmllbGRLZXlUeXBlLCB2YWw6IGFueSkge1xyXG4gICAgcmV0dXJuIHRoaXMucHJvcHMub25DaGFuZ2Uoe1xyXG4gICAgICAuLi50aGlzLnByb3BzLml0ZW0sXHJcbiAgICAgIFtmaWVsZEtleV06IHZhbCxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgeyB0aXRsZSB9ID0gdGhpcy5wcm9wcztcclxuICAgIGNvbnN0IHByb3BFeHRlbmRlciA9IChmaWVsZDogeyBwcm9wczogeyBmaWVsZEtleTogZmllbGRLZXlUeXBlIH0gfSkgPT4gKHtcclxuICAgICAgb25DaGFuZ2U6IHRoaXMub25DaGFuZ2UsXHJcbiAgICAgIHZhbHVlOiB0aGlzLnByb3BzLml0ZW1bZmllbGQucHJvcHMuZmllbGRLZXldLFxyXG4gICAgICBjb21wYWN0OiB0aGlzLnByb3BzLmNvbXBhY3QsXHJcbiAgICB9KTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxGb3JtIGNsYXNzTmFtZT1cIkNSVURcIiBsYXlvdXQ9XCJ2ZXJ0aWNhbFwiPlxyXG4gICAgICAgIHt0aXRsZSAmJiA8bGVnZW5kPnt0aXRsZX08L2xlZ2VuZD59XHJcbiAgICAgICAge3JlY3Vyc2VSZWFjdENsb25lKHRoaXMucHJvcHMuY2hpbGRyZW4sIEZpZWxkLCBwcm9wRXh0ZW5kZXIpfVxyXG4gICAgICA8L0Zvcm0+XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Datasource/Fieldset.tsx\n");

/***/ }),

/***/ "./src/components/EditableTitle/index.tsx":
/*!************************************************!*\
  !*** ./src/components/EditableTitle/index.tsx ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EditableTitle)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime-corejs3/helpers/extends */ \"./node_modules/@babel/runtime-corejs3/helpers/extends.js\");\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var src_components_Tooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/Tooltip */ \"./src/components/Tooltip/index.tsx\");\n/* harmony import */ var _CertifiedBadge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../CertifiedBadge */ \"./src/components/CertifiedBadge/index.tsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\n\n\n\nconst StyledCertifiedBadge = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_5__.styled)(_CertifiedBadge__WEBPACK_IMPORTED_MODULE_4__[\"default\"])`\n  vertical-align: middle;\n`;\nfunction EditableTitle({ canEdit = false, editing = false, extraClasses, multiLine = false, noPermitTooltip, onSaveTitle, showTooltip = true, style, title = '', defaultTitle = '', placeholder = '', certifiedBy, certificationDetails,\n  // rest is related to title tooltip\n  ...rest }) {\n  const [isEditing, setIsEditing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(editing);\n  const [currentTitle, setCurrentTitle] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(title);\n  const [lastTitle, setLastTitle] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(title);\n  const [contentBoundingRect, setContentBoundingRect] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n  // Used so we can access the DOM element if a user clicks on this component.\n  const contentRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (title !== currentTitle) {\n      setLastTitle(currentTitle);\n      setCurrentTitle(title);\n    }\n  }, [title]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (isEditing) {\n      contentRef.current.focus();\n      // move cursor and scroll to the end\n      if (contentRef.current.setSelectionRange) {\n        const { length } = contentRef.current.value;\n        contentRef.current.setSelectionRange(length, length);\n        contentRef.current.scrollLeft = contentRef.current.scrollWidth;\n        contentRef.current.scrollTop = contentRef.current.scrollHeight;\n      }\n    }\n  }, [isEditing]);\n  function handleClick() {\n    if (!canEdit || isEditing) {\n      return;\n    }\n    // For multi-line values, save the actual rendered size of the displayed text.\n    // Later, if a textarea is constructed for editing the value, we'll need this.\n    const contentBounding = contentRef.current ?\n    contentRef.current.getBoundingClientRect() :\n    null;\n    setIsEditing(true);\n    setContentBoundingRect(contentBounding);\n  }\n  function handleBlur() {\n    const formattedTitle = currentTitle.trim();\n    if (!canEdit) {\n      return;\n    }\n    setIsEditing(false);\n    if (!formattedTitle.length) {\n      setCurrentTitle(lastTitle);\n      return;\n    }\n    if (lastTitle !== formattedTitle) {\n      setLastTitle(formattedTitle);\n    }\n    if (title !== formattedTitle) {\n      onSaveTitle(formattedTitle);\n    }\n  }\n  // tl;dr when a EditableTitle is being edited, typically the Tab that wraps it has been\n  // clicked and is focused/active. For accessibility, when the focused tab anchor intercepts\n  // the ' ' key (among others, including all arrows) the onChange() doesn't fire. Somehow\n  // keydown is still called so we can detect this and manually add a ' ' to the current title\n  function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.stopPropagation();\n    }\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      handleBlur();\n    }\n  }\n  function handleChange(ev) {\n    if (!canEdit) {\n      return;\n    }\n    setCurrentTitle(ev.target.value);\n  }\n  function handleKeyPress(ev) {\n    if (ev.key === 'Enter') {\n      ev.preventDefault();\n      handleBlur();\n    }\n  }\n  let value;\n  value = currentTitle;\n  if (!isEditing && !currentTitle) {\n    value = defaultTitle || title;\n  }\n  // Construct an inline style based on previously-saved height of the rendered label. Only\n  // used in multi-line contexts.\n  const editStyle = isEditing && contentBoundingRect ?\n  { height: `${contentBoundingRect.height}px` } :\n  undefined;\n  // Create a textarea when we're editing a multi-line value, otherwise create an input (which may\n  // be text or a button).\n  let titleComponent = multiLine && isEditing ? (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"textarea\", { \"data-test\": \"editable-title-input\", ref: contentRef, value: value, className: !title ? 'text-muted' : undefined, onKeyDown: handleKeyDown, onChange: handleChange, onBlur: handleBlur, onClick: handleClick, onKeyPress: handleKeyPress, placeholder: placeholder, style: editStyle }) : (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"input\", { \"data-test\": \"editable-title-input\", ref: contentRef, type: isEditing ? 'text' : 'button', value: value, className: !title ? 'text-muted' : undefined, onKeyDown: handleKeyDown, onChange: handleChange, onBlur: handleBlur, onClick: handleClick, onKeyPress: handleKeyPress, placeholder: placeholder });\n  if (showTooltip && !isEditing) {\n    titleComponent = (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(src_components_Tooltip__WEBPACK_IMPORTED_MODULE_3__.Tooltip, { id: \"title-tooltip\", title: canEdit ?\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_7__.t)('Click to edit') :\n      noPermitTooltip ||\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_7__.t)(\"You don't have the rights to alter this title.\") },\n    titleComponent);\n\n  }\n  if (!canEdit) {\n    // don't actually want an input in this case\n    titleComponent = (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"span\", { \"data-test\": \"editable-title-input\" }, value);\n  }\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"span\", _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({ \"data-test\": \"editable-title\", className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('editable-title', extraClasses, canEdit && 'editable-title--editable', isEditing && 'editable-title--editing'), style: style }, rest),\n  certifiedBy && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null,\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(StyledCertifiedBadge, { certifiedBy: certifiedBy, details: certificationDetails, size: \"xl\" }), ' '),\n\n  titleComponent);\n\n}__signature__(EditableTitle, \"useState{[isEditing, setIsEditing](editing)}\\nuseState{[currentTitle, setCurrentTitle](title)}\\nuseState{[lastTitle, setLastTitle](title)}\\nuseState{[contentBoundingRect, setContentBoundingRect](null)}\\nuseRef{contentRef}\\nuseEffect{}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledCertifiedBadge, \"StyledCertifiedBadge\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\EditableTitle\\\\index.tsx\");reactHotLoader.register(EditableTitle, \"EditableTitle\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\EditableTitle\\\\index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/EditableTitle/index.tsx\n");

/***/ }),

/***/ "./src/components/RefreshLabel/index.tsx":
/*!***********************************************!*\
  !*** ./src/components/RefreshLabel/index.tsx ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var src_components_Tooltip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components/Tooltip */ \"./src/components/Tooltip/index.tsx\");\n/* harmony import */ var src_components_Icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/Icons */ \"./src/components/Icons/index.tsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\n\nconst RefreshLabel = ({ onClick, tooltipContent }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const IconWithoutRef = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref) => (0,_emotion_react__WEBPACK_IMPORTED_MODULE_3__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Refresh, props));\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_3__.jsx)(src_components_Tooltip__WEBPACK_IMPORTED_MODULE_1__.Tooltip, { title: tooltipContent },\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_3__.jsx)(IconWithoutRef, { role: \"button\", onClick: onClick, css: (theme) => ({\n      cursor: 'pointer',\n      color: theme.colors.grayscale.base,\n      '&:hover': { color: theme.colors.primary.base } }) }));\n\n\n};const _default =\nRefreshLabel;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(RefreshLabel, \"RefreshLabel\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\RefreshLabel\\\\index.tsx\");reactHotLoader.register(_default, \"default\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\RefreshLabel\\\\index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9SZWZyZXNoTGFiZWwvaW5kZXgudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBO0FBQ0E7QUFFQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBSUE7QUFFQTtBQUlBO0FBQ0E7QUFDQTs7O0FBS0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vc3JjL2NvbXBvbmVudHMvUmVmcmVzaExhYmVsL2luZGV4LnRzeD9iMjY5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXHJcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxyXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxyXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXHJcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcclxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXHJcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxyXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxyXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxyXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcclxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xyXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCBSZWFjdCwgeyBNb3VzZUV2ZW50SGFuZGxlciwgZm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgU3VwZXJzZXRUaGVtZSB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcclxuaW1wb3J0IHsgVG9vbHRpcCB9IGZyb20gJ3NyYy9jb21wb25lbnRzL1Rvb2x0aXAnO1xyXG5pbXBvcnQgSWNvbnMsIHsgSWNvblR5cGUgfSBmcm9tICdzcmMvY29tcG9uZW50cy9JY29ucyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFJlZnJlc2hMYWJlbFByb3BzIHtcclxuICBvbkNsaWNrOiBNb3VzZUV2ZW50SGFuZGxlcjxIVE1MU3BhbkVsZW1lbnQ+O1xyXG4gIHRvb2x0aXBDb250ZW50OiBzdHJpbmc7XHJcbn1cclxuXHJcbmNvbnN0IFJlZnJlc2hMYWJlbCA9ICh7IG9uQ2xpY2ssIHRvb2x0aXBDb250ZW50IH06IFJlZnJlc2hMYWJlbFByb3BzKSA9PiB7XHJcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xyXG4gIGNvbnN0IEljb25XaXRob3V0UmVmID0gZm9yd2FyZFJlZigocHJvcHM6IEljb25UeXBlLCByZWY6IGFueSkgPT4gKFxyXG4gICAgPEljb25zLlJlZnJlc2ggey4uLnByb3BzfSAvPlxyXG4gICkpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFRvb2x0aXAgdGl0bGU9e3Rvb2x0aXBDb250ZW50fT5cclxuICAgICAgPEljb25XaXRob3V0UmVmXHJcbiAgICAgICAgcm9sZT1cImJ1dHRvblwiXHJcbiAgICAgICAgb25DbGljaz17b25DbGlja31cclxuICAgICAgICBjc3M9eyh0aGVtZTogU3VwZXJzZXRUaGVtZSkgPT4gKHtcclxuICAgICAgICAgIGN1cnNvcjogJ3BvaW50ZXInLFxyXG4gICAgICAgICAgY29sb3I6IHRoZW1lLmNvbG9ycy5ncmF5c2NhbGUuYmFzZSxcclxuICAgICAgICAgICcmOmhvdmVyJzogeyBjb2xvcjogdGhlbWUuY29sb3JzLnByaW1hcnkuYmFzZSB9LFxyXG4gICAgICAgIH0pfVxyXG4gICAgICAvPlxyXG4gICAgPC9Ub29sdGlwPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBSZWZyZXNoTGFiZWw7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/RefreshLabel/index.tsx\n");

/***/ }),

/***/ "./src/components/TableSelector/index.tsx":
/*!************************************************!*\
  !*** ./src/components/TableSelector/index.tsx ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TableSelectorMultiple\": () => (/* binding */ TableSelectorMultiple),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime-corejs3/helpers/extends */ \"./node_modules/@babel/runtime-corejs3/helpers/extends.js\");\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/connection/SupersetClient.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var src_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components */ \"./src/components/index.ts\");\n/* harmony import */ var src_components_Form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/Form */ \"./src/components/Form/index.tsx\");\n/* harmony import */ var src_components_Icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/Icons */ \"./src/components/Icons/index.tsx\");\n/* harmony import */ var src_components_DatabaseSelector__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/DatabaseSelector */ \"./src/components/DatabaseSelector/index.tsx\");\n/* harmony import */ var src_components_RefreshLabel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/components/RefreshLabel */ \"./src/components/RefreshLabel/index.tsx\");\n/* harmony import */ var src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/components/CertifiedBadge */ \"./src/components/CertifiedBadge/index.tsx\");\n/* harmony import */ var src_components_WarningIconWithTooltip__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/components/WarningIconWithTooltip */ \"./src/components/WarningIconWithTooltip/index.tsx\");\n/* harmony import */ var src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/components/MessageToasts/withToasts */ \"./src/components/MessageToasts/withToasts.tsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\n\n\n\n\n\n\n\n\nconst TableSelectorWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_10__.styled.div`\n  ${({ theme }) => `\n    .refresh {\n      display: flex;\n      align-items: center;\n      width: 30px;\n      margin-left: ${theme.gridUnit}px;\n      margin-top: ${theme.gridUnit * 5}px;\n    }\n\n    .section {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n    }\n\n    .divider {\n      border-bottom: 1px solid ${theme.colors.secondary.light5};\n      margin: 15px 0;\n    }\n\n    .table-length {\n      color: ${theme.colors.grayscale.light1};\n    }\n\n    .select {\n      flex: 1;\n    }\n  `}\n`;\nconst TableLabel = _superset_ui_core__WEBPACK_IMPORTED_MODULE_10__.styled.span`\n  align-items: center;\n  display: flex;\n  white-space: nowrap;\n\n  svg,\n  small {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\nconst TableOption = ({ table }) => {\n  const { label, type, extra } = table;\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(TableLabel, { title: label },\n  type === 'view' ? (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Eye, { iconSize: \"m\" }) : (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Table, { iconSize: \"m\" }),\n  (extra == null ? void 0 : extra.certification) && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { certifiedBy: extra.certification.certified_by, details: extra.certification.details, size: \"l\" }),\n  (extra == null ? void 0 : extra.warning_markdown) && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(src_components_WarningIconWithTooltip__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { warningMarkdown: extra.warning_markdown, size: \"l\" }),\n  label);\n\n};\nconst TableSelector = ({ database, emptyState, formMode = false, getDbList, handleError, isDatabaseSelectEnabled = true, onDbChange, onSchemaChange, onSchemasLoad, onTablesLoad, readOnly = false, onEmptyResults, schema, sqlLabMode = true, tableSelectMode = 'single', tableValue = undefined, onTableSelectChange }) => {\n  const [currentDatabase, setCurrentDatabase] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(database);\n  const [currentSchema, setCurrentSchema] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(schema);\n  const [tableOptions, setTableOptions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n  const [tableSelectValue, setTableSelectValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(undefined);\n  const [refresh, setRefresh] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n  const [previousRefresh, setPreviousRefresh] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n  const [loadingTables, setLoadingTables] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const { addSuccessToast } = (0,src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_9__.useToasts)();\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    // reset selections\n    if (database === undefined) {\n      setCurrentDatabase(undefined);\n      setCurrentSchema(undefined);\n      setTableSelectValue(undefined);\n    }\n  }, [database, tableSelectMode]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (tableSelectMode === 'single') {\n      setTableSelectValue(tableOptions.find((option) => option.value === tableValue));\n    } else\n    {\n      setTableSelectValue((tableOptions == null ? void 0 : tableOptions.filter((option) => option && (tableValue == null ? void 0 : tableValue.includes(option.value)))) || []);\n    }\n  }, [tableOptions, tableValue, tableSelectMode]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (currentDatabase && currentSchema) {\n      setLoadingTables(true);\n      const encodedSchema = encodeURIComponent(currentSchema);\n      const forceRefresh = refresh !== previousRefresh;\n      // TODO: Would be nice to add pagination in a follow-up. Needs endpoint changes.\n      const endpoint = encodeURI(`/superset/tables/${currentDatabase.id}/${encodedSchema}/undefined/${forceRefresh}/`);\n      if (previousRefresh !== refresh) {\n        setPreviousRefresh(refresh);\n      }\n      _superset_ui_core__WEBPACK_IMPORTED_MODULE_12__[\"default\"].get({ endpoint }).\n      then(({ json }) => {\n        const options = json.options.map((table) => {\n          const option = {\n            value: table.value,\n            label: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(TableOption, { table: table }),\n            text: table.label };\n\n          return option;\n        });\n        onTablesLoad == null ? void 0 : onTablesLoad(json.options);\n        setTableOptions(options);\n        setLoadingTables(false);\n        if (forceRefresh)\n        addSuccessToast('List updated');\n      }).\n      catch(() => {\n        setLoadingTables(false);\n        handleError((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_13__.t)('There was an error loading the tables'));\n      });\n    }\n    // We are using the refresh state to re-trigger the query\n    // previousRefresh should be out of dependencies array\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentDatabase, currentSchema, onTablesLoad, setTableOptions, refresh]);\n  function renderSelectRow(select, refreshBtn) {\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(\"div\", { className: \"section\" },\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(\"span\", { className: \"select\" }, select),\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(\"span\", { className: \"refresh\" }, refreshBtn));\n\n  }\n  const internalTableChange = (selectedOptions) => {\n    if (currentSchema) {\n      onTableSelectChange == null ? void 0 : onTableSelectChange(Array.isArray(selectedOptions) ?\n      selectedOptions.map((option) => option == null ? void 0 : option.value) :\n      selectedOptions == null ? void 0 : selectedOptions.value, currentSchema);\n    } else\n    {\n      setTableSelectValue(selectedOptions);\n    }\n  };\n  const internalDbChange = (db) => {\n    setCurrentDatabase(db);\n    if (onDbChange) {\n      onDbChange(db);\n    }\n  };\n  const internalSchemaChange = (schema) => {\n    setCurrentSchema(schema);\n    if (onSchemaChange) {\n      onSchemaChange(schema);\n    }\n    internalTableChange(undefined);\n  };\n  function renderDatabaseSelector() {\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(src_components_DatabaseSelector__WEBPACK_IMPORTED_MODULE_5__[\"default\"], { key: currentDatabase == null ? void 0 : currentDatabase.id, db: currentDatabase, emptyState: emptyState, formMode: formMode, getDbList: getDbList, handleError: handleError, onDbChange: readOnly ? undefined : internalDbChange, onEmptyResults: onEmptyResults, onSchemaChange: readOnly ? undefined : internalSchemaChange, onSchemasLoad: onSchemasLoad, schema: currentSchema, sqlLabMode: sqlLabMode, isDatabaseSelectEnabled: isDatabaseSelectEnabled && !readOnly, readOnly: readOnly });\n  }\n  const handleFilterOption = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (search, option) => {\n    const searchValue = search.trim().toLowerCase();\n    const { text } = option;\n    return text.toLowerCase().includes(searchValue);\n  }, []);\n  function renderTableSelect() {\n    const disabled = currentSchema && !formMode && readOnly ||\n    !currentSchema && !(database != null && database.allow_multi_schema_metadata_fetch);\n    const header = sqlLabMode ? (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_3__.FormLabel, null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_13__.t)('See table schema')) : (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_3__.FormLabel, null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_13__.t)('Table'));\n    const select = (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_2__.Select, { ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_13__.t)('Select table or type table name'), disabled: disabled, filterOption: handleFilterOption, header: header, labelInValue: true, lazyLoading: false, loading: loadingTables, name: \"select-table\", onChange: (options) => internalTableChange(options), options: tableOptions, placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_13__.t)('Select table or type table name'), showSearch: true, mode: tableSelectMode, value: tableSelectValue, allowClear: tableSelectMode === 'multiple' });\n    const refreshLabel = !formMode && !readOnly && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(src_components_RefreshLabel__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { onClick: () => setRefresh(refresh + 1), tooltipContent: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_13__.t)('Force refresh table list') });\n    return renderSelectRow(select, refreshLabel);\n  }\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(TableSelectorWrapper, null,\n  renderDatabaseSelector(),\n  sqlLabMode && !formMode && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(\"div\", { className: \"divider\" }),\n  renderTableSelect());\n\n};__signature__(TableSelector, \"useState{[currentDatabase, setCurrentDatabase](database)}\\nuseState{[currentSchema, setCurrentSchema](schema)}\\nuseState{[tableOptions, setTableOptions]([])}\\nuseState{[tableSelectValue, setTableSelectValue](undefined)}\\nuseState{[refresh, setRefresh](0)}\\nuseState{[previousRefresh, setPreviousRefresh](0)}\\nuseState{[loadingTables, setLoadingTables](false)}\\nuseToasts{{ addSuccessToast }}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\\nuseMemo{handleFilterOption}\", () => [src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_9__.useToasts]);\nconst TableSelectorMultiple = (props) => (0,_emotion_react__WEBPACK_IMPORTED_MODULE_11__.jsx)(TableSelector, _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({ tableSelectMode: \"multiple\" }, props));const _default =\nTableSelector;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TableSelectorWrapper, \"TableSelectorWrapper\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\TableSelector\\\\index.tsx\");reactHotLoader.register(TableLabel, \"TableLabel\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\TableSelector\\\\index.tsx\");reactHotLoader.register(TableOption, \"TableOption\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\TableSelector\\\\index.tsx\");reactHotLoader.register(TableSelector, \"TableSelector\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\TableSelector\\\\index.tsx\");reactHotLoader.register(TableSelectorMultiple, \"TableSelectorMultiple\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\TableSelector\\\\index.tsx\");reactHotLoader.register(_default, \"default\", \"D:\\\\work\\\\PublicProject\\\\superset\\\\superset-frontend\\\\src\\\\components\\\\TableSelector\\\\index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/TableSelector/index.tsx\n");

/***/ })

}]);